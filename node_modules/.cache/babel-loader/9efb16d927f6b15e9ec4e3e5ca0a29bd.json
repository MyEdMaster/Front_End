{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vivian/Desktop/frondend/src/page/ComplexNumber/Page/ask-question/index.js\";\nimport React from 'react';\nimport classes from './index.module.css';\nimport { MDBBtn, MDBCard, MDBIcon, MDBModal, MDBModalBody } from 'mdbreact';\nimport { handleSyn } from \"../../../RRH/Component/speech-syn\";\nimport { cancelSyn } from \"../../../RRH/Component/speech-syn\";\nimport q from '../../Lib/question-mark.jpg';\nimport { url } from \"../../../../tool/fetch-help\";\nimport Joyride from 'react-joyride'; //------------------------SPEECH RECOGNITION-----------------------------\n\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition; // const SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;\n\nvar recognition = new SpeechRecognition();\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\nexport var AskQuestionComplex =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AskQuestionComplex, _React$Component);\n\n  function AskQuestionComplex(props) {\n    var _this;\n\n    _classCallCheck(this, AskQuestionComplex);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AskQuestionComplex).call(this, props));\n\n    _this.myClick = function (text) {\n      alert(text);\n    };\n\n    _this.toggle = function (nr) {\n      return function () {\n        var _this$setState;\n\n        cancelSyn();\n        var modalNumber = 'modal' + nr;\n\n        _this.setState((_this$setState = {}, _defineProperty(_this$setState, modalNumber, !_this.state[modalNumber]), _defineProperty(_this$setState, \"answer\", ''), _this$setState));\n      };\n    };\n\n    _this.Button = function (text) {\n      if (text === 1 && _this.state.backend.example1_exist === '1') {\n        return React.createElement(MDBBtn, {\n          color: \"white\",\n          size: \"sm\",\n          className: \"py-0\",\n          style: {\n            borderRadius: '5px'\n          },\n          onClick: function onClick() {\n            _this.setState({\n              example: 'e.g.' + _this.state.backend.example1\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"show example\");\n      }\n\n      if (text === 2 && _this.state.backend.example2_exist === '1') {\n        return React.createElement(MDBBtn, {\n          color: \"white\",\n          size: \"sm\",\n          className: \"py-0\",\n          style: {\n            borderRadius: '5px'\n          },\n          onClick: function onClick() {\n            _this.setState({\n              example: 'e.g.' + _this.state.backend.example2\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"show example\");\n      }\n\n      if (text === 3 && _this.state.backend.example3_exist === '1') {\n        return React.createElement(MDBBtn, {\n          color: \"white\",\n          size: \"sm\",\n          className: \"py-0\",\n          style: {\n            borderRadius: '5px'\n          },\n          onClick: function onClick() {\n            _this.setState({\n              example: 'e.g.' + _this.state.backend.example3\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"show example\");\n      }\n    };\n\n    _this.searchAnswer = function (value) {\n      cancelSyn();\n      var option = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: value\n        })\n      };\n      fetch(\"\".concat(url, \"/ask_question/p2\"), option).then(function (response) {\n        return response.json();\n      }).then(function (answer) {\n        _this.setState({\n          backend: answer\n        });\n\n        switch (answer.type) {\n          case '1':\n            _this.setState({\n              hints: '',\n              answer: answer.answer1,\n              tag: 1,\n              example: _this.Button(1)\n            });\n\n            handleSyn(answer.answer1.replace('?', '.'));\n            break;\n\n          case '2':\n            _this.setState({\n              hints: 'Which is this the question you want to ask?',\n              q1: answer.question1,\n              q2: answer.question2,\n              q3: answer.question3,\n              tag: 2\n            });\n\n            handleSyn('Which is this the question you want to ask?');\n            break;\n\n          case '3':\n            _this.setState({\n              hints: 'The words don not add up',\n              tag: 3,\n              example: ''\n            });\n\n            handleSyn('The words don not add up');\n        }\n      });\n    };\n\n    _this.state = {\n      backend: '',\n      modal1: false,\n      modal2: false,\n      redQuestion: '',\n      wolfQuestion: '',\n      answer: '',\n      q1: '',\n      q2: '',\n      q3: '',\n      change: false,\n      tag: 0,\n      button: '',\n      example: '',\n      defaultQuestion: '',\n      listening: false,\n      speechState: 'Click to start...',\n      hints: '',\n      steps: [{\n        target: \".rrh\",\n        content: \"Click here to ask questions\"\n      }, {\n        target: \".bbw\",\n        content: \"Click here to ask Big Bad Wolf questions\"\n      }]\n    };\n    _this.toggleListen = _this.toggleListen.bind(_assertThisInitialized(_this));\n    _this.handleListen = _this.handleListen.bind(_assertThisInitialized(_this));\n    _this.Button = _this.Button.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AskQuestionComplex, [{\n    key: \"toggleListen\",\n    //--------------Speech Recognition--------------\n    value: function toggleListen() {\n      cancelSyn();\n      this.setState({\n        listening: !this.state.listening\n      }, this.handleListen);\n    }\n  }, {\n    key: \"handleListen\",\n    value: function handleListen() {\n      var _this2 = this;\n\n      console.log('listening?', this.state.listening);\n\n      if (this.state.listening) {\n        recognition.start();\n\n        recognition.onend = function () {\n          _this2.setState({\n            speechState: '...continue listening...'\n          });\n\n          recognition.start();\n        };\n      } else {\n        recognition.stop();\n\n        recognition.onend = function () {\n          _this2.setState({\n            speechState: 'Click to start...'\n          });\n        };\n      }\n\n      recognition.onstart = function () {\n        _this2.setState({\n          speechState: 'Listening...Click to pause'\n        });\n      };\n\n      var finalTranscript = '';\n\n      recognition.onresult = function (event) {\n        var interimTranscript = '';\n\n        for (var i = event.resultIndex; i < event.results.length; i++) {\n          var transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) finalTranscript += transcript + ' ';else interimTranscript += transcript;\n        }\n\n        if (_this2.state.modal1) {\n          _this2.setState({\n            redQuestion: finalTranscript\n          });\n        } else if (_this2.state.modal2) {\n          _this2.setState({\n            wolfQuestion: finalTranscript\n          });\n        }\n\n        document.getElementById('interim').innerHTML = interimTranscript;\n        document.getElementById('final').value = finalTranscript; //-------------------------COMMANDS------------------------------------\n\n        var transcriptArr = finalTranscript.split(' ');\n        var stopCmd = transcriptArr.slice(-3, -1);\n        console.log('stopCmd', stopCmd);\n\n        if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening') {\n          recognition.stop();\n\n          recognition.onend = function () {\n            console.log('Stopped listening per command');\n            var finalText = transcriptArr.slice(0, -3).join(' ');\n            document.getElementById('final').value = finalText;\n          };\n        }\n      }; //-----------------------------------------------------------------------\n\n\n      recognition.onerror = function (event) {\n        console.log(\"Error occurred in recognition: \" + event.error);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var steps = this.state.steps;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Joyride, {\n        steps: steps,\n        continuous: true,\n        scrollToFirstStep: true,\n        scrollToSteps: false,\n        styles: {\n          marginTop: '4000px',\n          options: {\n            primaryColor: '#7e57c2',\n            zIndex: 1000\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.fixed1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button button rrh\",\n        onClick: this.toggle(2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: q,\n        alt: \"Little Red Riding Hood\",\n        height: \"75\",\n        width: \"75\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }))), React.createElement(MDBModal, {\n        isOpen: this.state.modal2,\n        toggle: this.toggle(2),\n        centered: true,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(MDBModalBody, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title,\n        style: {\n          color: '#7e57c2',\n          borderColor: '#7e57c2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"TRY ASKING A QUESTION\")), this.state.tag === 2 ? null : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-center align-content-center mt-5 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-grow-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"final\",\n        className: \"form-control form-control-lg \".concat(classes.searchInput),\n        placeholder: \"Ask your question here\",\n        style: {\n          borderStyle: 'solid',\n          borderWidth: '1px',\n          borderColor: '#7e57c2',\n          borderRadius: '15px',\n          fontFamily: '\\'Rajdhani\\', sans-serif',\n          fontSize: '20px'\n        },\n        onChange: function onChange(e) {\n          var str = e.target.value;\n\n          _this3.setState({\n            wolfQuestion: str\n          });\n        },\n        onKeyDown: function onKeyDown(e) {\n          if (e.keyCode === 13) {\n            if (_this3.state.wolfQuestion === '') {\n              alert('Please input your question');\n            } else {\n              _this3.searchAnswer(_this3.state.wolfQuestion);\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ml-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        color: \"green\",\n        style: {\n          margin: '6px'\n        },\n        onClick: function onClick() {\n          if (_this3.state.wolfQuestion === '') {\n            alert('Please input your question');\n          } else {\n            _this3.searchAnswer(_this3.state.wolfQuestion);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"ml-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        color: \"purple lighten-2\",\n        style: {\n          margin: '6px'\n        },\n        onClick: this.toggleListen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"microphone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: classes.speechBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.body,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, this.state.speechState), React.createElement(\"div\", {\n        id: \"interim\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100 purple lighten-2\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          borderStyle: 'solid',\n          borderColor: 'white',\n          borderWidth: '0 0 1px 0'\n        },\n        className: classes.pb1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"Hints/Answer\"), this.state.tag === 2 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.pb3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, this.state.hints), React.createElement(\"div\", {\n        onClick: function onClick() {\n          _this3.setState({\n            tag: 1,\n            hints: '',\n            answer: _this3.state.backend.answer1,\n            example: _this3.Button(1)\n          });\n\n          handleSyn(_this3.state.backend.answer1);\n        },\n        className: classes[\"select-ques2\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, this.state.q1), React.createElement(\"div\", {\n        onClick: function onClick() {\n          _this3.setState({\n            tag: 1,\n            hints: '',\n            answer: _this3.state.backend.answer2,\n            example: _this3.Button(2)\n          });\n\n          handleSyn(_this3.state.backend.answer2);\n        },\n        className: classes[\"select-ques2\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, this.state.q2), React.createElement(\"div\", {\n        onClick: function onClick() {\n          _this3.setState({\n            tag: 1,\n            hints: '',\n            answer: _this3.state.backend.answer3,\n            example: _this3.Button(3)\n          });\n\n          handleSyn(_this3.state.backend.answer3);\n        },\n        className: classes[\"select-ques2\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, this.state.q3), React.createElement(\"div\", {\n        onClick: function onClick() {\n          _this3.setState({\n            tag: 1,\n            hints: 'Could you rephrase the question？',\n            answer: '',\n            example: ''\n          });\n\n          handleSyn('Could you rephrase the question');\n        },\n        className: classes[\"select-ques2\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"None of above\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.pb3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, this.state.hints), React.createElement(\"p\", {\n        className: classes.pb2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, this.state.answer, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, this.state.button)), React.createElement(\"p\", {\n        className: classes.pb4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, this.state.example)))))));\n    }\n  }]);\n\n  return AskQuestionComplex;\n}(React.Component);","map":{"version":3,"sources":["/Users/vivian/Desktop/frondend/src/page/ComplexNumber/Page/ask-question/index.js"],"names":["React","classes","MDBBtn","MDBCard","MDBIcon","MDBModal","MDBModalBody","handleSyn","cancelSyn","q","url","Joyride","SpeechRecognition","window","webkitSpeechRecognition","recognition","continous","interimResults","lang","AskQuestionComplex","props","myClick","text","alert","toggle","nr","modalNumber","setState","state","Button","backend","example1_exist","borderRadius","example","example1","example2_exist","example2","example3_exist","example3","searchAnswer","value","option","method","headers","body","JSON","stringify","question","fetch","then","response","json","answer","type","hints","answer1","tag","replace","q1","question1","q2","question2","q3","question3","modal1","modal2","redQuestion","wolfQuestion","change","button","defaultQuestion","listening","speechState","steps","target","content","toggleListen","bind","handleListen","console","log","start","onend","stop","onstart","finalTranscript","onresult","event","interimTranscript","i","resultIndex","results","length","transcript","isFinal","document","getElementById","innerHTML","transcriptArr","split","stopCmd","slice","finalText","join","onerror","error","marginTop","options","primaryColor","zIndex","fixed1","title","color","borderColor","searchInput","borderStyle","borderWidth","fontFamily","fontSize","e","str","keyCode","margin","speechBorder","boxShadow","pb1","pb3","answer2","answer3","pb2","pb4","Component"],"mappings":"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","sourcesContent":["'use strict'\nimport React from 'react';\nimport classes from './index.module.css';\n\nimport {MDBBtn, MDBCard,MDBIcon, MDBModal, MDBModalBody} from 'mdbreact';\nimport {handleSyn} from \"../../../RRH/Component/speech-syn\";\nimport {cancelSyn} from \"../../../RRH/Component/speech-syn\";\nimport q from '../../Lib/question-mark.jpg'\nimport {url} from \"../../../../tool/fetch-help\";\nimport Joyride from 'react-joyride';\n\n//------------------------SPEECH RECOGNITION-----------------------------\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n// const SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\n\n\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n\n\nexport class AskQuestionComplex extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            backend:'',\n            modal1: false,\n            modal2: false,\n            redQuestion:'',\n            wolfQuestion:'',\n            answer:'',\n            q1:'',\n            q2:'',\n            q3:'',\n            change:false,\n            tag:0,\n            button:'',\n            example:'',\n            defaultQuestion:'',\n            listening: false,\n            speechState:'Click to start...',\n            hints:'',\n            steps: [\n                {\n                    target: \".rrh\",\n                    content: \"Click here to ask questions\"\n                },\n                {\n                    target: \".bbw\",\n                    content: \"Click here to ask Big Bad Wolf questions\"\n                }\n            ]\n\n        };\n        this.toggleListen = this.toggleListen.bind(this)\n        this.handleListen = this.handleListen.bind(this)\n        this.Button = this.Button.bind(this)\n\n    }\n    myClick=(text)=>{\n        alert(text);\n    }\n\n    toggle = nr => () => {\n        cancelSyn()\n        let modalNumber = 'modal' + nr\n        this.setState({\n            [modalNumber]: !this.state[modalNumber],\n            answer:''\n        });\n    }\n    Button = (text) => {\n        if (text === 1 && this.state.backend.example1_exist === '1') {\n                return (\n                    <MDBBtn\n                        color='white'\n                        size='sm'\n                        className='py-0'\n                        style={{borderRadius: '5px'}}\n                        onClick={() => {\n                                this.setState({\n                                    example: 'e.g.'+ this.state.backend.example1\n                                })\n                        }}\n                    >\n                        show example\n                    </MDBBtn>\n                )\n        }\n        if (text === 2 && this.state.backend.example2_exist === '1') {\n            return (\n                <MDBBtn\n                    color='white'\n                    size='sm'\n                    className='py-0'\n                    style={{borderRadius: '5px'}}\n                    onClick={() => {\n                        this.setState({\n                            example: 'e.g.'+ this.state.backend.example2\n                        })\n                    }}\n                >\n                    show example\n                </MDBBtn>\n            )\n        }\n        if (text === 3 && this.state.backend.example3_exist === '1') {\n            return (\n                <MDBBtn\n                    color='white'\n                    size='sm'\n                    className='py-0'\n                    style={{borderRadius: '5px'}}\n                    onClick={() => {\n                        this.setState({\n                            example: 'e.g.'+ this.state.backend.example3\n                        })\n                    }}\n                >\n                    show example\n                </MDBBtn>\n            )\n        }\n    };\n\n    searchAnswer=(value)=>{\n        cancelSyn()\n        const option={\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body:JSON.stringify({question:value})\n        };\n        fetch(`${url}/ask_question/p2`,option)\n            .then(response=>response.json())\n            .then(answer=>{\n                this.setState({\n                    backend:answer\n                })\n                switch (answer.type) {\n                    case '1':\n                        this.setState({\n                            hints:'',\n                            answer:answer.answer1,\n                            tag:1,\n                            example:this.Button(1)\n                        });\n                        handleSyn((answer.answer1.replace('?', '.')));\n                        break;\n                    case '2':\n                        this.setState({\n                            hints:'Which is this the question you want to ask?',\n                            q1:answer.question1,\n                            q2:answer.question2,\n                            q3:answer.question3,\n                            tag:2,\n                        });\n                        handleSyn('Which is this the question you want to ask?');\n\n                        break;\n                    case '3':\n                        this.setState({\n                            hints:'The words don not add up',\n                            tag:3,\n                            example:''\n                        });\n                        handleSyn('The words don not add up')\n                }\n\n            })\n\n    };\n    //--------------Speech Recognition--------------\n    toggleListen() {\n        cancelSyn()\n        this.setState({\n            listening: !this.state.listening\n        }, this.handleListen)\n    }\n\n    handleListen() {\n\n        console.log('listening?', this.state.listening)\n\n        if (this.state.listening) {\n            recognition.start();\n            recognition.onend = () => {\n                this.setState({\n                    speechState:'...continue listening...'\n                });\n                recognition.start()\n            }\n\n        } else {\n            recognition.stop();\n            recognition.onend = () => {\n                this.setState({\n                    speechState:'Click to start...'\n                });\n            }\n        }\n\n        recognition.onstart = () => {\n            this.setState({\n                speechState:'Listening...Click to pause'\n            });\n        }\n\n        let finalTranscript = '';\n        recognition.onresult = event => {\n            let interimTranscript = '';\n\n            for (let i = event.resultIndex; i < event.results.length; i++) {\n                const transcript = event.results[i][0].transcript;\n                if (event.results[i].isFinal) finalTranscript += transcript + ' ';\n                else interimTranscript += transcript;\n            }\n            if (this.state.modal1){\n                this.setState({\n                    redQuestion:finalTranscript\n                })\n            }\n            else if(this.state.modal2){\n                this.setState({\n                    wolfQuestion:finalTranscript\n                })\n            }\n            document.getElementById('interim').innerHTML = interimTranscript;\n            document.getElementById('final').value = finalTranscript;\n\n            //-------------------------COMMANDS------------------------------------\n\n            const transcriptArr = finalTranscript.split(' ');\n            const stopCmd = transcriptArr.slice(-3, -1);\n            console.log('stopCmd', stopCmd);\n\n            if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening'){\n                recognition.stop();\n                recognition.onend = () => {\n                    console.log('Stopped listening per command');\n                    const finalText = transcriptArr.slice(0, -3).join(' ');\n                    document.getElementById('final').value = finalText\n                }\n            }\n        }\n\n        //-----------------------------------------------------------------------\n\n        recognition.onerror = event => {\n            console.log(\"Error occurred in recognition: \" + event.error)\n        }\n\n    }\n\n    render() {\n        const { steps } = this.state;\n        return (\n            <div>\n                <Joyride\n                    steps={steps}\n                    continuous={true}\n                    scrollToFirstStep={true}\n                    scrollToSteps={false}\n                    styles={{\n                        marginTop:'4000px',\n                        options: {\n\n                            primaryColor: '#7e57c2',\n                            zIndex: 1000,\n                        }\n                    }}\n                />\n\n                <div className={classes.fixed1}>\n                    <button className=\"button button rrh\" onClick={this.toggle(2)}>\n                        <img src={q} alt=\"Little Red Riding Hood\" height=\"75\" width=\"75\"/></button>\n                </div>\n\n\n                <MDBModal isOpen={this.state.modal2} toggle={this.toggle(2)} centered size=\"lg\">\n\n                    <MDBModalBody className=\"text-center\">\n                        <div className={classes.title} style={{color:'#7e57c2', borderColor:'#7e57c2'}}>\n                            <span>TRY ASKING A QUESTION</span>\n                        </div>\n                        {this.state.tag===2?(null):(\n                            <div>\n                                <div className=\"d-flex justify-content-center align-content-center mt-5 mb-3\">\n                                    <div className=\"flex-grow-1\">\n                                        <input\n                                            id='final'\n                                            className={`form-control form-control-lg ${classes.searchInput}`}\n                                            placeholder=\"Ask your question here\"\n                                            style={{\n                                                borderStyle:'solid',\n                                                borderWidth:'1px',\n                                                borderColor:'#7e57c2',\n                                                borderRadius:'15px',\n                                                fontFamily:'\\'Rajdhani\\', sans-serif',\n                                                fontSize:'20px',\n                                            }}\n                                            onChange={(e) => {\n                                                const str=e.target.value\n                                                this.setState({\n                                                    wolfQuestion: str\n                                                });\n                                            }}\n                                            onKeyDown={(e) =>{\n                                                if(e.keyCode===13){\n                                                    if(this.state.wolfQuestion===''){\n                                                        alert('Please input your question')\n                                                    }\n                                                    else{\n                                                        this.searchAnswer(this.state.wolfQuestion)\n                                                    }}\n                                            }\n                                            }\n                                        />\n                                    </div>\n                                    <div className=\"ml-3\">\n                                        <MDBBtn\n                                            tag=\"a\" floating color=\"green\" style={{margin:'6px'}}\n                                            onClick={()=>{\n                                                if(this.state.wolfQuestion===''){\n                                                    alert('Please input your question')\n                                                }\n                                                else{\n                                                    this.searchAnswer(this.state.wolfQuestion)\n                                                }}\n                                            }\n                                        >\n                                            <MDBIcon icon=\"question\" />\n                                        </MDBBtn>\n                                    </div>\n                                    <div className=\"ml-1\">\n                                        <MDBBtn\n                                            tag=\"a\" floating color=\"purple lighten-2\" style={{margin:'6px'}}\n                                            onClick={this.toggleListen}\n                                        >\n                                            <MDBIcon icon=\"microphone\" />\n                                        </MDBBtn>\n\n                                    </div>\n                                </div>\n                                <div className={classes.speechBorder}>\n                                    <div className={classes.body}>{this.state.speechState}</div>\n                                    <div id='interim'></div>\n                                </div>\n                            </div>\n                        )}\n\n                        <div className=\"mt-3\">\n                            <MDBCard\n                                size=\"8\"\n                                text=\"white\"\n                                className=\"py-3 px-3 w-100 purple lighten-2\"\n                                style={{boxShadow:'none', borderRadius:'15px',}}\n                            >\n                                <p\n                                    style={{borderStyle:'solid',borderColor:'white',borderWidth:'0 0 1px 0'}}\n                                    className={classes.pb1}\n                                >Hints/Answer</p>\n\n                                {this.state.tag===2? (\n                                    <div>\n                                        <p className={classes.pb3}>{this.state.hints}</p>\n                                        <div\n                                            onClick={()=>{\n                                                this.setState({\n                                                    tag:1,\n                                                    hints:'',\n                                                    answer:this.state.backend.answer1,\n                                                    example:this.Button(1),\n                                                })\n                                                handleSyn(this.state.backend.answer1)\n                                            }}\n                                            className={classes[\"select-ques2\"]}\n                                        >\n                                            {this.state.q1}\n                                        </div>\n                                        <div\n                                            onClick={()=>{\n                                                this.setState({\n                                                    tag:1,\n                                                    hints:'',\n                                                    answer:this.state.backend.answer2,\n                                                    example:this.Button(2)\n                                                })\n                                                handleSyn(this.state.backend.answer2)\n                                            }}\n                                            className={classes[\"select-ques2\"]}\n                                        >\n                                            {this.state.q2}\n                                        </div>\n                                        <div\n                                            onClick={()=>{\n                                                this.setState({\n                                                    tag:1,\n                                                    hints:'',\n                                                    answer:this.state.backend.answer3,\n                                                    example:this.Button(3)\n                                                })\n                                                handleSyn(this.state.backend.answer3)\n                                            }}\n                                            className={classes[\"select-ques2\"]}\n                                        >\n                                            {this.state.q3}\n                                        </div>\n                                        <div\n                                            onClick={()=>{\n                                                this.setState({\n                                                    tag:1,\n                                                    hints:'Could you rephrase the question？',\n                                                    answer:'',\n                                                    example:''\n                                                })\n                                                handleSyn('Could you rephrase the question')\n                                            }}\n                                            className={classes[\"select-ques2\"]}\n                                        >\n                                            None of above\n                                        </div>\n                                    </div>\n                                ):(\n                                    <div>\n                                        <p className={classes.pb3}>{this.state.hints}</p>\n                                        <p\n                                            className={classes.pb2}\n                                        >\n                                            {this.state.answer}<span>{this.state.button}</span>\n                                        </p>\n                                        <p className={classes.pb4}>\n                                            {this.state.example}\n                                        </p>\n\n                                    </div>\n\n                                )}\n                            </MDBCard>\n\n                        </div>\n\n                    </MDBModalBody>\n                </MDBModal>\n\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}