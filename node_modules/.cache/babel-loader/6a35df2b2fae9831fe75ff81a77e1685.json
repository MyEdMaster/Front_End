{"ast":null,"code":"import _defineProperty from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vivian/Desktop/frondend/src/page/Foil/Page/page.js\";\nimport React from 'react';\nimport { Video } from \"../video-component/video\";\nimport { MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon, MDBModal, MDBInput, MDBModalFooter } from 'mdbreact';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport classes from './index.module.css';\nimport { ComplexNumberMenu } from \"./Menu\";\nimport { url } from \"../../../tool/fetch-help\";\nimport Joyride from 'react-joyride';\nexport var FoilPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FoilPage, _React$Component);\n\n  function FoilPage(props) {\n    var _this;\n\n    _classCallCheck(this, FoilPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FoilPage).call(this, props));\n\n    _this.toggle = function (nr) {\n      return function () {\n        var modalNumber = 'modal' + nr;\n\n        _this.setState(_defineProperty({}, modalNumber, !_this.state[modalNumber]));\n      };\n    };\n\n    _this.post = function () {\n      var option = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"A\": _this.state.a,\n          \"B\": _this.state.b,\n          \"C\": _this.state.c,\n          \"D\": _this.state.d,\n          \"step\": _this.state.step.toString(),\n          \"answer\": _this.state.value\n        })\n      };\n      fetch(\"\".concat(url, \"/complex_number/1\"), option).then(function (response) {\n        return response.json();\n      }).then(function (answer) {\n        _this.setState({\n          hint: answer.content\n        });\n\n        if (answer.type === '0') {\n          _this.setState({\n            isRight: false\n          });\n        } else if (answer.type === '1') {\n          var arr = _this.state.answers;\n          var step = answer.step;\n          arr.push([step, _this.state.value]);\n\n          _this.setState({\n            answers: arr,\n            step: step,\n            isRight: true,\n            value: ''\n          });\n        } else if (answer.type === '2') {\n          var _arr = _this.state.answers;\n          var _step = answer.step;\n\n          _arr.push([_step, _this.state.value]);\n\n          _this.setState({\n            answers: _arr,\n            step: _step,\n            isRight: true,\n            value: '',\n            finish: true,\n            finishText: 'Finished! You got it.'\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      modal14: false,\n      answers: [],\n      a: '-6',\n      b: '-4',\n      c: '2',\n      d: '5',\n      value: '',\n      step: 1,\n      hint: '',\n      isRight: true,\n      finish: false,\n      finishText: '',\n      steps: [{\n        target: \".problem\",\n        placement: 'bottom',\n        content: \"Here is a complex number problem\"\n      }, {\n        target: \".add\",\n        placement: 'bottom',\n        content: \"You can add your own problem\"\n      }, {\n        target: \".submit\",\n        placement: 'bottom',\n        content: \"Submit your answer step by step (you could skip first stepï¼‰\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(FoilPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.node.scrollIntoView();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          run = _this$state.run,\n          steps = _this$state.steps;\n      return React.createElement(\"div\", {\n        ref: function ref(node) {\n          return _this2.node = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Joyride, {\n        steps: steps,\n        continuous: true //scrollToFirstStep={true}\n        ,\n        scrollToSteps: false //showOverlay={false}\n        //showStepsProgress={true}\n        //run={run}\n        ,\n        styles: {\n          options: {\n            primaryColor: '#66bb6a',\n            zIndex: 1000\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"d-flex align-items-baseline justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"FOIL: \\xA0\"), React.createElement(\"div\", {\n        className: classes.title2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Multiplying Binomials\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"8\",\n        className: classes.font3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Video, {\n        url: \"https://myedmaster.oss-us-east-1.aliyuncs.com/FOILvid2.mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Multiplying Binomials Using FOIL\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), \"What do you do when you have something that looks like this? \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"(2x+1)(3x-2)\"), \"?\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), \"Or this \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"(-2x^2y^2-5xy^2)(x+3)\"), \"?\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), \"Or this \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"(8x-4)(8x+4)\"), \"?\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), \"These are all examples of multiplying two binomials, but exactly how are you supposed to do that? Let\\u2019s take a look\\u2026\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), \"Given (x+1)(x-3), all you need to do is multiply everything in the first set of parentheses by everything in the second set of parentheses and then combine like terms.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), \"Boom.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), \"Easy, right?  Not so much.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), \"While that is exactly what you have to do, it\\u2019s much easier said than done. That\\u2019s why we use the FOIL Method.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), \"FOIL?  Yes, but not the tin foil kind of foil. FOIL stands for First, Outer, Inner, Last, and when applied to multiplying two binomials\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"It looks like this:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), \"Using the example from earlier, (x+1)(x-3),\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), \"The F refers to the First term in each binomial   (X+1)(X-3)\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), \"The O refers to the Outer terms of the binomials (X+1)(x-3)\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), \"The I refers to the Inside terms of the binomials  (x+1)(X-3)\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), \"And the L refers to the Last term in each binomial (x+1)(x-3)\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"It\\u2019s that simple. Here\\u2019s how it works. Step 1: Multiply Again, given (x+1)(x-3) F tells us to multiply the first terms x times x which equals x2 and we write that down first O tells us to multiply the outer terms x times -3 equals -3x and we write that next I tells us to multiply the inner terms 1 times x gives us x and we write that down And L tells us to multiply the last terms 1 times -3 equals -3 and we write that last\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"x2-3x+x-3 F   O   I   L\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Once you have all four FOIL terms, you\\u2019re ready for Step 2. In Step 2, you combine like terms. Remember\\u2026you\\u2019re adding or subtracting now. x2-3x+x-3 There\\u2019s only one squared term, so we just bring it down. Much of the time, the Outer and Inner terms will be like terms, so you can combine them and bring them down. And there\\u2019s nothing to combine with the last term, so it comes down and you\\u2019ve got your answer x2-2x-3 Let\\u2019s look at some examples. (2x+1)(3x-2) In this problem,\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"First times first  2x times 3x is 6x2 Outer times outer 2x times -2 is -4x Inner times inner 1 times 3x is 3x And last times last 1 times -2 is -2 6x^2-4x+3x-2\")), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"The outers and inners combine to give you -x, leaving you with 6x2-x-2 as your answer.\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"In the second example, (5x-4)(6x-3) First times first  5x times 6x is 30x2 Outer times outer 5x times -3 is -15x Inner times inner -4 times 6x is -24x And last times last -4 times -3 is +12 30x2-15x-24x+12\")), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Again, the outers and inners combine to give you -39x, so your answer is 30x2-39x+12 Notice how both answers are trinomials\\u2014they each have 3 terms. Most of the time, the product of two binomials will be a trinomial. However, that\\u2019s not always the case. Look at this example.\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"(2x+1)(3y-2) First times first  2x times 3y equals 6xy Outer times outer 2x times -2 equals -4x Inner times inner 1 times 3y equals 3y And last times last 1 times -2 equals -2 6xy-4x+3y-2\")), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Notice there are no like terms to combine, so your answer has 4 terms instead of 3.\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"In the second example, (3x+2)(3x-2) First times first  3x times 3x equals 9x2 Outer times outer 3x times -2 equals -6x Inner times inner 2 times 3x equals 6x And last times last 2 times -2 equals -4 9x2-6x+6x-4 9x2-4\")), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"The outer and inner terms cancel out each other and leave you with a binomial as your answer. Here are some problems for you to try. You can pause the video, do the problems, and when you\\u2019re done, resume the video and check your work.\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"1. (x+4)(x+2)    5. (2xy-3)(xy-2) 2. (2x-1)(3x+4)   6. (8x-3)(8x+3) 3. (x+y)(5x-1)    7. (x2+4)(x2+7) 4. (3x-5)(3x+5)   8. (-2x2y2-5xy2)(-x+3) 1. (x+4)(x+2)    5. (2xy-3)(xy-2) x+2x+4x+8    2x2y2-4xy-3xy+6 x2+6x+8    2x2y2-7xy+6 2. (2x-1)(3x+4)   6. (8x-3)(8x+3) 6x2+8x-3x-4    64x2+24x-24x-9 6x2+5x-4    64x2-9 3. (x+y)(5x-1)    7. (x2+4)(x2+7) 5x2-x+5xy-y    x4+4x2+7x2+28 X4+11x2+28 4. (3x-5)(3x+5)   8. (-2x2y2-5xy2)(-x+3) 9x2+15x-15x-25   2x3y2-6x2y2+5x2y-15xy 9x2-25\")), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"Using the FOIL method for multiplying binomials Helps ensure you multiply both terms in the first binomial by both terms in the second, Helps you keep your work organized as you solve the problem, And makes it easier to review your work for errors, So next time you\\u2019re multiplying two binomials, wrap things up quickly and easily with FOIL!\"))));\n    }\n  }]);\n\n  return FoilPage;\n}(React.Component);","map":{"version":3,"sources":["/Users/vivian/Desktop/frondend/src/page/Foil/Page/page.js"],"names":["React","Video","MDBRow","MDBCol","MDBBtn","MDBCard","MDBIcon","MDBModal","MDBInput","MDBModalFooter","InlineMath","BlockMath","classes","ComplexNumberMenu","url","Joyride","FoilPage","props","toggle","nr","modalNumber","setState","state","post","option","method","headers","body","JSON","stringify","a","b","c","d","step","toString","value","fetch","then","response","json","answer","hint","content","type","isRight","arr","answers","push","finish","finishText","modal14","steps","target","placement","node","scrollIntoView","run","options","primaryColor","zIndex","title1","title2","font3","ph","border","ph2","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Video} from \"../video-component/video\";\nimport {MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon, MDBModal, MDBInput, MDBModalFooter} from 'mdbreact'\nimport { InlineMath, BlockMath } from 'react-katex';\n\nimport classes from './index.module.css'\nimport {ComplexNumberMenu} from \"./Menu\";\nimport {url} from \"../../../tool/fetch-help\";\nimport Joyride from 'react-joyride';\n\n\nexport class FoilPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal14: false,\n            answers:[],\n            a:'-6',\n            b:'-4',\n            c:'2',\n            d:'5',\n            value:'',\n            step:1,\n            hint:'',\n            isRight:true,\n            finish:false,\n            finishText:'',\n\n            steps: [\n                {\n                    target: \".problem\",\n                    placement: 'bottom',\n                    content: \"Here is a complex number problem\"\n                },\n                {\n                    target: \".add\",\n                    placement: 'bottom',\n                    content: \"You can add your own problem\"\n                },\n                {\n                    target: \".submit\",\n                    placement: 'bottom',\n                    content: \"Submit your answer step by step (you could skip first stepï¼‰\"\n                }\n            ]\n        };\n\n    }\n    componentDidMount() {\n        this.node.scrollIntoView();\n    }\n\n    toggle = nr => () => {\n        let modalNumber = 'modal' + nr;\n        this.setState({\n            [modalNumber]: !this.state[modalNumber],\n        });\n    };\n\n    post = ()=>{\n        const option={\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body:JSON.stringify({\n                \"A\":this.state.a,\n                \"B\":this.state.b,\n                \"C\":this.state.c,\n                \"D\":this.state.d,\n                \"step\":this.state.step.toString(),\n                \"answer\":this.state.value,\n            })\n        };\n        fetch(`${url}/complex_number/1`,option)\n            .then(response=>response.json())\n            .then(answer=>{\n                this.setState({\n                    hint:answer.content\n                })\n                if (answer.type === '0'){\n                    this.setState({\n                        isRight:false\n                    })\n                }\n                else if (answer.type === '1'){\n                    let arr = this.state.answers;\n                    let step= answer.step;\n                    arr.push([step, this.state.value])\n                    this.setState({\n                        answers:arr,\n                        step:step,\n                        isRight:true,\n                        value:''\n                    })\n                }\n                else if(answer.type === '2'){\n                    let arr = this.state.answers;\n                    let step= answer.step;\n                    arr.push([step, this.state.value])\n                    this.setState({\n                        answers:arr,\n                        step:step,\n                        isRight:true,\n                        value:'',\n                        finish:true,\n                        finishText:'Finished! You got it.'\n                    })\n                }\n            })\n    }\n\n    render() {\n        const { run,steps } = this.state;\n        return (\n            <div ref={node => this.node = node}>\n                <Joyride\n                    steps={steps}\n                    continuous={true}\n                    //scrollToFirstStep={true}\n                    scrollToSteps={false}\n                    //showOverlay={false}\n                    //showStepsProgress={true}\n                    //run={run}\n                    styles={{\n                        options: {\n                            primaryColor: '#66bb6a',\n                            zIndex: 1000,\n                        }\n                    }}\n                />\n\n                <div className=\"d-flex align-items-baseline justify-content-center\">\n                    <div className={classes.title1}>\n                        FOIL: &nbsp;\n                    </div>\n                    <div className={classes.title2}>\n                        Multiplying Binomials\n                    </div>\n                </div>\n\n                <MDBRow>\n                    <MDBCol size=\"2\">\n                    </MDBCol>\n                    <MDBCol size=\"8\" className={classes.font3}>\n                        <Video url='https://myedmaster.oss-us-east-1.aliyuncs.com/FOILvid2.mp4'/>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol size=\"2\">\n\n                    </MDBCol>\n                    <MDBCol size=\"8\">\n                        <p className={classes.ph}>\n                            Multiplying Binomials Using FOIL\n                            <br/>\n\n                            What do you do when you have something that looks like this? <InlineMath>(2x+1)(3x-2)</InlineMath>?\n                            <br/>\n                            Or this <InlineMath>(-2x^2y^2-5xy^2)(x+3)</InlineMath>?\n                            <br/>\n                            Or this <InlineMath>(8x-4)(8x+4)</InlineMath>?\n                            <br/>\n                            These are all examples of multiplying two binomials, but exactly how are you supposed to do that?\n                            Letâ€™s take a lookâ€¦\n                            <br/>\n                            Given (x+1)(x-3), all you need to do is multiply everything in the first set of parentheses by everything in the second set of parentheses and then combine like terms.\n                            <br/>\n                            Boom.\n                            <br/>\n                            Easy, right?  Not so much.\n                            <br/>\n                            While that is exactly what you have to do, itâ€™s much easier said than done. Thatâ€™s why we use the FOIL Method.\n                            <br/>\n                            FOIL?  Yes, but not the tin foil kind of foil.\n                            FOIL stands for First, Outer, Inner, Last, and when applied to multiplying two binomials\n\n\n                        </p>\n                        <br/>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                It looks like this:\n                                <br/>\n                                Using the example from earlier, (x+1)(x-3),\n                                <br/>\n                                The F refers to the First term in each binomial \t\t(X+1)(X-3)\n                                <br/>\n                                The O refers to the Outer terms of the binomials\t(X+1)(x-3)\n                                <br/>\n                                The I refers to the Inside terms of the binomials\t\t(x+1)(X-3)\n                                <br/>\n                                And the L refers to the Last term in each binomial\t(x+1)(x-3)\n                                {/*<BlockMath>(8 - 6i)/(1- 3i)</BlockMath>*/}\n                            </p>\n                        </MDBRow>\n                        <br/>\n                        <p className={classes.ph}>\n                            Itâ€™s that simple.\n\n                            Hereâ€™s how it works.\n                            Step 1: Multiply\n\n                            Again, given (x+1)(x-3)\n\n                            F tells us to multiply the first terms\tx times x which equals x2 and we write that down first\n                            O tells us to multiply the outer terms\tx times -3 equals -3x and we write that next\n                            I tells us to multiply the inner terms\t1 times x gives us x and we write that down\n                            And L tells us to multiply the last terms\t1 times -3 equals -3 and we write that last\n                        </p>\n                        <p className={classes.ph}>\n                            x2-3x+x-3\n                            F   O   I   L\n                        </p>\n                        <p className={classes.ph}>\n                            Once you have all four FOIL terms, youâ€™re ready for Step 2.\n\n                            In Step 2, you combine like terms.\n                            Rememberâ€¦youâ€™re adding or subtracting now.\n\n                            x2-3x+x-3\n\n                            Thereâ€™s only one squared term, so we just bring it down.\n                            Much of the time, the Outer and Inner terms will be like terms, so you can combine them and bring them down.\n                            And thereâ€™s nothing to combine with the last term, so it comes down and youâ€™ve got your answer\n\n                            x2-2x-3\n\n                            Letâ€™s look at some examples.\n                            (2x+1)(3x-2)\n\n                            In this problem,\n\n                        </p>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                First times first\t\t2x times 3x is 6x2\n                                Outer times outer\t2x times -2 is -4x\n                                Inner times inner\t1 times 3x is 3x\n                                And last times last\t1 times -2 is -2\n                                6x^2-4x+3x-2\n\n                            </p>\n                        </MDBRow>\n                        <p className={classes.ph}>\n\n                            The outers and inners combine to give you -x, leaving you with 6x2-x-2 as your answer.\n\n                        </p>\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                In the second example, (5x-4)(6x-3)\n                                First times first\t\t5x times 6x is 30x2\n                                Outer times outer\t5x times -3 is -15x\n                                Inner times inner\t-4 times 6x is -24x\n                                And last times last\t-4 times -3 is +12\n\n                                30x2-15x-24x+12\n                            </p>\n                        </MDBRow>\n                        <p className={classes.ph}>\n                            Again, the outers and inners combine to give you -39x, so your answer is 30x2-39x+12\n\n                            Notice how both answers are trinomialsâ€”they each have 3 terms.\n\n                            Most of the time, the product of two binomials will be a trinomial. However, thatâ€™s not always the case.\n                            Look at this example.\n\n                        </p>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                (2x+1)(3y-2)\n                                First times first\t\t2x times 3y equals 6xy\n                                Outer times outer\t2x times -2 equals -4x\n                                Inner times inner\t1 times 3y equals 3y\n                                And last times last\t1 times -2 equals -2\n\n                                6xy-4x+3y-2\n\n                            </p>\n                        </MDBRow>\n                        <p className={classes.ph}>\n                            Notice there are no like terms to combine, so your answer has 4 terms instead of 3.\n                        </p>\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                In the second example, (3x+2)(3x-2)\n                                First times first\t\t3x times 3x equals 9x2\n                                Outer times outer\t3x times -2 equals -6x\n                                Inner times inner\t2 times 3x equals 6x\n                                And last times last\t2 times -2 equals -4\n\n                                9x2-6x+6x-4\n                                9x2-4\n\n                            </p>\n                        </MDBRow>\n                        <p className={classes.ph}>\n                            The outer and inner terms cancel out each other and leave you with a binomial as your answer.\n\n                            Here are some problems for you to try. You can pause the video, do the problems, and when youâ€™re done, resume the video and check your work.\n\n\n                        </p>\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                1.\t(x+4)(x+2)\t\t\t\t5. (2xy-3)(xy-2)\n\n                                2.\t(2x-1)(3x+4)\t\t\t6. (8x-3)(8x+3)\n\n                                3.\t(x+y)(5x-1)\t\t\t\t7. (x2+4)(x2+7)\n\n                                4.\t(3x-5)(3x+5)\t\t\t8. (-2x2y2-5xy2)(-x+3)\n\n\n                                1.\t(x+4)(x+2)\t\t\t\t5. (2xy-3)(xy-2)\n                                x+2x+4x+8\t\t\t\t2x2y2-4xy-3xy+6\n                                x2+6x+8\t\t\t\t2x2y2-7xy+6\n\n                                2.\t(2x-1)(3x+4)\t\t\t6. (8x-3)(8x+3)\n                                6x2+8x-3x-4\t\t\t\t64x2+24x-24x-9\n                                6x2+5x-4\t\t\t\t64x2-9\n\n                                3.\t(x+y)(5x-1)\t\t\t\t7. (x2+4)(x2+7)\n                                5x2-x+5xy-y\t\t\t\tx4+4x2+7x2+28\n                                X4+11x2+28\n\n                                4.\t(3x-5)(3x+5)\t\t\t8. (-2x2y2-5xy2)(-x+3)\n                                9x2+15x-15x-25\t\t\t2x3y2-6x2y2+5x2y-15xy\n                                9x2-25\n\n                            </p>\n                        </MDBRow>\n                        <p className={classes.ph}>\n                            Using the FOIL method for multiplying binomials\n                            Helps ensure you multiply both terms in the first binomial by both terms in the second,\n                            Helps you keep your work organized as you solve the problem,\n                            And makes it easier to review your work for errors,\n\n                            So next time youâ€™re multiplying two binomials, wrap things up quickly and easily with FOIL!\n\n                        </p>\n                    </MDBCol>\n                </MDBRow>\n                {/*<div className=\"problem\"></div>*/}\n                {/*<MDBRow center>*/}\n                    {/*<MDBCol size=\"8\" className=\"add\">*/}\n                        {/*<MDBCard*/}\n                            {/*size=\"8\"*/}\n                            {/*color=\"blue-grey\"*/}\n                            {/*text=\"white\"*/}\n                            {/*className=\"py-3 px-3 w-100\"*/}\n                            {/*style={{boxShadow:'none', borderRadius:'0'}}*/}\n                        {/*>*/}\n\n\n                            {/*<p className={`${classes.pb}`}>Problem</p>*/}\n\n                            {/*<p*/}\n                                {/*className={`${classes.pb2}`}*/}\n                                {/*style={{borderStyle:'solid',borderBottomColor:'#9e9e9e', borderWidth:'0 0 1px 0'}}*/}\n                            {/*>*/}\n                                {/*Solve the following:*/}\n                                {/*({this.state.a} + {this.state.b}i) + ({this.state.c} + {this.state.d}i).*/}\n                                {/*Begin your work by first rewriting the problem in 'Step 1' in the worksheet.*/}\n                                {/*<tr/><br/>*/}\n                            {/*</p>*/}\n                            {/*<p*/}\n                                {/*className={`${classes.pb3} add`}*/}\n\n                                {/*onClick={this.toggle(14)}*/}\n                            {/*>*/}\n                                {/*ADD YOUR OWN PROBLEM*/}\n                            {/*</p>*/}\n                        {/*</MDBCard>*/}\n\n                        {/*<MDBModal isOpen={this.state.modal14} toggle={this.toggle(14)} size=\"lg\" centered>*/}\n                            {/*<div className=\"p-3\">*/}\n                                {/*<div*/}\n                                    {/*toggle={this.toggle(14)}*/}\n\n                                    {/*style={{*/}\n                                        {/*fontFamily:'\\'Roboto\\',sans-serif',*/}\n                                        {/*fontSize:'28px',*/}\n                                        {/*fontWeight:'bolder'*/}\n                                    {/*}}*/}\n                                {/*>*/}\n                                    {/*Add Your Own Problem*/}\n                                {/*</div>*/}\n                                {/*<br/>*/}\n                                {/*<div*/}\n                                    {/*style={{*/}\n                                        {/*fontFamily:'\\'Roboto\\',sans-serif',*/}\n                                        {/*fontSize:'16px',*/}\n                                        {/*fontWeight:'bolder'*/}\n                                    {/*}}*/}\n                                {/*>*/}\n                                    {/*Add your own problem in the form (a + bi) + (c + di). You can set the values of a, b, c, and d below.*/}\n                                {/*</div>*/}\n                                {/*<div className=\"d-flex justify-content-between\">*/}\n                                    {/*<MDBInput*/}\n                                        {/*onChange={(e) => {*/}\n                                            {/*this.setState({*/}\n                                                {/*a: e.target.value*/}\n                                            {/*});*/}\n                                        {/*}}*/}\n\n                                        {/*label=\"a\" className=\"mr-3\"  size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}*/}\n                                    {/*/>*/}\n                                    {/*<MDBInput*/}\n                                        {/*onChange={(e) => {*/}\n                                            {/*this.setState({*/}\n                                                {/*b: e.target.value*/}\n                                            {/*});*/}\n                                        {/*}}*/}\n                                        {/*label=\"b\" className=\"mr-3\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}*/}\n                                    {/*/>*/}\n                                    {/*<MDBInput*/}\n                                        {/*onChange={(e) => {*/}\n                                            {/*this.setState({*/}\n                                                {/*c: e.target.value*/}\n                                            {/*});*/}\n                                        {/*}}*/}\n                                        {/*label=\"c\" className=\"mr-3 \" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}*/}\n                                    {/*/>*/}\n                                    {/*<MDBInput*/}\n                                        {/*onChange={(e) => {*/}\n                                            {/*this.setState({*/}\n                                                {/*d: e.target.value*/}\n                                            {/*});*/}\n                                        {/*}}*/}\n                                        {/*label=\"d\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}*/}\n                                    {/*/>*/}\n                                {/*</div>*/}\n                            {/*</div>*/}\n\n                            {/*<MDBModalFooter>*/}\n                                {/*<MDBBtn*/}\n                                    {/*color=\"deep-purple\"*/}\n                                    {/*size=\"md\"*/}\n                                    {/*onClick={this.toggle(14)}*/}\n                                    {/*style={{*/}\n                                        {/*fontFamily:'\\'Roboto\\',sans-serif',*/}\n                                        {/*fontSize:'12px',*/}\n                                        {/*fontWeight:'bolder'*/}\n                                    {/*}}*/}\n                                {/*>Cancel*/}\n                                {/*</MDBBtn>*/}\n                                {/*<MDBBtn*/}\n                                    {/*className=\"orange accent-2\"*/}\n                                    {/*size=\"md\"*/}\n                                    {/*onClick={()=>{*/}\n                                        {/*this.setState({*/}\n                                            {/*modal14:false,*/}\n                                            {/*answers:[],*/}\n                                            {/*finish:false,*/}\n                                            {/*step:1*/}\n                                        {/*})*/}\n                                    {/*}}*/}\n                                    {/*style={{*/}\n                                        {/*fontFamily:'\\'Roboto\\',sans-serif',*/}\n                                        {/*fontSize:'12px',*/}\n                                        {/*fontWeight:'bolder'*/}\n                                    {/*}}*/}\n                                {/*>Set</MDBBtn>*/}\n                            {/*</MDBModalFooter>*/}\n                        {/*</MDBModal>*/}\n\n                    {/*</MDBCol>*/}\n                {/*</MDBRow>*/}\n                {/*<div className=\"submit mt-5\"></div>*/}\n                {/*<MDBRow center>*/}\n\n                    {/*<MDBCol size=\"8\" >*/}\n                        {/*<div className={`${classes.worksheet} px-3 py-3`}>*/}\n                            {/*<label className={classes.ws}>*/}\n                                {/*Worksheet*/}\n                            {/*</label>*/}\n                            {/*<div*/}\n                                {/*className=\"px-3 pt-3\"*/}\n                            {/*>*/}\n                                {/*{this.state.answers.map((item, index)=>{*/}\n                                    {/*return<div*/}\n                                        {/*key={index}*/}\n                                        {/*className=\"py-2 d-flex align-items-baseline\"*/}\n                                        {/*style={{*/}\n                                            {/*border:'solid',*/}\n                                            {/*borderColor:'#388e3c',*/}\n                                            {/*borderWidth:'0 0 2px 0',*/}\n                                            {/*fontFamily:'\\'Roboto\\',sans-serif',*/}\n                                            {/*fontSize:'18px',*/}\n                                            {/*fontWeight:'bolder'*/}\n                                        {/*}}*/}\n                                    {/*>*/}\n                                        {/*<span style={{fontWeight:'bold',color:'#388e3c'}}>Step{item[0]-1}</span> &nbsp;{item[1]}*/}\n\n                                    {/*</div>*/}\n                                {/*})}*/}\n                            {/*</div>*/}\n                            {/*{!this.state.finish?(*/}\n                                {/*<div className=\"px-3 d-flex align-items-baseline\">*/}\n\n                                    {/*<div className=\"flex-grow-1\">*/}\n\n                                        {/*<MDBInput*/}\n                                            {/*label={`Step ${this.state.step.toString()}`}*/}\n                                            {/*className=\"mr-3 submit\"*/}\n                                            {/*size=\"sm\"*/}\n                                            {/*value={this.state.value}*/}\n                                            {/*style={this.state.isRight ?{*/}\n                                                {/*border:'solid',*/}\n                                                {/*borderColor:'#81c784',*/}\n                                                {/*borderWidth:'0 0 2px 0',*/}\n                                                {/*fontFamily:'\\'Roboto\\',sans-serif',*/}\n                                                {/*fontSize:'18px'*/}\n                                            {/*}:{*/}\n                                                {/*border:'solid',*/}\n                                                {/*borderColor:'#d32f2f',*/}\n                                                {/*borderWidth:'0 0 2px 0',*/}\n                                                {/*fontFamily:'\\'Roboto\\',sans-serif',*/}\n                                                {/*fontSize:'18px'*/}\n                                            {/*}}*/}\n                                            {/*onChange={(e) => {*/}\n                                                {/*this.setState({*/}\n                                                    {/*value: e.target.value*/}\n                                                {/*});*/}\n                                            {/*}}*/}\n                                        {/*/>*/}\n\n                                    {/*</div>*/}\n                                    {/*<div className=\"ml-4\">*/}\n                                        {/*<MDBBtn*/}\n                                            {/*tag=\"a\" floating className=\" green lighten-2 m-0\"*/}\n                                            {/*onClick={()=>{this.post()}}*/}\n                                        {/*>*/}\n                                            {/*<MDBIcon icon=\"clipboard-check\" />*/}\n                                        {/*</MDBBtn>*/}\n                                        {/*/!*<MDBBtn*!/*/}\n                                        {/*/!*tag=\"a\" floating className=\" orange lighten-2\"*!/*/}\n                                        {/*/!*>*!/*/}\n                                        {/*/!*<MDBIcon icon=\"microphone\" />*!/*/}\n                                        {/*/!*</MDBBtn>*!/*/}\n                                    {/*</div>*/}\n\n                                {/*</div>*/}\n                            {/*):(*/}\n                                {/*<p className={classes.pb4}>Finished! You got it</p>*/}\n                            {/*)}*/}\n\n\n\n                            {/*<div className=\"px-3 pt-3\">*/}\n                                {/*<MDBCard*/}\n                                    {/*size=\"8\"*/}\n                                    {/*text=\"white\"*/}\n                                    {/*className=\"py-3 px-3 w-100 green lighten-3\"*/}\n                                    {/*style={{boxShadow:'none', borderRadius:'0'}}*/}\n                                {/*>*/}\n                                    {/*<p className={classes.pb}>Hints/Feedback</p>*/}\n                                    {/*<p className={classes.pb2}>{this.state.hint}</p>*/}\n                                    {/*/!*<MDBRow center>*!/*/}\n                                    {/*/!*<MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">*!/*/}\n                                    {/*/!*<MDBIcon icon=\"angle-left\" />*!/*/}\n                                    {/*/!*</MDBBtn>*!/*/}\n                                    {/*/!*<MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">*!/*/}\n                                    {/*/!*<MDBIcon icon=\"angle-right\" />*!/*/}\n                                    {/*/!*</MDBBtn>*!/*/}\n                                    {/*/!*</MDBRow>*!/*/}\n                                {/*</MDBCard>*/}\n                            {/*</div>*/}\n\n                        {/*</div>*/}\n                    {/*</MDBCol>*/}\n                {/*</MDBRow>*/}\n                {/*<br/>*/}\n                {/*<MDBRow center>*/}\n                    {/*<MDBCol size=\"2\">*/}\n                        {/*<MDBBtn*/}\n                            {/*color=\"deep-purple lighten-1\"*/}\n                            {/*className={`${classes.btn} w-100 mt-3`}*/}\n                            {/*onClick={() => {this.props.history.goBack();}}*/}\n                        {/*>Previous Lesson</MDBBtn>*/}\n                    {/*</MDBCol>*/}\n                    {/*<MDBCol size=\"2\">*/}\n                        {/*<MDBBtn*/}\n                            {/*color=\"deep-purple lighten-1\"*/}\n                            {/*className={`${classes.btn} w-100 mt-3`}*/}\n                            {/*onClick={() => {this.props.history.push('/complex/subt');}}*/}\n                        {/*>Next Lesson</MDBBtn>*/}\n                    {/*</MDBCol>*/}\n                {/*</MDBRow>*/}\n\n            </div>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}