{"ast":null,"code":"'use strict'; //------------------------SPEECH RECOGNITION-----------------------------\n//const synth = window.speechSynthesis\n// const synth = speechSynthesis\n//-----------------------JS Global Variable----------------------------\n//\n// const voices = [];\n//------------------------COMPONENT-----------------------------\n\nexport var handleSyn = function handleSyn(text) {\n  //speak(text);\n  var synth = window.speechSynthesis;\n  var voices = synth.getVoices();\n  var utterThis = new SpeechSynthesisUtterance(text);\n  console.log(voices);\n  utterThis.pitch = 0.8;\n  utterThis.rate = 0.8;\n\n  for (var i = 0; i < voices.length; i++) {\n    if (voices[i].name === 'Samantha') {\n      utterThis.voice = voices[i];\n    }\n  } //utterThis.voice = voices[34];\n\n\n  synth.speak(utterThis);\n};\nexport var cancelSyn = function cancelSyn() {\n  var synth = window.speechSynthesis;\n  synth.cancel();\n}; // const populateVoiceList=()=>{\n//     let voices = synth.getVoices();\n//     for(let i = 0; i < voices.length ; i++) {\n//         let option = document.createElement('option');\n//         option.textContent = voices[i].name + ' (' + voices[i].lang + ')';\n//         if(voices[i].default) {\n//             option.textContent += ' -- DEFAULT';\n//         }\n//\n//         option.setAttribute('data-lang', 'en-US');\n//         option.setAttribute('data-name', 'Samantha');\n//\n//     }\n// };\n// const speak=(text)=>{\n//\n//     let voices = synth.getVoices();\n//\n//     let utterThis = new SpeechSynthesisUtterance(text);\n//\n//     for(let i = 0; i < voices.length ; i++) {\n//         if(voices[i].name === 'Samantha'){\n//             utterThis.voice = voices[i];\n//         }\n//     }\n// }","map":{"version":3,"sources":["/Users/vivian/Desktop/frondend/src/page/RRH/Component/speech-syn/index.js"],"names":["handleSyn","text","synth","window","speechSynthesis","voices","getVoices","utterThis","SpeechSynthesisUtterance","console","log","pitch","rate","i","length","name","voice","speak","cancelSyn","cancel"],"mappings":"AACA,a,CAIA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;;AAEA,OAAO,IAAMA,SAAS,GAAC,SAAVA,SAAU,CAACC,IAAD,EAAQ;AAC3B;AACA,MAAIC,KAAK,GAAGC,MAAM,CAACC,eAAnB;AACA,MAAIC,MAAM,GAAGH,KAAK,CAACI,SAAN,EAAb;AACA,MAAIC,SAAS,GAAG,IAAIC,wBAAJ,CAA6BP,IAA7B,CAAhB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAE,EAAAA,SAAS,CAACI,KAAV,GAAkB,GAAlB;AACAJ,EAAAA,SAAS,CAACK,IAAV,GAAiB,GAAjB;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,MAAM,CAACS,MAA1B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,QAAGR,MAAM,CAACQ,CAAD,CAAN,CAAUE,IAAV,KAAmB,UAAtB,EAAiC;AAC7BR,MAAAA,SAAS,CAACS,KAAV,GAAkBX,MAAM,CAACQ,CAAD,CAAxB;AACH;AACJ,GAZ0B,CAa3B;;;AACAX,EAAAA,KAAK,CAACe,KAAN,CAAYV,SAAZ;AAEH,CAhBM;AAiBP,OAAO,IAAMW,SAAS,GAAC,SAAVA,SAAU,GAAI;AACvB,MAAIhB,KAAK,GAAGC,MAAM,CAACC,eAAnB;AACAF,EAAAA,KAAK,CAACiB,MAAN;AACH,CAHM,C,CAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\n'use strict'\n\n\n\n//------------------------SPEECH RECOGNITION-----------------------------\n\n\n//const synth = window.speechSynthesis\n// const synth = speechSynthesis\n\n//-----------------------JS Global Variable----------------------------\n\n//\n// const voices = [];\n\n//------------------------COMPONENT-----------------------------\n\nexport const handleSyn=(text)=>{\n    //speak(text);\n    let synth = window.speechSynthesis\n    let voices = synth.getVoices();\n    let utterThis = new SpeechSynthesisUtterance(text);\n    console.log(voices)\n    utterThis.pitch = 0.8;\n    utterThis.rate = 0.8;\n    for(let i = 0; i < voices.length ; i++) {\n        if(voices[i].name === 'Samantha'){\n            utterThis.voice = voices[i];\n        }\n    }\n    //utterThis.voice = voices[34];\n    synth.speak(utterThis);\n\n};\nexport const cancelSyn=()=>{\n    let synth = window.speechSynthesis\n    synth.cancel();\n}\n// const populateVoiceList=()=>{\n//     let voices = synth.getVoices();\n//     for(let i = 0; i < voices.length ; i++) {\n//         let option = document.createElement('option');\n//         option.textContent = voices[i].name + ' (' + voices[i].lang + ')';\n//         if(voices[i].default) {\n//             option.textContent += ' -- DEFAULT';\n//         }\n//\n//         option.setAttribute('data-lang', 'en-US');\n//         option.setAttribute('data-name', 'Samantha');\n//\n//     }\n// };\n// const speak=(text)=>{\n//\n//     let voices = synth.getVoices();\n//\n//     let utterThis = new SpeechSynthesisUtterance(text);\n//\n//     for(let i = 0; i < voices.length ; i++) {\n//         if(voices[i].name === 'Samantha'){\n//             utterThis.voice = voices[i];\n//         }\n//     }\n// }\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}