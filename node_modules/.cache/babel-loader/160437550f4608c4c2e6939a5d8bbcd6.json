{"ast":null,"code":"import _defineProperty from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vivian/Desktop/frondend/src/page/Foil/Page/page.js\";\nimport React from 'react';\nimport { Video } from \"../video-component/video\";\nimport { MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon, MDBModal, MDBInput, MDBModalFooter } from 'mdbreact';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport classes from './index.module.css';\nimport { ComplexNumberMenu } from \"./Menu\";\nimport { url } from \"../../../tool/fetch-help\";\nimport Joyride from 'react-joyride';\nimport { deleteMark } from \"../../../tool/delete-mark\";\nimport { hap } from \"../../HAP/index.mock\";\nexport var FoilPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FoilPage, _React$Component);\n\n  function FoilPage(props) {\n    var _this;\n\n    _classCallCheck(this, FoilPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FoilPage).call(this, props));\n\n    _this.toggle = function (nr) {\n      return function () {\n        var modalNumber = 'modal' + nr;\n\n        _this.setState(_defineProperty({}, modalNumber, !_this.state[modalNumber]));\n      };\n    };\n\n    _this.post = function () {\n      var option = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"A\": _this.state.a,\n          \"B\": _this.state.b,\n          \"C\": _this.state.c,\n          \"D\": _this.state.d,\n          \"step\": _this.state.step.toString(),\n          \"answer\": _this.state.value\n        })\n      };\n      fetch(\"\".concat(url, \"/FOIL/1\"), option).then(function (response) {\n        return response.json();\n      }).then(function (answer) {\n        _this.setState({\n          hint: answer.content\n        });\n\n        if (answer.type === '0') {\n          _this.setState({\n            isRight: false\n          });\n        } else if (answer.type === '1') {\n          var arr = _this.state.answers;\n          var step = answer.step;\n          arr.push([step, _this.state.value]);\n\n          _this.setState({\n            answers: arr,\n            step: step,\n            isRight: true,\n            value: ''\n          });\n        } else if (answer.type === '2') {\n          var _arr = _this.state.answers;\n          var _step = answer.step;\n\n          _arr.push([_step, _this.state.value]);\n\n          _this.setState({\n            answers: _arr,\n            step: _step,\n            isRight: true,\n            value: '',\n            finish: true,\n            finishText: 'Finished! You got it.'\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      modal14: false,\n      answers: [],\n      a: '-6',\n      b: '-4',\n      c: '3',\n      d: '5',\n      value: '',\n      step: 1,\n      hint: '',\n      isRight: true,\n      finish: false,\n      finishText: '',\n      steps: [{\n        target: \".problem\",\n        placement: 'bottom',\n        content: \"Here is a complex number problem\"\n      }, {\n        target: \".add\",\n        placement: 'bottom',\n        content: \"You can add your own problem\"\n      }, {\n        target: \".submit\",\n        placement: 'bottom',\n        content: \"Submit your answer step by step (you could skip first stepï¼‰\"\n      }]\n    };\n    _this.mark = deleteMark(_this.state.a, _this.state.b, _this.state.c, _this.state.d);\n    return _this;\n  }\n\n  _createClass(FoilPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.node.scrollIntoView();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.mark = deleteMark(this.state.a, this.state.b, this.state.c, this.state.d);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          run = _this$state.run,\n          steps = _this$state.steps;\n      console.log(this.mark);\n      return React.createElement(\"div\", {\n        ref: function ref(node) {\n          return _this2.node = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Joyride, {\n        steps: steps,\n        continuous: true //scrollToFirstStep={true}\n        ,\n        scrollToSteps: false //showOverlay={false}\n        //showStepsProgress={true}\n        //run={run}\n        ,\n        styles: {\n          options: {\n            primaryColor: '#66bb6a',\n            zIndex: 1000\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"d-flex align-items-baseline justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"FOIL: \\xA0\"), React.createElement(\"div\", {\n        className: classes.title2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Multiplying Binomials\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"8\",\n        className: classes.font3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Video, {\n        url: \"https://myedmaster.oss-us-east-1.aliyuncs.com/FOILvid2.mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Multiplying Binomials Using FOIL\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), \"What do you do when you have something that looks like this? \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"(2x+1)(3x-2)\"), \"?\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), \"Or this \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"(-2x^2y^2-5xy^2)(x+3)\"), \"?\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), \"Or this \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"(8x-4)(8x+4)\"), \"?\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), \"These are all examples of multiplying two binomials, but exactly how are you supposed to do that? Let\\u2019s take a look\\u2026\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), \"Given \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"(x+1)(x-3)\"), \", all you need to do is multiply everything in the first set of parentheses by everything in the second set of parentheses and then combine like terms.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), \"Boom.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), \"Easy, right?  Not so much.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), \"While that is exactly what you have to do, it\\u2019s much easier said than done. That\\u2019s why we use the FOIL Method.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), \"FOIL?  Yes, but not the tin foil kind of foil. FOIL stands for First, Outer, Inner, Last, and when applied to multiplying two binomials\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"It looks like this:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), \"Using the example from earlier, \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"(x+1)(x-3)\"), \",\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), \"The F refers to the First term in each binomial   \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"(x+1)(x-3)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), \"The O refers to the Outer terms of the binomials \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"(x+1)(x-3)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), \"The I refers to the Inside terms of the binomials  \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"(x+1)(x-3)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), \"And the L refers to the Last term in each binomial \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"(x+1)(x-3)\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"It\\u2019s that simple. Here\\u2019s how it works. Step 1: Multiply Again, given \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"(x+1)(x-3)\"), \"F tells us to multiply the first terms \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"x\"), \" which equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"x^2\"), \" and we write that down first O tells us to multiply the outer terms \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"-3\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"-3x\"), \" and we write that next I tells us to multiply the inner terms \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"1\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"x\"), \" gives us \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"x\"), \" and we write that down And L tells us to multiply the last terms \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"1\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"-3\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"-3\"), \" and we write that last\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"x^2-3x+x-3\"), \"F   O   I   L\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Once you have all four FOIL terms, you\\u2019re ready for Step 2. In Step 2, you combine like terms. Remember\\u2026you\\u2019re adding or subtracting now.\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"x^2-3x+x-3\"), \"There\\u2019s only one squared term, so we just bring it down. Much of the time, the Outer and Inner terms will be like terms, so you can combine them and bring them down. And there\\u2019s nothing to combine with the last term, so it comes down and you\\u2019ve got your answer\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"x^2-2x-3\"), \"Let\\u2019s look at some examples.\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"(2x+1)(3x-2)\"), \"In this problem,\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"First times first\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"2x\"), \"times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"3x\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"6x^2\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), \"Outer times outer \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"2x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"-2\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"-4x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), \"Inner times inner \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"1\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"3x\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"3x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), \"And last times last \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"1\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"-2\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"-2\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"6x^2-4x+3x-2\"))), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"The outers and inners combine to give you \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"-x\"), \", leaving you with \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"6x^2-x-2\"), \" as your answer.\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"In the second example, \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"(5x-4)(6x-3)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), \"First times first \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"5x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"6x\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"30x^2\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), \"Outer times outer \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"5x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"-3\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"-15x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), \"Inner times inner \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"-4\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"6x\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"-24x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), \"And last times last \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"-4\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"-3\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"+12\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"30x^2-15x-24x+12\"))), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Again, the outers and inners combine to give you \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"-39x\"), \", so your answer is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"30x^2-39x+12\"), \"Notice how both answers are trinomials\\u2014they each have 3 terms. Most of the time, the product of two binomials will be a trinomial. However, that\\u2019s not always the case. Look at this example.\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"(2x+1)(3y-2)\"), \"First times first \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"2x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"3y\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"6xy\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), \"Outer times outer \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"2x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"-2\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"-4x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), \"Inner times inner \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"1\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"3y\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"3y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), \"And last times last \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"1\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"-2\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"-2\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"6xy-4x+3y-2\"))), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Notice there are no like terms to combine, so your answer has 4 terms instead of 3.\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"In the second example, \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"(3x+2)(3x-2)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), \"First times first  \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"3x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"3x\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"9x^2\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }), \"Outer times outer \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"3x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"-2\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"-6x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), \"Inner times inner \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"2\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"3x\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"6x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), \"And last times last \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"2\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"-2\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"-4\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"9x^2-6x+6x-4\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"9x^2-4\"))), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"The outer and inner terms cancel out each other and leave you with a binomial as your answer. Here are some problems for you to try. You can pause the video, do the problems, and when you\\u2019re done, resume the video and check your work.\"), React.createElement(\"div\", {\n        className: \"problem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        className: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        color: \"blue-grey\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-around\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\".concat(classes.pb),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \"Problem\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"browser-default custom-select\",\n        size: \"sm\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            equation: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Choose your function\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"log2(ax + b)\"), React.createElement(\"option\", {\n        value: \"ln\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, \"ln(ax + b)\"), React.createElement(\"option\", {\n        value: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"log10(ax + b)\")))), React.createElement(\"p\", {\n        className: \"\".concat(classes.pb2),\n        style: {\n          borderStyle: 'solid',\n          borderBottomColor: '#9e9e9e',\n          borderWidth: '0 0 1px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Solve the following: (\", this.state.a, \"x \", this.mark[0], \" \", this.mark[1], \") + (\", this.state.c, \"x \", this.mark[2], \" \", this.mark[3], \") Begin your work by first rewriting the problem in 'Step1' in the worksheet.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"\".concat(classes.pb3, \" add\"),\n        onClick: this.toggle(14),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"ADD YOUR OWN PROBLEM\")), React.createElement(MDBModal, {\n        isOpen: this.state.modal14,\n        toggle: this.toggle(14),\n        size: \"lg\",\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        toggle: this.toggle(14),\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '28px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"Add Your Own Problem\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '16px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"Add your own problem in the form (ax + b) + (cx + d). You can set the values of a, b, c, and d below.\"), React.createElement(\"div\", {\n        className: \"d-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            a: e.target.value\n          });\n        },\n        label: \"a\",\n        className: \"mr-3\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            b: e.target.value\n          });\n        },\n        label: \"b\",\n        className: \"mr-3\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            c: e.target.value\n          });\n        },\n        label: \"c\",\n        className: \"mr-3 \",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            d: e.target.value\n          });\n        },\n        label: \"d\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }))), React.createElement(MDBModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple\",\n        size: \"md\",\n        onClick: this.toggle(14),\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '12px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(MDBBtn, {\n        className: \"orange accent-2\",\n        size: \"md\",\n        onClick: function onClick() {\n          _this2.setState({\n            modal14: false,\n            answers: [],\n            finish: false,\n            step: 1\n          });\n        },\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '12px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, \"Set\"))))), React.createElement(\"div\", {\n        className: \"submit mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\".concat(classes.worksheet, \" px-3 py-3\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: classes.ws,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, \"Worksheet\"), React.createElement(\"div\", {\n        className: \"px-3 pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, this.state.answers.map(function (item, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"py-2 d-flex align-items-baseline\",\n          style: {\n            border: 'solid',\n            borderColor: '#388e3c',\n            borderWidth: '0 0 2px 0',\n            fontFamily: '\\'Roboto\\',sans-serif',\n            fontSize: '18px',\n            fontWeight: 'bolder'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            color: '#388e3c'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481\n          },\n          __self: this\n        }, \"Step\", item[0] - 1), \" \\xA0\", item[1]);\n      })), !this.state.finish ? React.createElement(\"div\", {\n        className: \"px-3 d-flex align-items-baseline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-grow-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"Step \".concat(this.state.step.toString()),\n        className: \"mr-3 submit\",\n        size: \"sm\",\n        value: this.state.value,\n        style: this.state.isRight ? {\n          border: 'solid',\n          borderColor: '#81c784',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '18px'\n        } : {\n          border: 'solid',\n          borderColor: '#d32f2f',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '18px'\n        },\n        onChange: function onChange(e) {\n          _this2.setState({\n            value: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ml-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        className: \" green lighten-2 m-0\",\n        onClick: function onClick() {\n          _this2.post();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"clipboard-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      })))) : React.createElement(\"p\", {\n        className: classes.pb4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, \"Finished! You got it\"), React.createElement(\"div\", {\n        className: \"px-3 pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100 green lighten-3\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.pb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, \"Hints/Feedback\"), React.createElement(\"p\", {\n        className: classes.pb2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, this.state.hint)))))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, \"Using the FOIL method for multiplying binomials Helps ensure you multiply both terms in the first binomial by both terms in the second, Helps you keep your work organized as you solve the problem, And makes it easier to review your work for errors, So next time you\\u2019re multiplying two binomials, wrap things up quickly and easily with FOIL!\"))));\n    }\n  }]);\n\n  return FoilPage;\n}(React.Component);","map":{"version":3,"sources":["/Users/vivian/Desktop/frondend/src/page/Foil/Page/page.js"],"names":["React","Video","MDBRow","MDBCol","MDBBtn","MDBCard","MDBIcon","MDBModal","MDBInput","MDBModalFooter","InlineMath","BlockMath","classes","ComplexNumberMenu","url","Joyride","deleteMark","hap","FoilPage","props","toggle","nr","modalNumber","setState","state","post","option","method","headers","body","JSON","stringify","a","b","c","d","step","toString","value","fetch","then","response","json","answer","hint","content","type","isRight","arr","answers","push","finish","finishText","modal14","steps","target","placement","mark","node","scrollIntoView","prevProps","run","console","log","options","primaryColor","zIndex","title1","title2","font3","ph","border","ph2","boxShadow","borderRadius","pb","e","equation","pb2","borderStyle","borderBottomColor","borderWidth","pb3","fontFamily","fontSize","fontWeight","borderColor","worksheet","ws","map","item","index","color","pb4","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Video} from \"../video-component/video\";\nimport {MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon, MDBModal, MDBInput, MDBModalFooter} from 'mdbreact'\nimport { InlineMath, BlockMath } from 'react-katex';\n\nimport classes from './index.module.css'\nimport {ComplexNumberMenu} from \"./Menu\";\nimport {url} from \"../../../tool/fetch-help\";\nimport Joyride from 'react-joyride';\nimport {deleteMark} from \"../../../tool/delete-mark\";\nimport {hap} from \"../../HAP/index.mock\";\n\n\nexport class FoilPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal14: false,\n            answers:[],\n            a:'-6',\n            b:'-4',\n            c:'3',\n            d:'5',\n            value:'',\n            step:1,\n            hint:'',\n            isRight:true,\n            finish:false,\n            finishText:'',\n\n            steps: [\n                {\n                    target: \".problem\",\n                    placement: 'bottom',\n                    content: \"Here is a complex number problem\"\n                },\n                {\n                    target: \".add\",\n                    placement: 'bottom',\n                    content: \"You can add your own problem\"\n                },\n                {\n                    target: \".submit\",\n                    placement: 'bottom',\n                    content: \"Submit your answer step by step (you could skip first stepï¼‰\"\n                }\n            ]\n        };\n        this.mark = deleteMark(this.state.a, this.state.b, this.state.c, this.state.d)\n\n    }\n    componentDidMount() {\n        this.node.scrollIntoView();\n    }\n    componentDidUpdate(prevProps) {\n        this.mark = deleteMark(this.state.a, this.state.b, this.state.c, this.state.d)\n    }\n    toggle = nr => () => {\n        let modalNumber = 'modal' + nr;\n        this.setState({\n            [modalNumber]: !this.state[modalNumber],\n        });\n    };\n\n    post = ()=>{\n        const option={\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body:JSON.stringify({\n                \"A\":this.state.a,\n                \"B\":this.state.b,\n                \"C\":this.state.c,\n                \"D\":this.state.d,\n                \"step\":this.state.step.toString(),\n                \"answer\":this.state.value,\n            })\n        };\n        fetch(`${url}/FOIL/1`,option)\n            .then(response=>response.json())\n            .then(answer=>{\n                this.setState({\n                    hint:answer.content\n                })\n                if (answer.type === '0'){\n                    this.setState({\n                        isRight:false\n                    })\n                }\n                else if (answer.type === '1'){\n                    let arr = this.state.answers;\n                    let step= answer.step;\n                    arr.push([step, this.state.value])\n                    this.setState({\n                        answers:arr,\n                        step:step,\n                        isRight:true,\n                        value:''\n                    })\n                }\n                else if(answer.type === '2'){\n                    let arr = this.state.answers;\n                    let step= answer.step;\n                    arr.push([step, this.state.value])\n                    this.setState({\n                        answers:arr,\n                        step:step,\n                        isRight:true,\n                        value:'',\n                        finish:true,\n                        finishText:'Finished! You got it.'\n                    })\n                }\n            })\n    }\n\n    render() {\n        const { run,steps } = this.state;\n        console.log(this.mark);\n        return (\n            <div ref={node => this.node = node}>\n                <Joyride\n                    steps={steps}\n                    continuous={true}\n                    //scrollToFirstStep={true}\n                    scrollToSteps={false}\n                    //showOverlay={false}\n                    //showStepsProgress={true}\n                    //run={run}\n                    styles={{\n                        options: {\n                            primaryColor: '#66bb6a',\n                            zIndex: 1000,\n                        }\n                    }}\n                />\n\n                <div className=\"d-flex align-items-baseline justify-content-center\">\n                    <div className={classes.title1}>\n                        FOIL: &nbsp;\n                    </div>\n                    <div className={classes.title2}>\n                        Multiplying Binomials\n                    </div>\n                </div>\n\n                <MDBRow>\n                    <MDBCol size=\"2\">\n                    </MDBCol>\n                    <MDBCol size=\"8\" className={classes.font3}>\n                        <Video url='https://myedmaster.oss-us-east-1.aliyuncs.com/FOILvid2.mp4'/>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol size=\"2\">\n\n                    </MDBCol>\n                    <MDBCol size=\"8\">\n                        <p className={classes.ph}>\n                            Multiplying Binomials Using FOIL\n                            <br/>\n\n                            What do you do when you have something that looks like this? <InlineMath>(2x+1)(3x-2)</InlineMath>?\n                            <br/>\n                            Or this <InlineMath>(-2x^2y^2-5xy^2)(x+3)</InlineMath>?\n                            <br/>\n                            Or this <InlineMath>(8x-4)(8x+4)</InlineMath>?\n                            <br/>\n                            These are all examples of multiplying two binomials, but exactly how are you supposed to do that?\n                            Letâ€™s take a lookâ€¦\n                            <br/>\n                            Given <InlineMath>(x+1)(x-3)</InlineMath>, all you need to do is multiply everything in the first set of parentheses by everything in the second set of parentheses and then combine like terms.\n                            <br/>\n                            Boom.\n                            <br/>\n                            Easy, right?  Not so much.\n                            <br/>\n                            While that is exactly what you have to do, itâ€™s much easier said than done. Thatâ€™s why we use the FOIL Method.\n                            <br/>\n                            FOIL?  Yes, but not the tin foil kind of foil.\n                            FOIL stands for First, Outer, Inner, Last, and when applied to multiplying two binomials\n\n\n                        </p>\n                        <br/>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                It looks like this:\n                                <br/>\n                                Using the example from earlier, <InlineMath>(x+1)(x-3)</InlineMath>,\n                                <br/>\n                                The F refers to the First term in each binomial \t\t<InlineMath>(x+1)(x-3)</InlineMath>\n                                <br/>\n                                The O refers to the Outer terms of the binomials\t<InlineMath>(x+1)(x-3)</InlineMath>\n                                <br/>\n                                The I refers to the Inside terms of the binomials\t\t<InlineMath>(x+1)(x-3)</InlineMath>\n                                <br/>\n                                And the L refers to the Last term in each binomial\t<InlineMath>(x+1)(x-3)</InlineMath>\n                            </p>\n                        </MDBRow>\n                        <br/>\n                        <p className={classes.ph}>\n                            Itâ€™s that simple.\n\n                            Hereâ€™s how it works.\n                            Step 1: Multiply\n\n                            Again, given <InlineMath>(x+1)(x-3)</InlineMath>\n\n                            F tells us to multiply the first terms\t<InlineMath>x</InlineMath> times <InlineMath>x</InlineMath> which equals <InlineMath>x^2</InlineMath> and we write that down first\n                            O tells us to multiply the outer terms\t<InlineMath>x</InlineMath> times <InlineMath>-3</InlineMath> equals <InlineMath>-3x</InlineMath> and we write that next\n                            I tells us to multiply the inner terms\t<InlineMath>1</InlineMath> times <InlineMath>x</InlineMath> gives us <InlineMath>x</InlineMath> and we write that down\n                            And L tells us to multiply the last terms <InlineMath>1</InlineMath> times <InlineMath>-3</InlineMath> equals <InlineMath>-3</InlineMath> and we write that last\n                        </p>\n                        <p className={classes.ph}>\n                            <BlockMath>x^2-3x+x-3</BlockMath>\n                            F   O   I   L\n                        </p>\n                        <p className={classes.ph}>\n                            Once you have all four FOIL terms, youâ€™re ready for Step 2.\n\n                            In Step 2, you combine like terms.\n                            Rememberâ€¦youâ€™re adding or subtracting now.\n\n                            <BlockMath>x^2-3x+x-3</BlockMath>\n\n                            Thereâ€™s only one squared term, so we just bring it down.\n                            Much of the time, the Outer and Inner terms will be like terms, so you can combine them and bring them down.\n                            And thereâ€™s nothing to combine with the last term, so it comes down and youâ€™ve got your answer\n\n                            <BlockMath>x^2-2x-3</BlockMath>\n\n                            Letâ€™s look at some examples.\n                            <BlockMath>(2x+1)(3x-2)</BlockMath>\n                            In this problem,\n                        </p>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                First times first<InlineMath>2x</InlineMath>times <InlineMath>3x</InlineMath> is <InlineMath>6x^2</InlineMath><br/>\n                                Outer times outer\t<InlineMath>2x</InlineMath> times <InlineMath>-2</InlineMath> is <InlineMath>-4x</InlineMath><br/>\n                                Inner times inner\t<InlineMath>1</InlineMath> times <InlineMath>3x</InlineMath> is <InlineMath>3x</InlineMath><br/>\n                                And last times last\t<InlineMath>1</InlineMath> times <InlineMath>-2</InlineMath> is <InlineMath>-2</InlineMath><br/>\n                                <BlockMath>6x^2-4x+3x-2</BlockMath>\n\n                            </p>\n                        </MDBRow>\n                        <p className={classes.ph}>\n\n                            The outers and inners combine to give you <InlineMath>-x</InlineMath>, leaving you with <InlineMath>6x^2-x-2</InlineMath> as your answer.\n\n                        </p>\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                In the second example, <InlineMath>(5x-4)(6x-3)</InlineMath><br/>\n                                First times first\t<InlineMath>5x</InlineMath> times <InlineMath>6x</InlineMath> is <InlineMath>30x^2</InlineMath><br/>\n                                Outer times outer\t<InlineMath>5x</InlineMath> times <InlineMath>-3</InlineMath> is <InlineMath>-15x</InlineMath><br/>\n                                Inner times inner\t<InlineMath>-4</InlineMath> times <InlineMath>6x</InlineMath> is <InlineMath>-24x</InlineMath><br/>\n                                And last times last\t<InlineMath>-4</InlineMath> times <InlineMath>-3</InlineMath> is <InlineMath>+12</InlineMath><br/>\n\n                                <BlockMath>30x^2-15x-24x+12</BlockMath>\n                            </p>\n                        </MDBRow>\n                        <p className={classes.ph}>\n                            Again, the outers and inners combine to give you <InlineMath>-39x</InlineMath>, so your answer is <InlineMath>30x^2-39x+12</InlineMath>\n\n                            Notice how both answers are trinomialsâ€”they each have 3 terms.\n\n                            Most of the time, the product of two binomials will be a trinomial. However, thatâ€™s not always the case.\n                            Look at this example.\n\n                        </p>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                <BlockMath>(2x+1)(3y-2)</BlockMath>\n                                First times first\t<InlineMath>2x</InlineMath> times <InlineMath>3y</InlineMath> equals <InlineMath>6xy</InlineMath><br/>\n                                Outer times outer\t<InlineMath>2x</InlineMath> times <InlineMath>-2</InlineMath> equals <InlineMath>-4x</InlineMath><br/>\n                                Inner times inner\t<InlineMath>1</InlineMath> times <InlineMath>3y</InlineMath> equals <InlineMath>3y</InlineMath><br/>\n                                And last times last\t<InlineMath>1</InlineMath> times <InlineMath>-2</InlineMath> equals <InlineMath>-2</InlineMath>\n\n                                <BlockMath>6xy-4x+3y-2</BlockMath>\n\n                            </p>\n                        </MDBRow>\n                        <p className={classes.ph}>\n                            Notice there are no like terms to combine, so your answer has 4 terms instead of 3.\n                        </p>\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                In the second example, <InlineMath>(3x+2)(3x-2)</InlineMath><br/>\n                                First times first\t\t<InlineMath>3x</InlineMath> times <InlineMath>3x</InlineMath> equals <InlineMath>9x^2</InlineMath><br/>\n                                Outer times outer\t<InlineMath>3x</InlineMath> times <InlineMath>-2</InlineMath> equals <InlineMath>-6x</InlineMath><br/>\n                                Inner times inner\t<InlineMath>2</InlineMath> times <InlineMath>3x</InlineMath> equals <InlineMath>6x</InlineMath><br/>\n                                And last times last\t<InlineMath>2</InlineMath> times <InlineMath>-2</InlineMath> equals <InlineMath>-4</InlineMath>\n\n                                <BlockMath>9x^2-6x+6x-4</BlockMath>\n                                <BlockMath>9x^2-4</BlockMath>\n\n                            </p>\n                        </MDBRow>\n                        <p className={classes.ph}>\n                            The outer and inner terms cancel out each other and leave you with a binomial as your answer.\n\n                            Here are some problems for you to try. You can pause the video, do the problems, and when youâ€™re done, resume the video and check your work.\n\n\n                        </p>\n                        <div className=\"problem\"></div>\n                        <MDBRow center>\n                            <MDBCol className=\"add\">\n                                <MDBCard\n                                    size=\"8\"\n                                    color=\"blue-grey\"\n                                    text=\"white\"\n                                    className=\"py-3 px-3 w-100\"\n                                    style={{boxShadow:'none', borderRadius:'0'}}\n                                >\n                                    <div className='d-flex justify-content-around'>\n                                        <div className={`${classes.pb}`}>Problem</div>\n                                        <div>\n                                            <select\n                                                className=\"browser-default custom-select\"\n                                                size = 'sm'\n\n                                                onChange={(e)=>{\n                                                    this.setState({\n                                                        equation:e.target.value\n                                                    })\n                                                }}\n                                            >\n                                                <option>Choose your function</option>\n                                                <option value=\"2\">log2(ax + b)</option>\n                                                <option value=\"ln\">ln(ax + b)</option>\n                                                <option value=\"10\">log10(ax + b)</option>\n                                            </select>\n                                        </div>\n                                    </div>\n\n\n\n\n                                    <p\n                                        className={`${classes.pb2}`}\n                                        style={{borderStyle:'solid',borderBottomColor:'#9e9e9e', borderWidth:'0 0 1px 0'}}\n                                    >\n                                        Solve the following:\n                                        ({this.state.a}x {this.mark[0]} {this.mark[1]}) + ({this.state.c}x {this.mark[2]} {this.mark[3]})\n                                        Begin your work by first rewriting the problem in 'Step1' in the worksheet.\n                                        <tr/><br/>\n                                    </p>\n                                    <p\n                                        className={`${classes.pb3} add`}\n\n                                        onClick={this.toggle(14)}\n                                    >\n                                        ADD YOUR OWN PROBLEM\n                                    </p>\n                                </MDBCard>\n\n                                <MDBModal isOpen={this.state.modal14} toggle={this.toggle(14)} size=\"lg\" centered>\n                                    <div className=\"p-3\">\n                                        <div\n                                            toggle={this.toggle(14)}\n\n                                            style={{\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'28px',\n                                                fontWeight:'bolder'\n                                            }}\n                                        >\n                                            Add Your Own Problem\n                                        </div>\n                                        <br/>\n                                        <div\n                                            style={{\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'16px',\n                                                fontWeight:'bolder'\n                                            }}\n                                        >\n                                            Add your own problem in the form (ax + b) + (cx + d). You can set the values of a, b, c, and d below.\n                                        </div>\n                                        <div className=\"d-flex justify-content-between\">\n                                            <MDBInput\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        a: e.target.value\n                                                    });\n                                                }}\n\n                                                label=\"a\" className=\"mr-3\"  size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                            />\n                                            <MDBInput\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        b: e.target.value\n                                                    });\n                                                }}\n                                                label=\"b\" className=\"mr-3\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                            />\n                                            <MDBInput\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        c: e.target.value\n                                                    });\n                                                }}\n                                                label=\"c\" className=\"mr-3 \" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                            />\n                                            <MDBInput\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        d: e.target.value\n                                                    });\n                                                }}\n                                                label=\"d\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <MDBModalFooter>\n                                        <MDBBtn\n                                            color=\"deep-purple\"\n                                            size=\"md\"\n                                            onClick={this.toggle(14)}\n                                            style={{\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'12px',\n                                                fontWeight:'bolder'\n                                            }}\n                                        >Cancel\n                                        </MDBBtn>\n                                        <MDBBtn\n                                            className=\"orange accent-2\"\n                                            size=\"md\"\n                                            onClick={()=>{\n                                                this.setState({\n                                                    modal14:false,\n                                                    answers:[],\n                                                    finish:false,\n                                                    step:1\n                                                })\n                                            }}\n                                            style={{\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'12px',\n                                                fontWeight:'bolder'\n                                            }}\n                                        >Set</MDBBtn>\n                                    </MDBModalFooter>\n                                </MDBModal>\n\n                            </MDBCol>\n                        </MDBRow>\n                        <div className=\"submit mt-5\"></div>\n                        <MDBRow center>\n\n                            <MDBCol>\n                                <div className={`${classes.worksheet} px-3 py-3`}>\n                                    <label className={classes.ws}>\n                                        Worksheet\n                                    </label>\n                                    <div\n                                        className=\"px-3 pt-3\"\n                                    >\n                                        {this.state.answers.map((item, index)=>{\n                                            return<div\n                                                key={index}\n                                                className=\"py-2 d-flex align-items-baseline\"\n                                                style={{\n                                                    border:'solid',\n                                                    borderColor:'#388e3c',\n                                                    borderWidth:'0 0 2px 0',\n                                                    fontFamily:'\\'Roboto\\',sans-serif',\n                                                    fontSize:'18px',\n                                                    fontWeight:'bolder'\n                                                }}\n                                            >\n                                                <span style={{fontWeight:'bold',color:'#388e3c'}}>Step{item[0]-1}</span> &nbsp;{item[1]}\n\n                                            </div>\n                                        })}\n                                    </div>\n                                    {!this.state.finish?(\n                                        <div className=\"px-3 d-flex align-items-baseline\">\n\n                                            <div className=\"flex-grow-1\">\n\n                                                <MDBInput\n                                                    label={`Step ${this.state.step.toString()}`}\n                                                    className=\"mr-3 submit\"\n                                                    size=\"sm\"\n                                                    value={this.state.value}\n                                                    style={this.state.isRight ?{\n                                                        border:'solid',\n                                                        borderColor:'#81c784',\n                                                        borderWidth:'0 0 2px 0',\n                                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                                        fontSize:'18px'\n                                                    }:{\n                                                        border:'solid',\n                                                        borderColor:'#d32f2f',\n                                                        borderWidth:'0 0 2px 0',\n                                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                                        fontSize:'18px'\n                                                    }}\n                                                    onChange={(e) => {\n                                                        this.setState({\n                                                            value: e.target.value\n                                                        });\n                                                    }}\n                                                />\n\n                                            </div>\n                                            <div className=\"ml-4\">\n                                                <MDBBtn\n                                                    tag=\"a\" floating className=\" green lighten-2 m-0\"\n                                                    onClick={()=>{this.post()}}\n                                                >\n                                                    <MDBIcon icon=\"clipboard-check\" />\n                                                </MDBBtn>\n                                                {/*<MDBBtn*/}\n                                                {/*tag=\"a\" floating className=\" orange lighten-2\"*/}\n                                                {/*>*/}\n                                                {/*<MDBIcon icon=\"microphone\" />*/}\n                                                {/*</MDBBtn>*/}\n                                            </div>\n\n                                        </div>\n                                    ):(\n                                        <p className={classes.pb4}>Finished! You got it</p>\n                                    )}\n\n\n\n                                    <div className=\"px-3 pt-3\">\n                                        <MDBCard\n                                            size=\"8\"\n                                            text=\"white\"\n                                            className=\"py-3 px-3 w-100 green lighten-3\"\n                                            style={{boxShadow:'none', borderRadius:'0'}}\n                                        >\n                                            <p className={classes.pb}>Hints/Feedback</p>\n                                            <p className={classes.pb2}>{this.state.hint}</p>\n                                            {/*<MDBRow center>*/}\n                                            {/*<MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">*/}\n                                            {/*<MDBIcon icon=\"angle-left\" />*/}\n                                            {/*</MDBBtn>*/}\n                                            {/*<MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">*/}\n                                            {/*<MDBIcon icon=\"angle-right\" />*/}\n                                            {/*</MDBBtn>*/}\n                                            {/*</MDBRow>*/}\n                                        </MDBCard>\n                                    </div>\n\n                                </div>\n                            </MDBCol>\n                        </MDBRow>\n                        <tr/><br/>\n                        <p className={classes.ph}>\n                            Using the FOIL method for multiplying binomials\n                            Helps ensure you multiply both terms in the first binomial by both terms in the second,\n                            Helps you keep your work organized as you solve the problem,\n                            And makes it easier to review your work for errors,\n\n                            So next time youâ€™re multiplying two binomials, wrap things up quickly and easily with FOIL!\n\n                        </p>\n                    </MDBCol>\n                </MDBRow>\n\n                {/*<br/>*/}\n                {/*<MDBRow center>*/}\n                {/*<MDBCol size=\"2\">*/}\n                {/*<MDBBtn*/}\n                {/*color=\"deep-purple lighten-1\"*/}\n                {/*className={`${classes.btn} w-100 mt-3`}*/}\n                {/*onClick={() => {this.props.history.goBack();}}*/}\n                {/*>Previous Lesson</MDBBtn>*/}\n                {/*</MDBCol>*/}\n                {/*<MDBCol size=\"2\">*/}\n                {/*<MDBBtn*/}\n                {/*color=\"deep-purple lighten-1\"*/}\n                {/*className={`${classes.btn} w-100 mt-3`}*/}\n                {/*onClick={() => {this.props.history.push('/complex/subt');}}*/}\n                {/*>Next Lesson</MDBBtn>*/}\n                {/*</MDBCol>*/}\n                {/*</MDBRow>*/}\n\n            </div>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}