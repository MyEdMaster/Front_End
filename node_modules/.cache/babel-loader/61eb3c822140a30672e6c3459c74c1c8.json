{"ast":null,"code":"import _defineProperty from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vivian/Desktop/frondend/src/page/ComplexNumber/Page/Addition.js\";\nimport React from 'react';\nimport { Video } from \"../video-component/video\";\nimport { MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon, MDBModal, MDBInput, MDBModalFooter } from 'mdbreact';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport classes from './index.module.css';\nimport { ComplexNumberMenu } from \"./Menu\";\nimport { url } from \"../../../tool/fetch-help\";\nimport Joyride from 'react-joyride';\nexport var ComplexAdd =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComplexAdd, _React$Component);\n\n  function ComplexAdd(props) {\n    var _this;\n\n    _classCallCheck(this, ComplexAdd);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComplexAdd).call(this, props));\n\n    _this.toggle = function (nr) {\n      return function () {\n        var modalNumber = 'modal' + nr;\n\n        _this.setState(_defineProperty({}, modalNumber, !_this.state[modalNumber]));\n      };\n    };\n\n    _this.post = function () {\n      var option = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"A\": _this.state.a,\n          \"B\": _this.state.b,\n          \"C\": _this.state.c,\n          \"D\": _this.state.d,\n          \"step\": _this.state.step.toString(),\n          \"answer\": _this.state.value\n        })\n      };\n      fetch(\"\".concat(url, \"/complex_number/4\"), option).then(function (response) {\n        return response.json();\n      }).then(function (answer) {\n        _this.setState({\n          hint: answer.content\n        });\n\n        if (answer.type === '0') {\n          _this.setState({\n            isRight: false\n          });\n        }\n\n        if (answer.type === '1') {\n          var arr = _this.state.answers;\n          var step = answer.step;\n          arr.push([step, _this.state.value]);\n\n          _this.setState({\n            answers: arr,\n            step: step,\n            isRight: true,\n            value: ''\n          });\n        } else {\n          var _arr = _this.state.answers;\n          var _step = answer.step;\n\n          _arr.push([_step, _this.state.value]);\n\n          _this.setState({\n            answers: _arr,\n            step: _step,\n            isRight: true,\n            value: '',\n            finish: true,\n            finishText: 'Finished! You got it.'\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      modal14: false,\n      answers: [],\n      a: '-6',\n      b: '-4',\n      c: '2',\n      d: '5',\n      value: '',\n      step: 1,\n      hint: '',\n      isRight: true,\n      finish: false,\n      finishText: '',\n      steps: [{\n        target: \".problem\",\n        placement: 'bottom',\n        content: \"Here is a complex number problem\"\n      }, {\n        target: \".add\",\n        placement: 'bottom',\n        content: \"You can add your own problem\"\n      }, {\n        target: \".submit\",\n        placement: 'bottom',\n        content: \"Submit your answer step by step (you could skip first stepï¼‰\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ComplexAdd, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.node.scrollIntoView();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          run = _this$state.run,\n          steps = _this$state.steps;\n      return React.createElement(\"div\", {\n        ref: function ref(node) {\n          return _this2.node = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Joyride, {\n        steps: steps,\n        continuous: true //scrollToFirstStep={true}\n        ,\n        scrollToSteps: false //showOverlay={false}\n        //showStepsProgress={true}\n        //run={run}\n        ,\n        styles: {\n          options: {\n            primaryColor: '#66bb6a',\n            zIndex: 1000\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"d-flex align-items-baseline justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"COMPLEX NUMBERS: \\xA0\"), React.createElement(\"div\", {\n        className: classes.title2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Addition\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(ComplexNumberMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        size: \"6\",\n        className: classes.font3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Video, {\n        url: \"https://myedmaster.oss-us-east-1.aliyuncs.com/addcomplex.mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Adding \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"complex numbers\"), \" is actually rather straightforward and simple.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), \"A complex number is a combination of a \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"real number\"), \" and an \\xA0\", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"imaginary number\"), \". We generally write \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"complex numbers \"), \"in \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"a + bi\"), \"\\xA0form, where \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"a\"), \"\\xA0 is the \\xA0\", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"real number\"), \" and \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"bi\"), \"\\xA0is the \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"imaginary number\"), \". For example, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"3 + 7i\"), \"\\xA0or \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"5 - 2i\"), \"\\xA0.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), \"Typically, whether adding, subtracting, multiplying or dividing complex numbers, we enclose each complex number inside parentheses like this:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"(6 - 5i) + (2 + 3i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"(4 + 8i) - (3 - 2i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"(7 - 4i)(5 + 9i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"(8 - 6i)/(1- 3i)\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"When adding or subtracting complex numbers, you can only combine like terms, meaning you can only combine the real part of each number together and the imaginary part of each number together.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), \"So, using the problem \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"(6 - 5i) + (2 + 3i)\"), \"\\xA0 , you would first combine the real parts, the\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"6\"), \"\\xA0and the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"2\"), \"\\xA0, to get\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"8\"), \"\\xA0 ; and then you would combine the imaginary parts, the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"-5i\"), \"\\xA0and the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"3i\"), \"\\xA0, to get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"- 2i\"), \"\\xA0. This leaves you with the complex number \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"8 - 2i\"), \"\\xA0.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), \"On a side note, since we are dealing with addition, you could also simply rewrite the problem without the parentheses, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"(6 - 5i) + (2 + 3i)\"), \"\\xA0, and then combine like terms. That\\u2019s completely legal in the case of an addition problem, but keep in mind it doesn\\u2019t work exactly like that for subtraction. We\\u2019ll talk about that when we discuss subtracting complex numbers.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), \"Let\\u2019s try another.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), \"Given \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"(-3 + 2i) + (7 - i)\"), \"\\xA0. Combine the real parts, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"-3 + 7\"), \"\\xA0, to get\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"4\"), \"\\xA0 . Then combine the imaginary parts,\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"2i - i\"), \"\\xA0, to get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"i\"), \"\\xA0. You are left with the complex number \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"4 + i\"), \"\\xA0.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), \"Nothing to it, is there? Here are some more for you to try.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"(6 - i) + (-4 + 5i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"(8 - 12i) + (-4 + 12i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"(21 + 4i) +(13 + 7i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"(-15 + 2i) + (-7 - 8i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"(-9 - 3i) + (6 - 8i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"(4 - 28i) + (16 + 25i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"(1 - 9i) + (-4 + 2i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"(31 - 13i) + (-31 + 13i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"(5 + 10i) +(-6 - 9i)\"))))), React.createElement(\"div\", {\n        className: \"problem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"8\",\n        className: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        color: \"blue-grey\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"\".concat(classes.pb),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Problem\"), React.createElement(\"p\", {\n        className: \"\".concat(classes.pb2),\n        style: {\n          borderStyle: 'solid',\n          borderBottomColor: '#9e9e9e',\n          borderWidth: '0 0 1px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Solve the following: (\", this.state.a, \" + \", this.state.b, \"i) / (\", this.state.c, \" + \", this.state.d, \"i). Begin your work by first rewriting the problem in 'Step 1' in the worksheet.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"\".concat(classes.pb3, \" add\"),\n        onClick: this.toggle(14),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"ADD YOUR OWN PROBLEM\")), React.createElement(MDBModal, {\n        isOpen: this.state.modal14,\n        toggle: this.toggle(14),\n        size: \"lg\",\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        toggle: this.toggle(14),\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '28px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Add Your Own Problem\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '16px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Add your own problem in the form (a + bi) / (c + di). You can set the values of a, b, c, and d below.\"), React.createElement(\"div\", {\n        className: \"d-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            a: e.target.value\n          });\n        },\n        label: \"a\",\n        className: \"mr-3\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            b: e.target.value\n          });\n        },\n        label: \"b\",\n        className: \"mr-3\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            c: e.target.value\n          });\n        },\n        label: \"c\",\n        className: \"mr-3 \",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            d: e.target.value\n          });\n        },\n        label: \"d\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }))), React.createElement(MDBModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple\",\n        size: \"md\",\n        onClick: this.toggle(14),\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '12px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(MDBBtn, {\n        className: \"orange accent-2\",\n        size: \"md\",\n        onClick: function onClick() {\n          _this2.setState({\n            modal14: false,\n            answers: [],\n            finish: false,\n            step: 1\n          });\n        },\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '12px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Set\"))))), React.createElement(\"div\", {\n        className: \"submit mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\".concat(classes.worksheet, \" px-3 py-3\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: classes.ws,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"Worksheet\"), React.createElement(\"div\", {\n        className: \"px-3 pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, this.state.answers.map(function (item, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"py-2 d-flex align-items-baseline\",\n          style: {\n            border: 'solid',\n            borderColor: '#388e3c',\n            borderWidth: '0 0 2px 0',\n            fontFamily: '\\'Roboto\\',sans-serif',\n            fontSize: '18px',\n            fontWeight: 'bolder'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            color: '#388e3c'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        }, \"Step\", item[0] - 1), \" \\xA0\", item[1]);\n      })), !this.state.finish ? React.createElement(\"div\", {\n        className: \"px-3 d-flex align-items-baseline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-grow-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"Step \".concat(this.state.step.toString()),\n        className: \"mr-3 submit\",\n        size: \"sm\",\n        value: this.state.value,\n        style: this.state.isRight ? {\n          border: 'solid',\n          borderColor: '#81c784',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '18px'\n        } : {\n          border: 'solid',\n          borderColor: '#d32f2f',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '18px'\n        },\n        onChange: function onChange(e) {\n          _this2.setState({\n            value: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ml-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        className: \" green lighten-2 m-0\",\n        onClick: function onClick() {\n          _this2.post();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"clipboard-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      })))) : React.createElement(\"p\", {\n        className: classes.pb4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"Finished! You got it\"), React.createElement(\"div\", {\n        className: \"px-3 pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100 green lighten-3\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.pb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, \"Hints/Feedback\"), React.createElement(\"p\", {\n        className: classes.pb2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, this.state.hint)))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple lighten-1\",\n        className: \"\".concat(classes.btn, \" w-100 mt-3\"),\n        onClick: function onClick() {\n          _this2.props.history.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, \"Previous Lesson\")), React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple lighten-1\",\n        className: \"\".concat(classes.btn, \" w-100 mt-3\"),\n        onClick: function onClick() {\n          _this2.props.history.push('/complex/subt');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"Next Lesson\"))));\n    }\n  }]);\n\n  return ComplexAdd;\n}(React.Component);","map":{"version":3,"sources":["/Users/vivian/Desktop/frondend/src/page/ComplexNumber/Page/Addition.js"],"names":["React","Video","MDBRow","MDBCol","MDBBtn","MDBCard","MDBIcon","MDBModal","MDBInput","MDBModalFooter","InlineMath","BlockMath","classes","ComplexNumberMenu","url","Joyride","ComplexAdd","props","toggle","nr","modalNumber","setState","state","post","option","method","headers","body","JSON","stringify","a","b","c","d","step","toString","value","fetch","then","response","json","answer","hint","content","type","isRight","arr","answers","push","finish","finishText","modal14","steps","target","placement","node","scrollIntoView","run","options","primaryColor","zIndex","title1","title2","font3","ph","high","border","ph2","boxShadow","borderRadius","pb","pb2","borderStyle","borderBottomColor","borderWidth","pb3","fontFamily","fontSize","fontWeight","e","borderColor","worksheet","ws","map","item","index","color","pb4","btn","history","goBack","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Video} from \"../video-component/video\";\nimport {MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon, MDBModal, MDBInput, MDBModalFooter} from 'mdbreact'\nimport { InlineMath, BlockMath } from 'react-katex';\n\nimport classes from './index.module.css'\nimport {ComplexNumberMenu} from \"./Menu\";\nimport {url} from \"../../../tool/fetch-help\";\nimport Joyride from 'react-joyride';\n\n\nexport class ComplexAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal14: false,\n            answers:[],\n            a:'-6',\n            b:'-4',\n            c:'2',\n            d:'5',\n            value:'',\n            step:1,\n            hint:'',\n            isRight:true,\n            finish:false,\n            finishText:'',\n\n            steps: [\n                {\n                    target: \".problem\",\n                    placement: 'bottom',\n                    content: \"Here is a complex number problem\"\n                },\n                {\n                    target: \".add\",\n                    placement: 'bottom',\n                    content: \"You can add your own problem\"\n                },\n                {\n                    target: \".submit\",\n                    placement: 'bottom',\n                    content: \"Submit your answer step by step (you could skip first stepï¼‰\"\n                }\n            ]\n        };\n\n    }\n    componentDidMount() {\n        this.node.scrollIntoView();\n    }\n\n    toggle = nr => () => {\n        let modalNumber = 'modal' + nr;\n        this.setState({\n            [modalNumber]: !this.state[modalNumber],\n        });\n    };\n\n    post = ()=>{\n        const option={\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body:JSON.stringify({\n                \"A\":this.state.a,\n                \"B\":this.state.b,\n                \"C\":this.state.c,\n                \"D\":this.state.d,\n                \"step\":this.state.step.toString(),\n                \"answer\":this.state.value,\n            })\n        };\n        fetch(`${url}/complex_number/4`,option)\n            .then(response=>response.json())\n            .then(answer=>{\n                this.setState({\n                    hint:answer.content\n                })\n                if (answer.type === '0'){\n                    this.setState({\n                        isRight:false\n                    })\n                }\n                if (answer.type === '1'){\n                    let arr = this.state.answers;\n                    let step= answer.step;\n                    arr.push([step, this.state.value])\n                    this.setState({\n                        answers:arr,\n                        step:step,\n                        isRight:true,\n                        value:''\n                    })\n                }\n                else{\n                    let arr = this.state.answers;\n                    let step= answer.step;\n                    arr.push([step, this.state.value])\n                    this.setState({\n                        answers:arr,\n                        step:step,\n                        isRight:true,\n                        value:'',\n                        finish:true,\n                        finishText:'Finished! You got it.'\n                    })\n                }\n            })\n    }\n\n    render() {\n        const { run,steps } = this.state;\n        return (\n            <div ref={node => this.node = node}>\n                <Joyride\n                    steps={steps}\n                    continuous={true}\n                    //scrollToFirstStep={true}\n                    scrollToSteps={false}\n                    //showOverlay={false}\n                    //showStepsProgress={true}\n                    //run={run}\n                    styles={{\n                        options: {\n                            primaryColor: '#66bb6a',\n                            zIndex: 1000,\n                        }\n                    }}\n                />\n\n                <div className=\"d-flex align-items-baseline justify-content-center\">\n                    <div className={classes.title1}>\n                        COMPLEX NUMBERS: &nbsp;\n                    </div>\n                    <div className={classes.title2}>\n                       Addition\n                    </div>\n                </div>\n\n                <MDBRow>\n                    <MDBCol size=\"3\">\n                        <ComplexNumberMenu/>\n                    </MDBCol>\n                    <MDBCol size=\"6\" className={classes.font3}>\n                        <Video url='https://myedmaster.oss-us-east-1.aliyuncs.com/addcomplex.mp4'/>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol size=\"3\">\n\n                    </MDBCol>\n                    <MDBCol size=\"6\">\n                        <p className={classes.ph}>\n                            Adding <span className={classes.high}>complex numbers</span> is actually rather straightforward and simple.\n                            <br/>\n                            A complex number is a combination of a <span className={classes.high}>real number</span> and an\n                            &nbsp;<span className={classes.high}>imaginary number</span>. We generally write <span className={classes.high}>complex numbers </span>\n                            in &nbsp;<InlineMath>a + bi</InlineMath>&nbsp;form, where &nbsp;<InlineMath>a</InlineMath>&nbsp; is the\n                            &nbsp;<span className={classes.high}>real number</span> and\n                            &nbsp;<InlineMath>bi</InlineMath>&nbsp;is the <span className={classes.high}>imaginary number</span>. For example,\n                            &nbsp;<InlineMath>3 + 7i</InlineMath>&nbsp;or\n                            &nbsp;<InlineMath>5 - 2i</InlineMath>&nbsp;.\n                            <tr/>\n                            <br/>\n                            Typically, whether adding, subtracting, multiplying or dividing complex numbers, we enclose each complex number inside parentheses like this:\n\n                        </p>\n                        <br/>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                <BlockMath>(6 - 5i) + (2 + 3i)</BlockMath>\n                                <BlockMath>(4 + 8i) - (3 - 2i)</BlockMath>\n                                <BlockMath>(7 - 4i)(5 + 9i)</BlockMath>\n                                <BlockMath>(8 - 6i)/(1- 3i)</BlockMath>\n                            </p>\n                        </MDBRow>\n                        <br/>\n                        <p className={classes.ph}>\n                            When adding or subtracting complex numbers, you can only combine like terms, meaning you can only combine the real part of each number together and the imaginary part of each number together.\n                            <tr/><br/>\n                            So, using the problem &nbsp;<InlineMath>(6 - 5i) + (2 + 3i)</InlineMath>&nbsp;\n                            , you would first combine the real parts, the&nbsp;<InlineMath>6</InlineMath>&nbsp;and the\n                            &nbsp;<InlineMath>2</InlineMath>&nbsp;, to get&nbsp;<InlineMath>8</InlineMath>&nbsp;\n                            ; and then you would combine the imaginary parts, the\n                            &nbsp;<InlineMath>-5i</InlineMath>&nbsp;and the &nbsp;<InlineMath>3i</InlineMath>&nbsp;, to get\n                            &nbsp;<InlineMath>- 2i</InlineMath>&nbsp;. This leaves you with the complex number\n                            &nbsp;<InlineMath>8 - 2i</InlineMath>&nbsp;.\n                            <tr/><br/>\n\n                            On a side note, since we are dealing with addition, you could also simply rewrite the problem without the parentheses,\n                            &nbsp;<InlineMath>(6 - 5i) + (2 + 3i)</InlineMath>&nbsp;, and then combine like terms. Thatâ€™s completely legal in the case of an addition problem, but keep in mind it doesnâ€™t work exactly like that for subtraction. Weâ€™ll talk about that when we discuss subtracting complex numbers.\n                            <tr/><br/>\n                            Letâ€™s try another.\n                            <tr/><br/>\n                            Given\n                            &nbsp;<InlineMath>(-3 + 2i) + (7 - i)</InlineMath>&nbsp;. Combine the real parts,\n                            &nbsp;<InlineMath>-3 + 7</InlineMath>&nbsp;, to get&nbsp;<InlineMath>4</InlineMath>&nbsp;\n                            . Then combine the imaginary parts,&nbsp;<InlineMath>2i - i</InlineMath>&nbsp;, to get\n                            &nbsp;<InlineMath>i</InlineMath>&nbsp;. You are left with the complex number\n                            &nbsp;<InlineMath>4 + i</InlineMath>&nbsp;.\n                            <tr/><br/>\n                            Nothing to it, is there? Here are some more for you to try.\n                            <tr/><br/>\n                        </p>\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                <BlockMath>(6 - i) + (-4 + 5i)</BlockMath>\n                                <BlockMath>(8 - 12i) + (-4 + 12i)</BlockMath>\n                                <BlockMath>(21 + 4i) +(13 + 7i)</BlockMath>\n                                <BlockMath>(-15 + 2i) + (-7 - 8i)</BlockMath>\n                                <BlockMath>(-9 - 3i) + (6 - 8i)</BlockMath>\n                                <BlockMath>(4 - 28i) + (16 + 25i)</BlockMath>\n                                <BlockMath>(1 - 9i) + (-4 + 2i)</BlockMath>\n                                <BlockMath>(31 - 13i) + (-31 + 13i)</BlockMath>\n                                <BlockMath>(5 + 10i) +(-6 - 9i)</BlockMath>\n                            </p>\n                        </MDBRow>\n                    </MDBCol>\n                </MDBRow>\n                <div className=\"problem\"></div>\n                <MDBRow center>\n                    <MDBCol size=\"8\" className=\"add\">\n                        <MDBCard\n                            size=\"8\"\n                            color=\"blue-grey\"\n                            text=\"white\"\n                            className=\"py-3 px-3 w-100\"\n                            style={{boxShadow:'none', borderRadius:'0'}}\n                        >\n\n\n                            <p className={`${classes.pb}`}>Problem</p>\n\n                            <p\n                                className={`${classes.pb2}`}\n                                style={{borderStyle:'solid',borderBottomColor:'#9e9e9e', borderWidth:'0 0 1px 0'}}\n                            >\n                                Solve the following:\n                                ({this.state.a} + {this.state.b}i) / ({this.state.c} + {this.state.d}i).\n                                Begin your work by first rewriting the problem in 'Step 1' in the worksheet.\n                                <tr/><br/>\n                            </p>\n                            <p\n                                className={`${classes.pb3} add`}\n\n                                onClick={this.toggle(14)}\n                            >\n                                ADD YOUR OWN PROBLEM\n                            </p>\n                        </MDBCard>\n\n                        <MDBModal isOpen={this.state.modal14} toggle={this.toggle(14)} size=\"lg\" centered>\n                            <div className=\"p-3\">\n                                <div\n                                    toggle={this.toggle(14)}\n\n                                    style={{\n                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                        fontSize:'28px',\n                                        fontWeight:'bolder'\n                                    }}\n                                >\n                                    Add Your Own Problem\n                                </div>\n                                <br/>\n                                <div\n                                    style={{\n                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                        fontSize:'16px',\n                                        fontWeight:'bolder'\n                                    }}\n                                >\n                                    Add your own problem in the form (a + bi) / (c + di). You can set the values of a, b, c, and d below.\n                                </div>\n                                <div className=\"d-flex justify-content-between\">\n                                    <MDBInput\n                                        onChange={(e) => {\n                                            this.setState({\n                                                a: e.target.value\n                                            });\n                                        }}\n\n                                        label=\"a\" className=\"mr-3\"  size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                    />\n                                    <MDBInput\n                                        onChange={(e) => {\n                                            this.setState({\n                                                b: e.target.value\n                                            });\n                                        }}\n                                        label=\"b\" className=\"mr-3\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                    />\n                                    <MDBInput\n                                        onChange={(e) => {\n                                            this.setState({\n                                                c: e.target.value\n                                            });\n                                        }}\n                                        label=\"c\" className=\"mr-3 \" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                    />\n                                    <MDBInput\n                                        onChange={(e) => {\n                                            this.setState({\n                                                d: e.target.value\n                                            });\n                                        }}\n                                        label=\"d\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                    />\n                                </div>\n                            </div>\n\n                            <MDBModalFooter>\n                                <MDBBtn\n                                    color=\"deep-purple\"\n                                    size=\"md\"\n                                    onClick={this.toggle(14)}\n                                    style={{\n                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                        fontSize:'12px',\n                                        fontWeight:'bolder'\n                                    }}\n                                >Cancel\n                                </MDBBtn>\n                                <MDBBtn\n                                    className=\"orange accent-2\"\n                                    size=\"md\"\n                                    onClick={()=>{\n                                        this.setState({\n                                            modal14:false,\n                                            answers:[],\n                                            finish:false,\n                                            step:1\n                                        })\n                                    }}\n                                    style={{\n                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                        fontSize:'12px',\n                                        fontWeight:'bolder'\n                                    }}\n                                >Set</MDBBtn>\n                            </MDBModalFooter>\n                        </MDBModal>\n\n                    </MDBCol>\n                </MDBRow>\n                <div className=\"submit mt-5\"></div>\n                <MDBRow center>\n\n                    <MDBCol size=\"8\" >\n                        <div className={`${classes.worksheet} px-3 py-3`}>\n                            <label className={classes.ws}>\n                                Worksheet\n                            </label>\n                            <div\n                                className=\"px-3 pt-3\"\n                            >\n                                {this.state.answers.map((item, index)=>{\n                                    return<div\n                                        key={index}\n                                        className=\"py-2 d-flex align-items-baseline\"\n                                        style={{\n                                            border:'solid',\n                                            borderColor:'#388e3c',\n                                            borderWidth:'0 0 2px 0',\n                                            fontFamily:'\\'Roboto\\',sans-serif',\n                                            fontSize:'18px',\n                                            fontWeight:'bolder'\n                                        }}\n                                    >\n                                        <span style={{fontWeight:'bold',color:'#388e3c'}}>Step{item[0]-1}</span> &nbsp;{item[1]}\n\n                                    </div>\n                                })}\n                            </div>\n                            {!this.state.finish?(\n                                <div className=\"px-3 d-flex align-items-baseline\">\n\n                                    <div className=\"flex-grow-1\">\n\n                                        <MDBInput\n                                            label={`Step ${this.state.step.toString()}`}\n                                            className=\"mr-3 submit\"\n                                            size=\"sm\"\n                                            value={this.state.value}\n                                            style={this.state.isRight ?{\n                                                border:'solid',\n                                                borderColor:'#81c784',\n                                                borderWidth:'0 0 2px 0',\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'18px'\n                                            }:{\n                                                border:'solid',\n                                                borderColor:'#d32f2f',\n                                                borderWidth:'0 0 2px 0',\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'18px'\n                                            }}\n                                            onChange={(e) => {\n                                                this.setState({\n                                                    value: e.target.value\n                                                });\n                                            }}\n                                        />\n\n                                    </div>\n                                    <div className=\"ml-4\">\n                                        <MDBBtn\n                                            tag=\"a\" floating className=\" green lighten-2 m-0\"\n                                            onClick={()=>{this.post()}}\n                                        >\n                                            <MDBIcon icon=\"clipboard-check\" />\n                                        </MDBBtn>\n                                        {/*<MDBBtn*/}\n                                        {/*tag=\"a\" floating className=\" orange lighten-2\"*/}\n                                        {/*>*/}\n                                        {/*<MDBIcon icon=\"microphone\" />*/}\n                                        {/*</MDBBtn>*/}\n                                    </div>\n\n                                </div>\n                            ):(\n                                <p className={classes.pb4}>Finished! You got it</p>\n                            )}\n\n\n\n                            <div className=\"px-3 pt-3\">\n                                <MDBCard\n                                    size=\"8\"\n                                    text=\"white\"\n                                    className=\"py-3 px-3 w-100 green lighten-3\"\n                                    style={{boxShadow:'none', borderRadius:'0'}}\n                                >\n                                    <p className={classes.pb}>Hints/Feedback</p>\n                                    <p className={classes.pb2}>{this.state.hint}</p>\n                                    {/*<MDBRow center>*/}\n                                    {/*<MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">*/}\n                                    {/*<MDBIcon icon=\"angle-left\" />*/}\n                                    {/*</MDBBtn>*/}\n                                    {/*<MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">*/}\n                                    {/*<MDBIcon icon=\"angle-right\" />*/}\n                                    {/*</MDBBtn>*/}\n                                    {/*</MDBRow>*/}\n                                </MDBCard>\n                            </div>\n\n                        </div>\n                    </MDBCol>\n                </MDBRow>\n                <br/>\n                <MDBRow center>\n                    <MDBCol size=\"2\">\n                        <MDBBtn\n                            color=\"deep-purple lighten-1\"\n                            className={`${classes.btn} w-100 mt-3`}\n                            onClick={() => {this.props.history.goBack();}}\n                        >Previous Lesson</MDBBtn>\n                    </MDBCol>\n                    <MDBCol size=\"2\">\n                        <MDBBtn\n                            color=\"deep-purple lighten-1\"\n                            className={`${classes.btn} w-100 mt-3`}\n                            onClick={() => {this.props.history.push('/complex/subt');}}\n                        >Next Lesson</MDBBtn>\n                    </MDBCol>\n                </MDBRow>\n\n            </div>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}