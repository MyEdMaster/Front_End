{"ast":null,"code":"import _defineProperty from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vivian/Desktop/frondend/src/page/Clt/Page/index.js\";\nimport React from 'react';\nimport { Video } from \"../video-component/video\";\nimport { MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon, MDBModal, MDBInput, MDBModalFooter } from 'mdbreact';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport classes from './index.module.css';\nimport { url } from \"../../../tool/fetch-help\";\nimport Joyride from 'react-joyride';\nimport { deleteMark } from \"../../../tool/delete-mark\";\nexport var CltPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CltPage, _React$Component);\n\n  function CltPage(props) {\n    var _this;\n\n    _classCallCheck(this, CltPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CltPage).call(this, props));\n\n    _this.toggle = function (nr) {\n      return function () {\n        var modalNumber = 'modal' + nr;\n\n        _this.setState(_defineProperty({}, modalNumber, !_this.state[modalNumber]));\n      };\n    };\n\n    _this.post = function (value) {\n      var option = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"A\": _this.state.a,\n          \"B\": _this.state.b,\n          \"C\": _this.state.c,\n          \"D\": _this.state.d,\n          \"step\": _this.state.step.toString(),\n          \"answer\": _this.state.value\n        })\n      };\n      fetch(\"\".concat(url, \"/FOIL/\").concat(value), option).then(function (response) {\n        return response.json();\n      }).then(function (answer) {\n        _this.setState({\n          hint: answer.content\n        });\n\n        if (answer.type === '0') {\n          _this.setState({\n            isRight: false\n          });\n        } else if (answer.type === '1') {\n          var arr = _this.state.answers;\n          var step = answer.step;\n          arr.push([step, _this.state.value]);\n\n          _this.setState({\n            answers: arr,\n            step: step,\n            isRight: true,\n            value: ''\n          });\n        } else if (answer.type === '2') {\n          var _arr = _this.state.answers;\n          var _step = answer.step;\n\n          _arr.push([_step, _this.state.value]);\n\n          _this.setState({\n            answers: _arr,\n            step: _step,\n            isRight: true,\n            value: '',\n            finish: true,\n            finishText: 'Finished! You got it.'\n          });\n        }\n      });\n    };\n\n    _this.handle = function (value) {\n      switch (value) {\n        case '1':\n          var arr = new Array();\n          arr.push(' ');\n          arr.push('(');\n          arr.push(_this.state.a);\n          arr.push('x');\n          arr.push(_this.mark[0]);\n          arr.push(_this.mark[1]);\n          arr.push(')');\n          arr.push('(');\n          arr.push(_this.state.c);\n          arr.push('x');\n          arr.push(_this.mark[2]);\n          arr.push(_this.mark[3]);\n          arr.push(')');\n          arr.push(' ');\n          var str = arr.join(\"\");\n\n          _this.setState({\n            equation: str\n          });\n\n          break;\n\n        case '2':\n          var arr2 = new Array();\n          arr2.push(' ');\n          arr2.push('(');\n          arr2.push(_this.state.a);\n          arr2.push('x');\n          arr2.push(_this.mark[0]);\n          arr2.push(_this.mark[1]);\n          arr2.push('y');\n          arr2.push(')');\n          arr2.push('(');\n          arr2.push(_this.state.c);\n          arr2.push('x');\n          arr2.push(_this.mark[2]);\n          arr2.push(_this.mark[3]);\n          arr2.push(')');\n          arr2.push(' ');\n          var str2 = arr2.join(\"\");\n\n          _this.setState({\n            equation: str2\n          });\n\n      }\n    };\n\n    _this.state = {\n      modal14: false,\n      answers: [],\n      a: '-6',\n      b: '-4',\n      c: '3',\n      d: '5',\n      value: '',\n      step: 1,\n      hint: '',\n      isRight: true,\n      finish: false,\n      finishText: '',\n      select: '1',\n      equation: '',\n      jump: false,\n      steps: [{\n        target: \".problem\",\n        placement: 'bottom',\n        content: \"Here is a complex number problem\"\n      }, {\n        target: \".add\",\n        placement: 'bottom',\n        content: \"You can add your own problem\"\n      }, {\n        target: \".submit\",\n        placement: 'bottom',\n        content: \"Submit your answer step by step (you could skip first stepï¼‰\"\n      }]\n    };\n    _this.mark = deleteMark(_this.state.a, _this.state.b, _this.state.c, _this.state.d);\n    _this.str = '';\n    _this.neq = _this.handle();\n    return _this;\n  }\n\n  _createClass(CltPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.node.scrollIntoView();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.mark = deleteMark(this.state.a, this.state.b, this.state.c, this.state.d);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          run = _this$state.run,\n          steps = _this$state.steps;\n      var from;\n\n      if (this.props.location.state != null) {\n        from = this.props.location.state.from;\n        this.setState({\n          jump: true\n        });\n      }\n\n      var urlTo = from;\n      return React.createElement(\"div\", {\n        ref: function ref(node) {\n          return _this2.node = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Joyride, {\n        steps: steps,\n        continuous: true //scrollToFirstStep={true}\n        ,\n        scrollToSteps: false //showOverlay={false}\n        //showStepsProgress={true}\n        //run={run}\n        ,\n        styles: {\n          options: {\n            primaryColor: '#66bb6a',\n            zIndex: 1000\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"d-flex align-items-baseline justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Combining Like Terms\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"8\",\n        className: classes.font3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Video, {\n        url: \"https://myedmaster.oss-us-east-1.aliyuncs.com/comb.mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Before we get into combining like terms, let\\u2019s refresh your memory about what algebraic terms and like terms are so we\\u2019re all on the same page\"), React.createElement(\"div\", {\n        className: \"\".concat(classes.ph, \" d-flex justify-content-start\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"What are algebraic terms?\\xA0\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"-5\"), \",\\xA0\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"2/3\"), \",\\xA0\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"4\")), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Algebraic terms can be numbers;\"), React.createElement(\"div\", {\n        className: \"\".concat(classes.ph, \" d-flex justify-content-start\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"letters that we call variables,\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"x\")), React.createElement(\"div\", {\n        className: \"\".concat(classes.ph, \" d-flex justify-content-start\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"with numbers, \\xA0\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"3x\")), React.createElement(\"div\", {\n        className: \"\".concat(classes.ph, \" d-flex justify-content-start\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"exponents, \\xA0\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"x^2\")), React.createElement(\"div\", {\n        className: \"\".concat(classes.ph, \" d-flex justify-content-start\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"or a combination; \\xA0\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"3x^2\")), React.createElement(\"div\", {\n        className: \"\".concat(classes.ph, \" d-flex justify-content-start mt-2\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"they can also be the product of two or more variables, \\xA0\\xA0 \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"xy\")), React.createElement(\"div\", {\n        className: \"\".concat(classes.ph, \" d-flex justify-content-start\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"with numbers,\\xA0\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"-2xy\")), React.createElement(\"div\", {\n        className: \"\".concat(classes.ph, \" d-flex justify-content-start\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"exponents,\\xA0\\xA0 \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"x^2y^3\")), React.createElement(\"div\", {\n        className: \"\".concat(classes.ph, \" d-flex justify-content-start\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"or a combination;\\xA0\\xA0 \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"-2x^2y^2\")), React.createElement(\"div\", {\n        className: \"\".concat(classes.ph, \" d-flex justify-content-start mt-2\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"and algebraic terms can also be the quotient of two or more variables, \\xA0\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"x/y\")), React.createElement(\"div\", {\n        className: \"\".concat(classes.ph, \" d-flex justify-content-start\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"again with numbers,\\xA0\\xA0 \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"3x/2y\")), React.createElement(\"div\", {\n        className: \"\".concat(classes.ph, \" d-flex justify-content-start\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"exponents, \\xA0\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"x^2/y^3\")), React.createElement(\"div\", {\n        className: \"\".concat(classes.ph, \" d-flex justify-content-start\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"or a combination thereof.\\xA0\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"3x^2/2y^3\")), React.createElement(\"p\", {\n        className: \"\".concat(classes.ph, \" mt-3\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"When we see an algebraic term,  3x2, the number in front of the variable is called the coefficient.  We already said that the letter is called the variable.  And the raised number to the right of the variable is called the exponent.\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Although it looks like there\\u2019s no coefficient in this term,  -x2, we understand when there is no coefficient, that there\\u2019s a 1.  So in this case, it would be a -1.\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"In an algebraic expression, terms are separated by operation signs. To count the number of terms in an expression like this,  2x2y \\u2013 4a + 2m/3n + 9 , first, find the operation signs.  In this case, we have a minus, a plus, and a plus.\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Then, simply count the terms.  There are 4 terms in this expression.\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"The sign in front of a term goes with that term, and we understand that no sign in front of a term means it is a positive.  So the terms in this expression are\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"2x2y   \\u2013 4a  2m/3n  and  9.\")), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"What are like terms?\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), \"Like terms contain the same variables with the same exponents.  So, when comparing two or more terms to determine if they are like, simply look at the variables and the exponents.\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"For example, given 3x and 7x, we look at the variable, which is x, and although we don\\u2019t write it, we know that each has an exponent of 1.  So, since they have the same variable raised to the same exponent, we say they are like terms.\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"In these two terms,  -2x2y3     and      5x2y3 , we see they have variables with exponents.  When we compare them, we see that both have an x2 and a y3.  Since they have the same variables raised to the same exponents, we say they are like terms.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), \"Notice how the coefficients do not need to be the same in order to have like terms.\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"One way to think of like terms is with playing cards.\"), React.createElement(\"img\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"hink of the number as the coefficient, and the suit\\u2014hearts, diamonds, spades, and clubs\\u2014as the variable.  If you were asked to sort these into \\u2018like terms\\u2019, it might look something like this\\u2026\"), React.createElement(\"img\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"All the diamonds would go together, both spades, there\\u2019s only one heart and one club.  So, we sort them by their suit, which we said was the variable.  What might that look like mathematically?\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"To group these terms into like terms, we\\u2019ll look at the variables and exponents.\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"-2y 9xy x2y3 3x2 -2x2y3 4x2y -xy 5x2y3\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"The first term has a y.  Since there are no other terms with just a y, we\\u2019ll set it off to the side. The second term has an xy.  We notice that there is one other term with just xy, so we group those together. The next term has an x2y3.  If we look, we see there are two other terms with an x2y3, so we\\u2019ll group those together. That leaves us with an x2 term and an x2y term.\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"9xy    x2y3   3x2   4x2y   -2y -xy    -2x2y3 5x2y3\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"Now that you know how to group like terms, let\\u2019s move on and start combining like terms.\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Given an algebraic expression, 3x2y + 2y \\u2013 x2y2 \\u2013 4x2y + 8y , to combine like terms, we first have to find the like terms. We have two x2y terms that we will group together.  We have two y terms that we\\u2019ll group together.  And we have one x2y2 term that we\\u2019ll set off to the side. 3x2y \\u2013 4x2y  2y + 8y     -x2y2 Now, to combine like terms, we simply combine the coefficients by adding or subtracting. 3 \\u2013 4 = -1 and we keep the x2y    -1x2y 2 + 8 = +10 and we keep the y   +10y When we put all of that together, it looks something like this: -x2y + 10y \\u2013 x2y2 When writing algebraic terms, we typically write them alphabetically and in descending order of exponents, so the -x2y2 term would go first. -x2y2 + 10y \\u2013 x2y\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"Combining like terms is as simple as --identifying the terms with the same variables and exponents then adding or subtracting the coefficients of those terms. It is a process you will use repeatedly in nearly every area and level of mathematics.\"), React.createElement(\"div\", {\n        className: \"problem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        className: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        color: \"blue-grey\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\".concat(classes.pb),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"Problem\"), React.createElement(\"div\", {\n        className: \"mr-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"browser-default\",\n        size: \"sm\",\n        onChange: function onChange(e) {\n          _this2.handle(e.target.value);\n\n          _this2.setState({\n            // equation:this.str,\n            select: e.target.value,\n            answers: [],\n            finish: false,\n            step: 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"Choose your format\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, \"(ax+b)(cx+d)\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"(ax+by)(cx+d)\")))), React.createElement(\"p\", {\n        className: \"\".concat(classes.pb2),\n        style: {\n          borderStyle: 'solid',\n          borderBottomColor: '#9e9e9e',\n          borderWidth: '0 0 1px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \"Solve the following:\", this.state.equation, \"Begin your work by first rewriting the problem in 'Step1' in the worksheet.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"\".concat(classes.pb3, \" add\"),\n        onClick: this.toggle(14),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"ADD YOUR OWN PROBLEM\")), React.createElement(MDBModal, {\n        isOpen: this.state.modal14,\n        toggle: this.toggle(14),\n        size: \"lg\",\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        toggle: this.toggle(14),\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '28px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"Add Your Own Problem\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '16px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"Add your own problem in the chosen format. You can set the values of a, b, c, and d below.\"), React.createElement(\"div\", {\n        className: \"d-flex justify-content-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            a: e.target.value\n          });\n        },\n        label: \"a\",\n        className: \"mr-3\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            b: e.target.value\n          });\n        },\n        label: \"b\",\n        className: \"mr-3\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            c: e.target.value\n          });\n        },\n        label: \"c\",\n        className: \"mr-3 \",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            d: e.target.value\n          });\n        },\n        label: \"d\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }))), React.createElement(MDBModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple\",\n        size: \"md\",\n        onClick: this.toggle(14),\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '12px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(MDBBtn, {\n        className: \"orange accent-2\",\n        size: \"md\",\n        onClick: function onClick() {\n          _this2.handle(_this2.state.select);\n\n          _this2.setState({\n            // equation:this.str,\n            modal14: false,\n            answers: [],\n            finish: false,\n            step: 1\n          });\n        },\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '12px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, \"Set\"))))), React.createElement(\"div\", {\n        className: \"submit mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\".concat(classes.worksheet, \" px-3 py-3\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: classes.ws,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, \"Worksheet\"), React.createElement(\"div\", {\n        className: \"px-3 pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, this.state.answers.map(function (item, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"py-2 d-flex align-items-baseline\",\n          style: {\n            border: 'solid',\n            borderColor: '#388e3c',\n            borderWidth: '0 0 2px 0',\n            fontFamily: '\\'Roboto\\',sans-serif',\n            fontSize: '18px',\n            fontWeight: 'bolder'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            color: '#388e3c'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 531\n          },\n          __self: this\n        }, \"Step\", item[0] - 1), \" \\xA0\", item[1]);\n      })), !this.state.finish ? React.createElement(\"div\", {\n        className: \"px-3 d-flex align-items-baseline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-grow-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"Step \".concat(this.state.step.toString()),\n        className: \"mr-3 submit\",\n        size: \"sm\",\n        value: this.state.value,\n        style: this.state.isRight ? {\n          border: 'solid',\n          borderColor: '#81c784',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '18px'\n        } : {\n          border: 'solid',\n          borderColor: '#d32f2f',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '18px'\n        },\n        onChange: function onChange(e) {\n          _this2.setState({\n            value: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ml-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        className: \" green lighten-2 m-0\",\n        onClick: function onClick() {\n          _this2.post(_this2.state.select);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"clipboard-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      })))) : React.createElement(\"p\", {\n        className: classes.pb4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, \"Finished! You got it\"), React.createElement(\"div\", {\n        className: \"px-3 pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100 green lighten-3\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.pb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, \"Hints/Feedback\"), React.createElement(\"p\", {\n        className: classes.pb2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, this.state.hint)))))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, \"Using the FOIL method for multiplying binomials Helps ensure you multiply both terms in the first binomial by both terms in the second, Helps you keep your work organized as you solve the problem, And makes it easier to review your work for errors, So next time you\\u2019re multiplying two binomials, wrap things up quickly and easily with FOIL!\"))));\n    }\n  }]);\n\n  return CltPage;\n}(React.Component);","map":{"version":3,"sources":["/Users/vivian/Desktop/frondend/src/page/Clt/Page/index.js"],"names":["React","Video","MDBRow","MDBCol","MDBBtn","MDBCard","MDBIcon","MDBModal","MDBInput","MDBModalFooter","InlineMath","BlockMath","classes","url","Joyride","deleteMark","CltPage","props","toggle","nr","modalNumber","setState","state","post","value","option","method","headers","body","JSON","stringify","a","b","c","d","step","toString","fetch","then","response","json","answer","hint","content","type","isRight","arr","answers","push","finish","finishText","handle","Array","mark","str","join","equation","arr2","str2","modal14","select","jump","steps","target","placement","neq","node","scrollIntoView","prevProps","run","from","location","urlTo","options","primaryColor","zIndex","title2","font3","ph","boxShadow","borderRadius","pb","e","pb2","borderStyle","borderBottomColor","borderWidth","pb3","fontFamily","fontSize","fontWeight","border","borderColor","worksheet","ws","map","item","index","color","pb4","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Video} from \"../video-component/video\";\nimport {MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon, MDBModal, MDBInput, MDBModalFooter} from 'mdbreact'\nimport { InlineMath, BlockMath } from 'react-katex';\n\nimport classes from './index.module.css'\n\nimport {url} from \"../../../tool/fetch-help\";\nimport Joyride from 'react-joyride';\nimport {deleteMark} from \"../../../tool/delete-mark\";\n\n\n\nexport class CltPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal14: false,\n            answers:[],\n            a:'-6',\n            b:'-4',\n            c:'3',\n            d:'5',\n            value:'',\n            step:1,\n            hint:'',\n            isRight:true,\n            finish:false,\n            finishText:'',\n            select:'1',\n            equation:'',\n            jump:false,\n\n            steps: [\n                {\n                    target: \".problem\",\n                    placement: 'bottom',\n                    content: \"Here is a complex number problem\"\n                },\n                {\n                    target: \".add\",\n                    placement: 'bottom',\n                    content: \"You can add your own problem\"\n                },\n                {\n                    target: \".submit\",\n                    placement: 'bottom',\n                    content: \"Submit your answer step by step (you could skip first stepï¼‰\"\n                }\n            ]\n        };\n        this.mark = deleteMark(this.state.a, this.state.b, this.state.c, this.state.d)\n        this.str =''\n        this.neq = this.handle()\n\n\n    }\n    componentDidMount() {\n        this.node.scrollIntoView();\n    }\n    componentDidUpdate(prevProps) {\n        this.mark = deleteMark(this.state.a, this.state.b, this.state.c, this.state.d)\n    }\n    toggle = nr => () => {\n        let modalNumber = 'modal' + nr;\n        this.setState({\n            [modalNumber]: !this.state[modalNumber],\n        });\n    };\n\n    post = (value)=>{\n        const option={\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body:JSON.stringify({\n                \"A\":this.state.a,\n                \"B\":this.state.b,\n                \"C\":this.state.c,\n                \"D\":this.state.d,\n                \"step\":this.state.step.toString(),\n                \"answer\":this.state.value,\n            })\n        };\n        fetch(`${url}/FOIL/${value}`,option)\n            .then(response=>response.json())\n            .then(answer=>{\n                this.setState({\n                    hint:answer.content\n                })\n                if (answer.type === '0'){\n                    this.setState({\n                        isRight:false\n                    })\n                }\n                else if (answer.type === '1'){\n                    let arr = this.state.answers;\n                    let step= answer.step;\n                    arr.push([step, this.state.value])\n                    this.setState({\n                        answers:arr,\n                        step:step,\n                        isRight:true,\n                        value:''\n                    })\n                }\n                else if(answer.type === '2'){\n                    let arr = this.state.answers;\n                    let step= answer.step;\n                    arr.push([step, this.state.value])\n                    this.setState({\n                        answers:arr,\n                        step:step,\n                        isRight:true,\n                        value:'',\n                        finish:true,\n                        finishText:'Finished! You got it.'\n                    })\n                }\n            })\n    }\n    handle = (value) =>{\n        switch (value) {\n            case '1':\n                let arr = new Array();\n                arr.push(' ');\n                arr.push('(');\n                arr.push(this.state.a);\n                arr.push('x');\n                arr.push(this.mark[0]);\n                arr.push(this.mark[1]);\n                arr.push(')');\n                arr.push('(');\n                arr.push(this.state.c);\n                arr.push('x');\n                arr.push(this.mark[2]);\n                arr.push(this.mark[3]);\n                arr.push(')');\n                arr.push(' ');\n                let str = arr.join(\"\");\n                this.setState({\n                    equation:str\n                });\n                break;\n            case '2':\n                let arr2 = new Array();\n                arr2.push(' ');\n                arr2.push('(');\n                arr2.push(this.state.a);\n                arr2.push('x');\n                arr2.push(this.mark[0]);\n                arr2.push(this.mark[1]);\n                arr2.push('y');\n                arr2.push(')');\n                arr2.push('(');\n                arr2.push(this.state.c);\n                arr2.push('x');\n                arr2.push(this.mark[2]);\n                arr2.push(this.mark[3]);\n                arr2.push(')');\n                arr2.push(' ');\n                let str2 = arr2.join(\"\");\n                this.setState({\n                    equation:str2\n                });\n        }\n\n    };\n\n\n\n    render() {\n        const { run,steps } = this.state;\n        let from;\n        if(this.props.location.state != null){\n\n            from = this.props.location.state.from\n            this.setState({\n                jump:true\n            })\n        }\n        const urlTo = from;\n\n        return (\n            <div ref={node => this.node = node}>\n                <Joyride\n                    steps={steps}\n                    continuous={true}\n                    //scrollToFirstStep={true}\n                    scrollToSteps={false}\n                    //showOverlay={false}\n                    //showStepsProgress={true}\n                    //run={run}\n                    styles={{\n                        options: {\n                            primaryColor: '#66bb6a',\n                            zIndex: 1000,\n                        }\n                    }}\n                />\n\n                <div className=\"d-flex align-items-baseline justify-content-center\">\n                    {/*<div className={classes.title1}>*/}\n                        {/*FOIL: &nbsp;*/}\n                    {/*</div>*/}\n                    <div className={classes.title2}>\n                        Combining Like Terms\n                    </div>\n                </div>\n\n                <MDBRow>\n                    <MDBCol size=\"2\">\n                    </MDBCol>\n                    <MDBCol size=\"8\" className={classes.font3}>\n                        <Video url='https://myedmaster.oss-us-east-1.aliyuncs.com/comb.mp4'/>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol size=\"2\">\n\n                    </MDBCol>\n                    <MDBCol size=\"8\">\n                        <p className={classes.ph}>\n                            Before we get into combining like terms, letâ€™s refresh your memory about what algebraic terms and like terms are so weâ€™re all on the same page\n                        </p>\n                        <div className={`${classes.ph} d-flex justify-content-start`}>\n                            What are algebraic terms?&nbsp;&nbsp;\n                            <InlineMath>-5</InlineMath>,&nbsp;&nbsp;<InlineMath>2/3</InlineMath>,&nbsp;&nbsp;<InlineMath>4</InlineMath>\n                        </div>\n                        <p className={classes.ph}>\n                            Algebraic terms can be numbers;\n                        </p>\n                        <div className={`${classes.ph} d-flex justify-content-start`}>\n                            letters that we call variables,<InlineMath>x</InlineMath>\n                        </div>\n                        <div className={`${classes.ph} d-flex justify-content-start`}>\n                            with numbers, &nbsp;&nbsp;<InlineMath>3x</InlineMath>\n                        </div>\n                        <div className={`${classes.ph} d-flex justify-content-start`}>\n                            exponents, &nbsp;&nbsp;<InlineMath>x^2</InlineMath>\n                        </div>\n                        <div className={`${classes.ph} d-flex justify-content-start`}>\n                            or a combination; &nbsp;&nbsp;<InlineMath>3x^2</InlineMath>\n                        </div>\n                        <div className={`${classes.ph} d-flex justify-content-start mt-2`}>\n                            they can also be the product of two or more variables, &nbsp;&nbsp;\t<InlineMath>xy</InlineMath>\n                        </div>\n                        <div className={`${classes.ph} d-flex justify-content-start`}>\n                            with numbers,&nbsp;&nbsp;<InlineMath>-2xy</InlineMath>\n                        </div>\n                        <div className={`${classes.ph} d-flex justify-content-start`}>\n                            exponents,&nbsp;&nbsp; <InlineMath>x^2y^3</InlineMath>\n                        </div>\n                        <div className={`${classes.ph} d-flex justify-content-start`}>\n                            or a combination;&nbsp;&nbsp; <InlineMath>-2x^2y^2</InlineMath>\n                        </div>\n                        <div className={`${classes.ph} d-flex justify-content-start mt-2`}>\n                            and algebraic terms can also be the quotient of two or more variables,\t&nbsp;&nbsp;<InlineMath>x/y</InlineMath>\n                        </div>\n                        <div className={`${classes.ph} d-flex justify-content-start`}>\n                            again with numbers,&nbsp;&nbsp; <InlineMath>3x/2y</InlineMath>\n                        </div>\n                        <div className={`${classes.ph} d-flex justify-content-start`}>\n                            exponents, &nbsp;&nbsp;<InlineMath>x^2/y^3</InlineMath>\n                        </div>\n                        <div className={`${classes.ph} d-flex justify-content-start`}>\n                            or a combination thereof.&nbsp;&nbsp;<InlineMath>3x^2/2y^3</InlineMath>\n                        </div>\n\n                        <p className={`${classes.ph} mt-3`}>\n                            When we see an algebraic term,  3x2, the number in front of the variable is called the coefficient.  We already said that the letter is called the variable.  And the raised number to the right of the variable is called the exponent.\n                        </p>\n                        <p className={classes.ph}>\n                            Although it looks like thereâ€™s no coefficient in this term,  -x2, we understand when there is no coefficient, that thereâ€™s a 1.  So in this case, it would be a -1.\n                        </p>\n                        <p className={classes.ph}>\n                            In an algebraic expression, terms are separated by operation signs. To count the number of terms in an expression like this,  2x2y â€“ 4a + 2m/3n + 9 , first, find the operation signs.  In this case, we have a minus, a plus, and a plus.\n                        </p>\n                        <p className={classes.ph}>\n                            Then, simply count the terms.  There are 4 terms in this expression.\n                        </p>\n                        <p className={classes.ph}>\n                            The sign in front of a term goes with that term, and we understand that no sign in front of a term means it is a positive.  So the terms in this expression are\n                            <BlockMath>2x2y \t\tâ€“ 4a\t\t2m/3n\t\tand \t9.</BlockMath>\n                        </p>\n                        <p className={classes.ph}>\n                            What are like terms?\n                            <br/>\n                            Like terms contain the same variables with the same exponents.  So, when comparing two or more terms to determine if they are like, simply look at the variables and the exponents.\n                        </p>\n                        <p className={classes.ph}>\n                            For example, given 3x and 7x, we look at the variable, which is x, and although we donâ€™t write it, we know that each has an exponent of 1.  So, since they have the same variable raised to the same exponent, we say they are like terms.\n                        </p>\n                        <p className={classes.ph}>\n                            In these two terms,  -2x2y3     and      5x2y3 , we see they have variables with exponents.  When we compare them, we see that both have an x2 and a y3.  Since they have the same variables raised to the same exponents, we say they are like terms.\n                            <br/>\n                            Notice how the coefficients do not need to be the same in order to have like terms.\n                        </p>\n                        <p className={classes.ph}>\n                            One way to think of like terms is with playing cards.\n                        </p>\n                        <img>\n\n                        </img>\n                        <p className={classes.ph}>\n                            hink of the number as the coefficient, and the suitâ€”hearts, diamonds, spades, and clubsâ€”as the variable.  If you were asked to sort these into â€˜like termsâ€™, it might look something like thisâ€¦\n                        </p>\n                        <img>\n\n                        </img>\n                        <p className={classes.ph}>\n                            All the diamonds would go together, both spades, thereâ€™s only one heart and one club.  So, we sort them by their suit, which we said was the variable.  What might that look like mathematically?\n                        </p>\n                        <p className={classes.ph}>\n                            To group these terms into like terms, weâ€™ll look at the variables and exponents.\n                        </p>\n                        <BlockMath>-2y\t9xy\tx2y3\t3x2\t-2x2y3\t4x2y\t-xy\t5x2y3</BlockMath>\n                        <p className={classes.ph}>\n                            The first term has a y.  Since there are no other terms with just a y, weâ€™ll set it off to the side.\n                            The second term has an xy.  We notice that there is one other term with just xy, so we group those together.\n                            The next term has an x2y3.  If we look, we see there are two other terms with an x2y3, so weâ€™ll group those together.\n                            That leaves us with an x2 term and an x2y term.\n\n                        </p>\n                        <p className={classes.ph}>\n                            9xy\t\t\t\tx2y3\t\t\t3x2\t\t\t4x2y\t\t\t-2y\n                            -xy\t\t\t\t-2x2y3\n                            5x2y3\n\n                        </p>\n                        <p className={classes.ph}>\n                            Now that you know how to group like terms, letâ€™s move on and start combining like terms.\n                        </p>\n                        <p className={classes.ph}>\n                            Given an algebraic expression, 3x2y + 2y â€“ x2y2 â€“ 4x2y + 8y , to combine like terms, we first have to find the like terms.\n                            We have two x2y terms that we will group together.  We have two y terms that weâ€™ll group together.  And we have one x2y2 term that weâ€™ll set off to the side.\n                            3x2y â€“ 4x2y \t2y + 8y\t    -x2y2\n                            Now, to combine like terms, we simply combine the coefficients by adding or subtracting.\n                            3 â€“ 4 = -1 and we keep the x2y    -1x2y\n                            2 + 8 = +10 and we keep the y   +10y\n                            When we put all of that together, it looks something like this:\n                            -x2y + 10y â€“ x2y2\n                            When writing algebraic terms, we typically write them alphabetically and in descending order of exponents, so the -x2y2 term would go first.\n                            -x2y2 + 10y â€“ x2y\n\n                        </p>\n                        <p className={classes.ph}>\n                            Combining like terms is as simple as\n                            --identifying the terms with the same variables and exponents\n                            then\n                            adding or subtracting the coefficients of those terms.\n                            It is a process you will use repeatedly in nearly every area and level of mathematics.\n                        </p>\n\n                        <div className=\"problem\"></div>\n                        <MDBRow center>\n                            <MDBCol className=\"add\">\n                                <MDBCard\n                                    size=\"8\"\n                                    color=\"blue-grey\"\n                                    text=\"white\"\n                                    className=\"py-3 px-3 w-100\"\n                                    style={{boxShadow:'none', borderRadius:'0'}}\n                                >\n                                    <div className='d-flex justify-content-start'>\n                                        <div className={`${classes.pb}`}>Problem</div>\n                                        <div className='mr-3'>\n                                            <select\n                                                className=\"browser-default\"\n                                                size = 'sm'\n                                                onChange={(e)=>{\n                                                    this.handle(e.target.value);\n                                                    this.setState({\n                                                        // equation:this.str,\n                                                        select:e.target.value,\n                                                        answers:[],\n                                                        finish:false,\n                                                        step:1,\n                                                    });\n                                                }}\n                                            >\n                                                <option>Choose your format</option>\n                                                <option value=\"1\">(ax+b)(cx+d)</option>\n                                                <option value=\"2\">(ax+by)(cx+d)</option>\n                                            </select>\n                                        </div>\n                                    </div>\n\n\n\n\n                                    <p\n                                        className={`${classes.pb2}`}\n                                        style={{borderStyle:'solid',borderBottomColor:'#9e9e9e', borderWidth:'0 0 1px 0'}}\n                                    >\n                                        Solve the following:\n                                        {this.state.equation}\n                                        Begin your work by first rewriting the problem in 'Step1' in the worksheet.\n                                        <tr/><br/>\n                                    </p>\n                                    <p\n                                        className={`${classes.pb3} add`}\n\n                                        onClick={this.toggle(14)}\n                                    >\n                                        ADD YOUR OWN PROBLEM\n                                    </p>\n                                </MDBCard>\n\n                                <MDBModal isOpen={this.state.modal14} toggle={this.toggle(14)} size=\"lg\" centered>\n                                    <div className=\"p-3\">\n                                        <div\n                                            toggle={this.toggle(14)}\n\n                                            style={{\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'28px',\n                                                fontWeight:'bolder'\n                                            }}\n                                        >\n                                            Add Your Own Problem\n                                        </div>\n                                        <br/>\n                                        <div\n                                            style={{\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'16px',\n                                                fontWeight:'bolder'\n                                            }}\n                                        >\n                                            Add your own problem in the chosen format. You can set the values of a, b, c, and d below.\n                                        </div>\n                                        <div className=\"d-flex justify-content-start\">\n                                            <MDBInput\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        a: e.target.value\n                                                    });\n                                                }}\n\n                                                label=\"a\" className=\"mr-3\"  size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                            />\n                                            <MDBInput\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        b: e.target.value\n                                                    });\n                                                }}\n                                                label=\"b\" className=\"mr-3\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                            />\n                                            <MDBInput\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        c: e.target.value\n                                                    });\n                                                }}\n                                                label=\"c\" className=\"mr-3 \" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                            />\n                                            <MDBInput\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        d: e.target.value\n                                                    });\n                                                }}\n                                                label=\"d\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <MDBModalFooter>\n                                        <MDBBtn\n                                            color=\"deep-purple\"\n                                            size=\"md\"\n                                            onClick={this.toggle(14)}\n                                            style={{\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'12px',\n                                                fontWeight:'bolder'\n                                            }}\n                                        >Cancel\n                                        </MDBBtn>\n                                        <MDBBtn\n                                            className=\"orange accent-2\"\n                                            size=\"md\"\n                                            onClick={()=>{\n                                                this.handle(this.state.select);\n                                                this.setState({\n                                                    // equation:this.str,\n                                                    modal14:false,\n                                                    answers:[],\n                                                    finish:false,\n                                                    step:1,\n                                                })\n                                            }}\n                                            style={{\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'12px',\n                                                fontWeight:'bolder'\n                                            }}\n                                        >Set</MDBBtn>\n                                    </MDBModalFooter>\n                                </MDBModal>\n\n                            </MDBCol>\n                        </MDBRow>\n                        <div className=\"submit mt-5\"></div>\n                        <MDBRow center>\n\n                            <MDBCol>\n                                <div className={`${classes.worksheet} px-3 py-3`}>\n                                    <label className={classes.ws}>\n                                        Worksheet\n                                    </label>\n                                    <div\n                                        className=\"px-3 pt-3\"\n                                    >\n                                        {this.state.answers.map((item, index)=>{\n                                            return<div\n                                                key={index}\n                                                className=\"py-2 d-flex align-items-baseline\"\n                                                style={{\n                                                    border:'solid',\n                                                    borderColor:'#388e3c',\n                                                    borderWidth:'0 0 2px 0',\n                                                    fontFamily:'\\'Roboto\\',sans-serif',\n                                                    fontSize:'18px',\n                                                    fontWeight:'bolder'\n                                                }}\n                                            >\n                                                <span style={{fontWeight:'bold',color:'#388e3c'}}>Step{item[0]-1}</span> &nbsp;{item[1]}\n\n                                            </div>\n                                        })}\n                                    </div>\n                                    {!this.state.finish?(\n                                        <div className=\"px-3 d-flex align-items-baseline\">\n\n                                            <div className=\"flex-grow-1\">\n\n                                                <MDBInput\n                                                    label={`Step ${this.state.step.toString()}`}\n                                                    className=\"mr-3 submit\"\n                                                    size=\"sm\"\n                                                    value={this.state.value}\n                                                    style={this.state.isRight ?{\n                                                        border:'solid',\n                                                        borderColor:'#81c784',\n                                                        borderWidth:'0 0 2px 0',\n                                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                                        fontSize:'18px'\n                                                    }:{\n                                                        border:'solid',\n                                                        borderColor:'#d32f2f',\n                                                        borderWidth:'0 0 2px 0',\n                                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                                        fontSize:'18px'\n                                                    }}\n                                                    onChange={(e) => {\n                                                        this.setState({\n                                                            value: e.target.value\n                                                        });\n                                                    }}\n                                                />\n\n                                            </div>\n                                            <div className=\"ml-4\">\n                                                <MDBBtn\n                                                    tag=\"a\" floating className=\" green lighten-2 m-0\"\n                                                    onClick={()=>{this.post(this.state.select)}}\n                                                >\n                                                    <MDBIcon icon=\"clipboard-check\" />\n                                                </MDBBtn>\n                                                {/*<MDBBtn*/}\n                                                {/*tag=\"a\" floating className=\" orange lighten-2\"*/}\n                                                {/*>*/}\n                                                {/*<MDBIcon icon=\"microphone\" />*/}\n                                                {/*</MDBBtn>*/}\n                                            </div>\n\n                                        </div>\n                                    ):(\n                                        <p className={classes.pb4}>Finished! You got it</p>\n                                    )}\n\n\n\n                                    <div className=\"px-3 pt-3\">\n                                        <MDBCard\n                                            size=\"8\"\n                                            text=\"white\"\n                                            className=\"py-3 px-3 w-100 green lighten-3\"\n                                            style={{boxShadow:'none', borderRadius:'0'}}\n                                        >\n                                            <p className={classes.pb}>Hints/Feedback</p>\n                                            <p className={classes.pb2}>{this.state.hint}</p>\n                                            {/*<MDBRow center>*/}\n                                            {/*<MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">*/}\n                                            {/*<MDBIcon icon=\"angle-left\" />*/}\n                                            {/*</MDBBtn>*/}\n                                            {/*<MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">*/}\n                                            {/*<MDBIcon icon=\"angle-right\" />*/}\n                                            {/*</MDBBtn>*/}\n                                            {/*</MDBRow>*/}\n                                        </MDBCard>\n                                    </div>\n\n                                </div>\n                            </MDBCol>\n                        </MDBRow>\n                        <tr/><br/>\n                        <p className={classes.ph}>\n                            Using the FOIL method for multiplying binomials\n                            Helps ensure you multiply both terms in the first binomial by both terms in the second,\n                            Helps you keep your work organized as you solve the problem,\n                            And makes it easier to review your work for errors,\n\n                            So next time youâ€™re multiplying two binomials, wrap things up quickly and easily with FOIL!\n\n                        </p>\n                    </MDBCol>\n                </MDBRow>\n\n                {/*<br/>*/}\n                {/*<MDBRow center>*/}\n                {/*<MDBCol size=\"2\">*/}\n                {/*<MDBBtn*/}\n                {/*color=\"deep-purple lighten-1\"*/}\n                {/*className={`${classes.btn} w-100 mt-3`}*/}\n                {/*onClick={() => {this.props.history.goBack();}}*/}\n                {/*>Previous Lesson</MDBBtn>*/}\n                {/*</MDBCol>*/}\n                {/*<MDBCol size=\"2\">*/}\n                {/*<MDBBtn*/}\n                {/*color=\"deep-purple lighten-1\"*/}\n                {/*className={`${classes.btn} w-100 mt-3`}*/}\n                {/*onClick={() => {this.props.history.push('/complex/subt');}}*/}\n                {/*>Next Lesson</MDBBtn>*/}\n                {/*</MDBCol>*/}\n                {/*</MDBRow>*/}\n\n            </div>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}