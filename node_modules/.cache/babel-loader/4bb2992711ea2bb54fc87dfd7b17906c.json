{"ast":null,"code":"import _classCallCheck from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vivian/Desktop/frondend/src/CRUD_module/problem_list/index.js\";\nimport React from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport classes from './index.module.css';\nimport { Nav } from \"../../page/Nav\";\nimport { ProblemPanel } from \"../component/problem_panel\";\nimport { nodeurl } from \"../../tool/fetch-help\";\nimport { ProblemAdd } from \"../component/problem_add\";\n\nvar ProblemListReact =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProblemListReact, _React$Component);\n\n  function ProblemListReact(props) {\n    var _this;\n\n    _classCallCheck(this, ProblemListReact);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProblemListReact).call(this, props));\n\n    _this.handleOnSave = function () {\n      _this.setState({\n        modify: true\n      });\n    };\n\n    _this.state = {\n      render: 0,\n      modify: false\n    };\n    return _this;\n  }\n\n  _createClass(ProblemListReact, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var option = {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json'\n        }\n      };\n      fetch(\"\".concat(nodeurl, \"/problem\"), option).then(function (response) {\n        return response.json();\n      }).then(function (res) {\n        _this2.setState({\n          backend: res,\n          render: 1\n        });\n      });\n    } // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     if(this.state.modify){\n    //         const option={\n    //             method:'GET',\n    //             headers: {\n    //                 'content-type': 'application/json',\n    //             }\n    //         };\n    //         fetch(`${nodeurl}/problem`,option)\n    //             .then(response=>response.json())\n    //             .then(res=>{\n    //                 this.setState({\n    //                     backend:res,\n    //                     render:1\n    //\n    //                 });\n    //             });\n    //         this.setState({\n    //             modify:false,\n    //         })\n    //     }\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.render === 1) {\n        console.log(this.state.modify);\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(Nav, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"cell-wall\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"cell-membrane\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"mt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"All Problems\"), React.createElement(\"div\", {\n          className: classes.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row py-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"#\"), React.createElement(\"div\", {\n          className: \"col-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Name\"), React.createElement(\"div\", {\n          className: \"col-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Description\"), React.createElement(\"div\", {\n          className: \"col-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Para number\"), React.createElement(\"div\", {\n          className: \"col-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Start Format\"), React.createElement(\"div\", {\n          className: \"col-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \" \", React.createElement(ProblemAdd, {\n          onSave: this.handleOnSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        })))), this.state.backend.map(function (item, index) {\n          return React.createElement(ProblemPanel, {\n            key: index,\n            id: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          });\n        }))));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return ProblemListReact;\n}(React.Component);\n\nexport var ProblemList = withRouter(ProblemListReact);","map":{"version":3,"sources":["/Users/vivian/Desktop/frondend/src/CRUD_module/problem_list/index.js"],"names":["React","withRouter","classes","Nav","ProblemPanel","nodeurl","ProblemAdd","ProblemListReact","props","handleOnSave","setState","modify","state","render","option","method","headers","fetch","then","response","json","res","backend","console","log","title","map","item","index","id","Component","ProblemList"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {withRouter} from 'react-router-dom';\nimport classes from './index.module.css';\nimport {Nav} from \"../../page/Nav\";\nimport {ProblemPanel} from \"../component/problem_panel\";\nimport {nodeurl} from \"../../tool/fetch-help\";\nimport {ProblemAdd} from \"../component/problem_add\";\n\nclass ProblemListReact extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            render:0,\n            modify:false\n\n        }\n    }\n    componentDidMount() {\n        const option={\n            method:'GET',\n            headers: {\n                'content-type': 'application/json',\n            }\n        };\n        fetch(`${nodeurl}/problem`,option)\n            .then(response=>response.json())\n            .then(res=>{\n                this.setState({\n                    backend:res,\n                    render:1\n\n                });\n            })\n    }\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     if(this.state.modify){\n    //         const option={\n    //             method:'GET',\n    //             headers: {\n    //                 'content-type': 'application/json',\n    //             }\n    //         };\n    //         fetch(`${nodeurl}/problem`,option)\n    //             .then(response=>response.json())\n    //             .then(res=>{\n    //                 this.setState({\n    //                     backend:res,\n    //                     render:1\n    //\n    //                 });\n    //             });\n    //         this.setState({\n    //             modify:false,\n    //         })\n    //     }\n    // }\n\n    handleOnSave = () =>{\n        this.setState({\n            modify:true\n        })\n    };\n\n    render() {\n        if(this.state.render === 1){\n            console.log(this.state.modify);\n            return (\n\n                <div>\n                    <Nav/>\n                    <div className='cell-wall'>\n                        <div className='cell-membrane'>\n                            <div className='mt-2'>\n                                All Problems\n                            </div>\n                            <div className={classes.title}>\n                                <div className ='row py-2'>\n                                    <div className='col-2'>#</div>\n                                    <div className='col-2'>Name</div>\n                                    <div className='col-3'>Description</div>\n                                    <div className='col-2'>Para number</div>\n                                    <div className='col-2'>Start Format</div>\n                                    <div className='col-1'> <ProblemAdd onSave={this.handleOnSave}/></div>\n                                </div>\n                            </div>\n                            {\n                                this.state.backend.map((item, index)=>{\n                                    return <ProblemPanel key={index} id={item.id}/>\n                                })\n                            }\n\n                        </div>\n                    </div>\n\n                </div>\n            );\n        }\n        else{\n            return null\n        }\n\n    }\n}\nexport const ProblemList = withRouter(ProblemListReact);"]},"metadata":{},"sourceType":"module"}