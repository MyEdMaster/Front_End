{"ast":null,"code":"import _defineProperty from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vivian/Desktop/frondend/src/page/ComplexNumber/Page/Sub.js\";\nimport React from 'react';\nimport { Video } from \"../video-component/video\";\nimport { MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon, MDBModal, MDBInput, MDBModalFooter } from 'mdbreact';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport classes from './index.module.css';\nimport { ComplexNumberMenu } from \"./Menu\";\nimport Joyride from 'react-joyride';\nimport { url } from \"../../../tool/fetch-help\";\nimport { deleteMark } from \"../../../tool/delete-mark\";\nexport var ComplexSubt =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComplexSubt, _React$Component);\n\n  function ComplexSubt(props) {\n    var _this;\n\n    _classCallCheck(this, ComplexSubt);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComplexSubt).call(this, props));\n\n    _this.toggle = function (nr) {\n      return function () {\n        var modalNumber = 'modal' + nr;\n\n        _this.setState(_defineProperty({}, modalNumber, !_this.state[modalNumber]));\n      };\n    };\n\n    _this.post = function () {\n      var option = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"A\": _this.state.a,\n          \"B\": _this.state.b,\n          \"C\": _this.state.c,\n          \"D\": _this.state.d,\n          \"step\": _this.state.step.toString(),\n          \"answer\": _this.state.value\n        })\n      };\n      fetch(\"\".concat(url, \"/complex_number/2\"), option).then(function (response) {\n        return response.json();\n      }).then(function (answer) {\n        _this.setState({\n          hint: answer.content\n        });\n\n        if (answer.type === '0') {\n          _this.setState({\n            isRight: false\n          });\n        } else if (answer.type === '1') {\n          var arr = _this.state.answers;\n          var step = answer.step;\n          arr.push([step, _this.state.value]);\n\n          _this.setState({\n            answers: arr,\n            step: step,\n            isRight: true,\n            value: ''\n          });\n        } else if (answer.type === '2') {\n          var _arr = _this.state.answers;\n          var _step = answer.step;\n\n          _arr.push([_step, _this.state.value]);\n\n          _this.setState({\n            answers: _arr,\n            step: _step,\n            isRight: true,\n            value: '',\n            finish: true,\n            finishText: 'Finished! You got it.'\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      modal14: false,\n      answers: [],\n      a: '-6',\n      b: '-4',\n      c: '2',\n      d: '5',\n      value: '',\n      step: 1,\n      hint: '',\n      isRight: true,\n      finish: false,\n      finishText: '',\n      steps: [{\n        target: \".problem_list\",\n        placement: 'bottom',\n        content: \"Here is a complex number problem_list\"\n      }, {\n        target: \".add\",\n        placement: 'bottom',\n        content: \"You can add your own problem_list\"\n      }, {\n        target: \".submit\",\n        placement: 'bottom',\n        content: \"Submit your answer step by step (you could skip first stepï¼‰\"\n      }]\n    };\n    _this.mark = deleteMark(_this.state.a, _this.state.b, _this.state.c, _this.state.d);\n    return _this;\n  }\n\n  _createClass(ComplexSubt, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.node.scrollIntoView();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.mark = deleteMark(this.state.a, this.state.b, this.state.c, this.state.d);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          run = _this$state.run,\n          steps = _this$state.steps;\n      return React.createElement(\"div\", {\n        ref: function ref(node) {\n          return _this2.node = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Joyride, {\n        steps: steps,\n        continuous: true //scrollToFirstStep={true}\n        ,\n        scrollToSteps: false //showOverlay={false}\n        //showStepsProgress={true}\n        //run={run}\n        ,\n        styles: {\n          options: {\n            primaryColor: '#66bb6a',\n            zIndex: 1000\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"d-flex align-items-baseline justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"COMPLEX NUMBERS: \\xA0\"), React.createElement(\"div\", {\n        className: classes.title2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Subtraction\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(ComplexNumberMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        size: \"8\",\n        className: classes.font3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Video, {\n        url: \"https://myedmaster.oss-us-east-1.aliyuncs.com/subtcomplex.mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Just like adding complex numbers, subtracting them is fairly simple\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), \"Remember, a complex number is a combination of a real number and an imaginary number. We generally write complex numbers in \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"a + bi\"), \"\\xA0 form,  where a is the real number and bi is the imaginary number.  For example, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"3 + 7i\"), \"\\xA0or \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"5 - 2i\"), \"\\xA0.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), \"Also, whether adding, subtracting, multiplying or dividing complex numbers, we enclose each complex number inside parentheses like this\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"(6 - 5i) + (2 + 3i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"(4 + 8i) - (3 - 2i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"(7 - 4i)(5 + 9i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"(8 - 6i)/(1- 3i)\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Again, just like when adding complex numbers, you can only combine \\u2018like terms\\u2019, meaning you can only combine the real part of each number together and the imaginary part of each number together.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), \"Let\\u2019s take a look at a problem, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"(8 + 3i) - (5 - 6i)\"), \"\\xA0\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), \"Since this is subtracting and we\\u2019re dealing with parentheses, the first and most important thing we want to do is distribute the negative to both the real part, the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"5\"), \", and the imaginary part, the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"-6i\"), \", of the complex number that follows it. Doing so leaves you with \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"8 + 3i - 5 + 6i\"), \".  After you distribute the negative, you simply combine the real parts, the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"8\"), \"\\xA0 and the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"-5\"), \", to get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"3\"), \"; and then the imaginary parts, the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"3i\"), \"\\xA0 and the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"6i\"), \", to get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"9i\"), \".  This leaves you with the complex number \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"3 + 9i\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), \"Cake.  Let\\u2019s try another.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), \"Given \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"(7-4i) - (9-6i)\"), \".  Distribute the negative to get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"7 - 4i - 9 + 6i\"), \". Combine the real parts, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"7 - 9\"), \", to get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"-2\"), \".  Then combine the imaginary parts, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"-4i + 6i\"), \", to get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"2i\"), \".  You are left with the complex number \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"-2 + 2i\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), \"See?  There\\u2019s nothing complex about subtracting complex numbers.  Just remember, the first and most important step is to distribute the negative to both the real and imaginary parts of the complex number that follows it.  Here are some problems for you to try.\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"(4-28i) - (16+25i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"(-9-3i) - (6-8i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"(1-9i) - (-4+2i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"(6-i) - (-4+5i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"(8-12i) - (-4-12i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"(43+18i) - (11+6i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"(5+10i) - (-6-9i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"(31-13i) - (31-13i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"(-15+2i) - (-7-8i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"(21+4i) - (13+7i)\"))))), React.createElement(\"div\", {\n        className: \"problem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"8\",\n        className: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        color: \"blue-grey\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"\".concat(classes.pb),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Problem\"), React.createElement(\"p\", {\n        className: \"\".concat(classes.pb2),\n        style: {\n          borderStyle: 'solid',\n          borderBottomColor: '#9e9e9e',\n          borderWidth: '0 0 1px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Solve the following: (\", this.state.a, \" \", this.mark[0], \" \", this.mark[1], \"i) - (\", this.state.c, \" \", this.mark[2], \" \", this.mark[3], \"i). Begin your work by first rewriting the problem in 'Step 1' in the worksheet.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"\".concat(classes.pb3, \" add\"),\n        onClick: this.toggle(14),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"ADD YOUR OWN PROBLEM\")), React.createElement(MDBModal, {\n        isOpen: this.state.modal14,\n        toggle: this.toggle(14),\n        size: \"lg\",\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        toggle: this.toggle(14),\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '28px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Add Your Own Problem\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '16px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Add your own problem in the form (a + bi) - (c + di). You can set the values of a, b, c, and d below.\"), React.createElement(\"div\", {\n        className: \"d-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            a: e.target.value\n          });\n        },\n        label: \"a\",\n        className: \"mr-3\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            b: e.target.value\n          });\n        },\n        label: \"b\",\n        className: \"mr-3\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            c: e.target.value\n          });\n        },\n        label: \"c\",\n        className: \"mr-3 \",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            d: e.target.value\n          });\n        },\n        label: \"d\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }))), React.createElement(MDBModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple\",\n        size: \"md\",\n        onClick: this.toggle(14),\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '12px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(MDBBtn, {\n        className: \"orange accent-2\",\n        size: \"md\",\n        onClick: function onClick() {\n          _this2.setState({\n            modal14: false,\n            answers: [],\n            finish: false,\n            step: 1\n          });\n        },\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '12px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"Set\"))))), React.createElement(\"div\", {\n        className: \"submit mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\".concat(classes.worksheet, \" px-3 py-3\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: classes.ws,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"Worksheet\"), React.createElement(\"div\", {\n        className: \"px-3 pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, this.state.answers.map(function (item, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"py-2 d-flex align-items-baseline\",\n          style: {\n            border: 'solid',\n            borderColor: '#388e3c',\n            borderWidth: '0 0 2px 0',\n            fontFamily: '\\'Roboto\\',sans-serif',\n            fontSize: '18px',\n            fontWeight: 'bolder'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            color: '#388e3c'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }, \"Step\", item[0] - 1), \" \\xA0\", item[1]);\n      })), !this.state.finish ? React.createElement(\"div\", {\n        className: \"px-3 d-flex align-items-baseline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-grow-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"Step \".concat(this.state.step.toString()),\n        className: \"mr-3 submit\",\n        size: \"sm\",\n        value: this.state.value,\n        style: this.state.isRight ? {\n          border: 'solid',\n          borderColor: '#81c784',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '18px'\n        } : {\n          border: 'solid',\n          borderColor: '#d32f2f',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '18px'\n        },\n        onChange: function onChange(e) {\n          _this2.setState({\n            value: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ml-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        className: \" green lighten-2 m-0\",\n        onClick: function onClick() {\n          _this2.post();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"clipboard-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      })))) : React.createElement(\"p\", {\n        className: classes.pb4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"Finished! You got it\"), React.createElement(\"div\", {\n        className: \"px-3 pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100 green lighten-3\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.pb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, \"Hints/Feedback\"), React.createElement(\"p\", {\n        className: classes.pb2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, this.state.hint)))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple lighten-1\",\n        className: \"\".concat(classes.btn, \" w-100 mt-3\"),\n        onClick: function onClick() {\n          _this2.props.history.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, \"Previous Lesson\")), React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple lighten-1\",\n        className: \"\".concat(classes.btn, \" w-100 mt-3\"),\n        onClick: function onClick() {\n          _this2.props.history.push('/complex/mult');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, \"Next Lesson\"))));\n    }\n  }]);\n\n  return ComplexSubt;\n}(React.Component);","map":{"version":3,"sources":["/Users/vivian/Desktop/frondend/src/page/ComplexNumber/Page/Sub.js"],"names":["React","Video","MDBRow","MDBCol","MDBBtn","MDBCard","MDBIcon","MDBModal","MDBInput","MDBModalFooter","InlineMath","BlockMath","classes","ComplexNumberMenu","Joyride","url","deleteMark","ComplexSubt","props","toggle","nr","modalNumber","setState","state","post","option","method","headers","body","JSON","stringify","a","b","c","d","step","toString","value","fetch","then","response","json","answer","hint","content","type","isRight","arr","answers","push","finish","finishText","modal14","steps","target","placement","mark","node","scrollIntoView","prevProps","run","options","primaryColor","zIndex","title1","title2","font3","ph","border","ph2","boxShadow","borderRadius","pb","pb2","borderStyle","borderBottomColor","borderWidth","pb3","fontFamily","fontSize","fontWeight","e","borderColor","worksheet","ws","map","item","index","color","pb4","btn","history","goBack","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Video} from \"../video-component/video\";\nimport {MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon, MDBModal, MDBInput, MDBModalFooter} from 'mdbreact'\nimport { InlineMath, BlockMath } from 'react-katex';\n\nimport classes from './index.module.css'\nimport {ComplexNumberMenu} from \"./Menu\";\nimport Joyride from 'react-joyride';\nimport {url} from \"../../../tool/fetch-help\";\nimport {deleteMark} from \"../../../tool/delete-mark\";\n\n\nexport class ComplexSubt extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal14: false,\n            answers:[],\n            a:'-6',\n            b:'-4',\n            c:'2',\n            d:'5',\n            value:'',\n            step:1,\n            hint:'',\n            isRight:true,\n            finish:false,\n            finishText:'',\n\n            steps: [\n                {\n                    target: \".problem_list\",\n                    placement: 'bottom',\n                    content: \"Here is a complex number problem_list\"\n                },\n                {\n                    target: \".add\",\n                    placement: 'bottom',\n                    content: \"You can add your own problem_list\"\n                },\n                {\n                    target: \".submit\",\n                    placement: 'bottom',\n                    content: \"Submit your answer step by step (you could skip first stepï¼‰\"\n                }\n            ]\n        };\n        this.mark = deleteMark(this.state.a, this.state.b, this.state.c, this.state.d)\n\n    }\n    componentDidMount() {\n        this.node.scrollIntoView();\n    }\n    componentDidUpdate(prevProps) {\n        this.mark = deleteMark(this.state.a, this.state.b, this.state.c, this.state.d)\n    }\n    toggle = nr => () => {\n        let modalNumber = 'modal' + nr;\n        this.setState({\n            [modalNumber]: !this.state[modalNumber],\n        });\n    };\n\n    post = ()=>{\n        const option={\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body:JSON.stringify({\n                \"A\":this.state.a,\n                \"B\":this.state.b,\n                \"C\":this.state.c,\n                \"D\":this.state.d,\n                \"step\":this.state.step.toString(),\n                \"answer\":this.state.value,\n            })\n        };\n        fetch(`${url}/complex_number/2`,option)\n            .then(response=>response.json())\n            .then(answer=>{\n                this.setState({\n                    hint:answer.content\n                })\n                if (answer.type === '0'){\n                    this.setState({\n                        isRight:false\n                    })\n                }\n                else if (answer.type === '1'){\n                    let arr = this.state.answers;\n                    let step= answer.step;\n                    arr.push([step, this.state.value])\n                    this.setState({\n                        answers:arr,\n                        step:step,\n                        isRight:true,\n                        value:''\n                    })\n                }\n                else if (answer.type === '2'){\n                    let arr = this.state.answers;\n                    let step= answer.step;\n                    arr.push([step, this.state.value])\n                    this.setState({\n                        answers:arr,\n                        step:step,\n                        isRight:true,\n                        value:'',\n                        finish:true,\n                        finishText:'Finished! You got it.'\n                    })\n                }\n            })\n    };\n    render() {\n        const { run,steps } = this.state;\n        return (\n            <div ref={node => this.node = node}>\n                <Joyride\n                    steps={steps}\n                    continuous={true}\n                    //scrollToFirstStep={true}\n                    scrollToSteps={false}\n                    //showOverlay={false}\n                    //showStepsProgress={true}\n                    //run={run}\n                    styles={{\n                        options: {\n                            primaryColor: '#66bb6a',\n                            zIndex: 1000,\n                        }\n                    }}\n                />\n                <div className=\"d-flex align-items-baseline justify-content-center\">\n                    <div className={classes.title1}>\n                        COMPLEX NUMBERS: &nbsp;\n                    </div>\n                    <div className={classes.title2}>\n                        Subtraction\n                    </div>\n                </div>\n\n                <MDBRow>\n                    <MDBCol size=\"2\">\n                        <ComplexNumberMenu/>\n                    </MDBCol>\n                    <MDBCol size=\"8\" className={classes.font3}>\n                        <Video url='https://myedmaster.oss-us-east-1.aliyuncs.com/subtcomplex.mp4'/>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol size=\"2\">\n\n                    </MDBCol>\n                    <MDBCol size=\"8\">\n                        <p className={classes.ph}>\n                            Just like adding complex numbers, subtracting them is fairly simple\n                            {/*Adding <span className={classes.high}>complex numbers</span> is actually rather straightforward and simple.*/}\n                            <br/>\n                            Remember, a complex number is a combination of a real number and an imaginary number.\n                            We generally write complex numbers in &nbsp;<InlineMath>a + bi</InlineMath>&nbsp;\n                            form,  where a is the real number and bi is the imaginary number.  For example,\n                            &nbsp;<InlineMath>3 + 7i</InlineMath>&nbsp;or\n                            &nbsp;<InlineMath>5 - 2i</InlineMath>&nbsp;.\n                            <br/>\n                            Also, whether adding, subtracting, multiplying or dividing complex numbers, we enclose each complex number inside parentheses like this\n                        </p>\n                        <br/>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                <BlockMath>(6 - 5i) + (2 + 3i)</BlockMath>\n                                <BlockMath>(4 + 8i) - (3 - 2i)</BlockMath>\n                                <BlockMath>(7 - 4i)(5 + 9i)</BlockMath>\n                                <BlockMath>(8 - 6i)/(1- 3i)</BlockMath>\n                            </p>\n                        </MDBRow>\n                        <br/>\n                        <p className={classes.ph}>\n                            Again, just like when adding complex numbers, you can only combine â€˜like termsâ€™, meaning you can only combine the real part of each number together and the imaginary part of each number together.\n                            <tr/><br/>\n                            Letâ€™s take a look at a problem, &nbsp;<InlineMath>(8 + 3i) - (5 - 6i)</InlineMath>&nbsp;\n\n                            <tr/><br/>\n                            Since this is subtracting and weâ€™re dealing with parentheses, the first and most important thing we want to do is distribute the negative to both the real part,\n                            the &nbsp;<InlineMath>5</InlineMath>, and the imaginary part, the &nbsp;<InlineMath>-6i</InlineMath>, of the complex number that follows it.\n                            Doing so leaves you with &nbsp;<InlineMath>8 + 3i - 5 + 6i</InlineMath>.  After you distribute the negative, you simply combine the real parts,\n                            the &nbsp;<InlineMath>8</InlineMath>&nbsp; and the &nbsp;<InlineMath>-5</InlineMath>, to get &nbsp;<InlineMath>3</InlineMath>; and then the imaginary parts,\n                            the &nbsp;<InlineMath>3i</InlineMath>&nbsp; and the &nbsp;<InlineMath>6i</InlineMath>, to get &nbsp;<InlineMath>9i</InlineMath>.  This leaves you with the\n                            complex number &nbsp;<InlineMath>3 + 9i</InlineMath>.\n                            <tr/><br/>\n                            Cake.  Letâ€™s try another.\n                            <tr/><br/>\n                            Given &nbsp;<InlineMath>(7-4i) - (9-6i)</InlineMath>.  Distribute the negative to get &nbsp;<InlineMath>7 - 4i - 9 + 6i</InlineMath>.\n                            Combine the real parts, &nbsp;<InlineMath>7 - 9</InlineMath>, to get &nbsp;<InlineMath>-2</InlineMath>.  Then combine the imaginary parts,\n                            &nbsp;<InlineMath>-4i + 6i</InlineMath>, to get &nbsp;<InlineMath>2i</InlineMath>.  You are left with the complex number &nbsp;<InlineMath>-2 + 2i</InlineMath>.\n                            <tr/><br/>\n                            See?  Thereâ€™s nothing complex about subtracting complex numbers.  Just remember, the first and most important step is to distribute the negative to both the real and imaginary parts of the complex number that follows it.  Here are some problems for you to try.\n                        </p>\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n\n                                <BlockMath>(4-28i) - (16+25i)</BlockMath>\n                                <BlockMath>(-9-3i) - (6-8i)</BlockMath>\n                                <BlockMath>(1-9i) - (-4+2i)</BlockMath>\n                                <BlockMath>(6-i) - (-4+5i)</BlockMath>\n                                <BlockMath>(8-12i) - (-4-12i)</BlockMath>\n                                <BlockMath>(43+18i) - (11+6i)</BlockMath>\n                                <BlockMath>(5+10i) - (-6-9i)</BlockMath>\n                                <BlockMath>(31-13i) - (31-13i)</BlockMath>\n                                <BlockMath>(-15+2i) - (-7-8i)</BlockMath>\n                                <BlockMath>(21+4i) - (13+7i)</BlockMath>\n\n                            </p>\n                        </MDBRow>\n                    </MDBCol>\n                </MDBRow>\n                <div className=\"problem\"></div>\n                <MDBRow center>\n                    <MDBCol size=\"8\" className=\"add\">\n                        <MDBCard\n                            size=\"8\"\n                            color=\"blue-grey\"\n                            text=\"white\"\n                            className=\"py-3 px-3 w-100\"\n                            style={{boxShadow:'none', borderRadius:'0'}}\n                        >\n\n\n                            <p className={`${classes.pb}`}>Problem</p>\n\n                            <p\n                                className={`${classes.pb2}`}\n                                style={{borderStyle:'solid',borderBottomColor:'#9e9e9e', borderWidth:'0 0 1px 0'}}\n                            >\n                                Solve the following:\n                                ({this.state.a} {this.mark[0]} {this.mark[1]}i) - ({this.state.c} {this.mark[2]} {this.mark[3]}i).\n                                Begin your work by first rewriting the problem in 'Step 1' in the worksheet.\n                                <tr/><br/>\n                            </p>\n                            <p\n                                className={`${classes.pb3} add`}\n\n                                onClick={this.toggle(14)}\n                            >\n                                ADD YOUR OWN PROBLEM\n                            </p>\n                        </MDBCard>\n\n                        <MDBModal isOpen={this.state.modal14} toggle={this.toggle(14)} size=\"lg\" centered>\n                            <div className=\"p-3\">\n                                <div\n                                    toggle={this.toggle(14)}\n\n                                    style={{\n                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                        fontSize:'28px',\n                                        fontWeight:'bolder'\n                                    }}\n                                >\n                                    Add Your Own Problem\n                                </div>\n                                <br/>\n                                <div\n                                    style={{\n                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                        fontSize:'16px',\n                                        fontWeight:'bolder'\n                                    }}\n                                >\n                                    Add your own problem in the form (a + bi) - (c + di). You can set the values of a, b, c, and d below.\n                                </div>\n                                <div className=\"d-flex justify-content-between\">\n                                    <MDBInput\n                                        onChange={(e) => {\n                                            this.setState({\n                                                a: e.target.value\n                                            });\n                                        }}\n\n                                        label=\"a\" className=\"mr-3\"  size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                    />\n                                    <MDBInput\n                                        onChange={(e) => {\n                                            this.setState({\n                                                b: e.target.value\n                                            });\n                                        }}\n                                        label=\"b\" className=\"mr-3\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                    />\n                                    <MDBInput\n                                        onChange={(e) => {\n                                            this.setState({\n                                                c: e.target.value\n                                            });\n                                        }}\n                                        label=\"c\" className=\"mr-3 \" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                    />\n                                    <MDBInput\n                                        onChange={(e) => {\n                                            this.setState({\n                                                d: e.target.value\n                                            });\n                                        }}\n                                        label=\"d\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                    />\n                                </div>\n                            </div>\n\n                            <MDBModalFooter>\n                                <MDBBtn\n                                    color=\"deep-purple\"\n                                    size=\"md\"\n                                    onClick={this.toggle(14)}\n                                    style={{\n                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                        fontSize:'12px',\n                                        fontWeight:'bolder'\n                                    }}\n                                >Cancel\n                                </MDBBtn>\n                                <MDBBtn\n                                    className=\"orange accent-2\"\n                                    size=\"md\"\n                                    onClick={()=>{\n                                        this.setState({\n                                            modal14:false,\n                                            answers:[],\n                                            finish:false,\n                                            step:1\n                                        })\n                                    }}\n                                    style={{\n                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                        fontSize:'12px',\n                                        fontWeight:'bolder'\n                                    }}\n                                >Set</MDBBtn>\n                            </MDBModalFooter>\n                        </MDBModal>\n\n                    </MDBCol>\n                </MDBRow>\n                <div className=\"submit mt-5\"></div>\n                <MDBRow center>\n\n                    <MDBCol size=\"8\" >\n                        <div className={`${classes.worksheet} px-3 py-3`}>\n                            <label className={classes.ws}>\n                                Worksheet\n                            </label>\n                            <div\n                                className=\"px-3 pt-3\"\n                            >\n                                {this.state.answers.map((item, index)=>{\n                                    return<div\n                                        key={index}\n                                        className=\"py-2 d-flex align-items-baseline\"\n                                        style={{\n                                            border:'solid',\n                                            borderColor:'#388e3c',\n                                            borderWidth:'0 0 2px 0',\n                                            fontFamily:'\\'Roboto\\',sans-serif',\n                                            fontSize:'18px',\n                                            fontWeight:'bolder'\n                                        }}\n                                    >\n                                        <span style={{fontWeight:'bold',color:'#388e3c'}}>Step{item[0]-1}</span> &nbsp;{item[1]}\n\n                                    </div>\n                                })}\n                            </div>\n                            {!this.state.finish?(\n                                <div className=\"px-3 d-flex align-items-baseline\">\n\n                                    <div className=\"flex-grow-1\">\n\n                                        <MDBInput\n                                            label={`Step ${this.state.step.toString()}`}\n                                            className=\"mr-3 submit\"\n                                            size=\"sm\"\n                                            value={this.state.value}\n                                            style={this.state.isRight ?{\n                                                border:'solid',\n                                                borderColor:'#81c784',\n                                                borderWidth:'0 0 2px 0',\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'18px'\n                                            }:{\n                                                border:'solid',\n                                                borderColor:'#d32f2f',\n                                                borderWidth:'0 0 2px 0',\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'18px'\n                                            }}\n                                            onChange={(e) => {\n                                                this.setState({\n                                                    value: e.target.value\n                                                });\n                                            }}\n                                        />\n\n                                    </div>\n                                    <div className=\"ml-4\">\n                                        <MDBBtn\n                                            tag=\"a\" floating className=\" green lighten-2 m-0\"\n                                            onClick={()=>{this.post()}}\n                                        >\n                                            <MDBIcon icon=\"clipboard-check\" />\n                                        </MDBBtn>\n                                        {/*<MDBBtn*/}\n                                        {/*tag=\"a\" floating className=\" orange lighten-2\"*/}\n                                        {/*>*/}\n                                        {/*<MDBIcon icon=\"microphone\" />*/}\n                                        {/*</MDBBtn>*/}\n                                    </div>\n\n                                </div>\n                            ):(\n                                <p className={classes.pb4}>Finished! You got it</p>\n                            )}\n\n\n\n                            <div className=\"px-3 pt-3\">\n                                <MDBCard\n                                    size=\"8\"\n                                    text=\"white\"\n                                    className=\"py-3 px-3 w-100 green lighten-3\"\n                                    style={{boxShadow:'none', borderRadius:'0'}}\n                                >\n                                    <p className={classes.pb}>Hints/Feedback</p>\n                                    <p className={classes.pb2}>{this.state.hint}</p>\n                                    {/*<MDBRow center>*/}\n                                    {/*<MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">*/}\n                                    {/*<MDBIcon icon=\"angle-left\" />*/}\n                                    {/*</MDBBtn>*/}\n                                    {/*<MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">*/}\n                                    {/*<MDBIcon icon=\"angle-right\" />*/}\n                                    {/*</MDBBtn>*/}\n                                    {/*</MDBRow>*/}\n                                </MDBCard>\n                            </div>\n\n                        </div>\n                    </MDBCol>\n                </MDBRow>\n                <br/>\n                <MDBRow center>\n                    <MDBCol size=\"2\">\n                        <MDBBtn\n                            color=\"deep-purple lighten-1\"\n                            className={`${classes.btn} w-100 mt-3`}\n                            onClick={() => {this.props.history.goBack();}}\n                        >Previous Lesson</MDBBtn>\n                    </MDBCol>\n                    <MDBCol size=\"2\">\n                        <MDBBtn\n                            color=\"deep-purple lighten-1\"\n                            className={`${classes.btn} w-100 mt-3`}\n                            onClick={() => {this.props.history.push('/complex/mult');}}\n                        >Next Lesson</MDBBtn>\n                    </MDBCol>\n                </MDBRow>\n\n            </div>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}