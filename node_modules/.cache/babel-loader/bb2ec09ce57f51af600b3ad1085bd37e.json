{"ast":null,"code":"import _defineProperty from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vivian/Desktop/frondend/src/page/Clt/Page/index.js\";\nimport React from 'react';\nimport { Video } from \"../video-component/video\";\nimport { MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon, MDBModal, MDBInput, MDBModalFooter } from 'mdbreact';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport classes from './index.module.css';\nimport { url } from \"../../../tool/fetch-help\";\nimport Joyride from 'react-joyride';\nimport { deleteMark } from \"../../../tool/delete-mark\";\nexport var CltPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CltPage, _React$Component);\n\n  function CltPage(props) {\n    var _this;\n\n    _classCallCheck(this, CltPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CltPage).call(this, props));\n\n    _this.toggle = function (nr) {\n      return function () {\n        var modalNumber = 'modal' + nr;\n\n        _this.setState(_defineProperty({}, modalNumber, !_this.state[modalNumber]));\n      };\n    };\n\n    _this.post = function (value) {\n      var option = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"A\": _this.state.a,\n          \"B\": _this.state.b,\n          \"C\": _this.state.c,\n          \"D\": _this.state.d,\n          \"step\": _this.state.step.toString(),\n          \"answer\": _this.state.value\n        })\n      };\n      fetch(\"\".concat(url, \"/FOIL/\").concat(value), option).then(function (response) {\n        return response.json();\n      }).then(function (answer) {\n        _this.setState({\n          hint: answer.content\n        });\n\n        if (answer.type === '0') {\n          _this.setState({\n            isRight: false\n          });\n        } else if (answer.type === '1') {\n          var arr = _this.state.answers;\n          var step = answer.step;\n          arr.push([step, _this.state.value]);\n\n          _this.setState({\n            answers: arr,\n            step: step,\n            isRight: true,\n            value: ''\n          });\n        } else if (answer.type === '2') {\n          var _arr = _this.state.answers;\n          var _step = answer.step;\n\n          _arr.push([_step, _this.state.value]);\n\n          _this.setState({\n            answers: _arr,\n            step: _step,\n            isRight: true,\n            value: '',\n            finish: true,\n            finishText: 'Finished! You got it.'\n          });\n        }\n      });\n    };\n\n    _this.handle = function (value) {\n      switch (value) {\n        case '1':\n          var arr = new Array();\n          arr.push(' ');\n          arr.push('(');\n          arr.push(_this.state.a);\n          arr.push('x');\n          arr.push(_this.mark[0]);\n          arr.push(_this.mark[1]);\n          arr.push(')');\n          arr.push('(');\n          arr.push(_this.state.c);\n          arr.push('x');\n          arr.push(_this.mark[2]);\n          arr.push(_this.mark[3]);\n          arr.push(')');\n          arr.push(' ');\n          var str = arr.join(\"\");\n\n          _this.setState({\n            equation: str\n          });\n\n          break;\n\n        case '2':\n          var arr2 = new Array();\n          arr2.push(' ');\n          arr2.push('(');\n          arr2.push(_this.state.a);\n          arr2.push('x');\n          arr2.push(_this.mark[0]);\n          arr2.push(_this.mark[1]);\n          arr2.push('y');\n          arr2.push(')');\n          arr2.push('(');\n          arr2.push(_this.state.c);\n          arr2.push('x');\n          arr2.push(_this.mark[2]);\n          arr2.push(_this.mark[3]);\n          arr2.push(')');\n          arr2.push(' ');\n          var str2 = arr2.join(\"\");\n\n          _this.setState({\n            equation: str2\n          });\n\n      }\n    };\n\n    _this.state = {\n      modal14: false,\n      answers: [],\n      a: '-6',\n      b: '-4',\n      c: '3',\n      d: '5',\n      value: '',\n      step: 1,\n      hint: '',\n      isRight: true,\n      finish: false,\n      finishText: '',\n      select: '1',\n      equation: '',\n      jump: false,\n      steps: [{\n        target: \".problem\",\n        placement: 'bottom',\n        content: \"Here is a complex number problem\"\n      }, {\n        target: \".add\",\n        placement: 'bottom',\n        content: \"You can add your own problem\"\n      }, {\n        target: \".submit\",\n        placement: 'bottom',\n        content: \"Submit your answer step by step (you could skip first stepï¼‰\"\n      }]\n    };\n    _this.mark = deleteMark(_this.state.a, _this.state.b, _this.state.c, _this.state.d);\n    _this.str = '';\n    _this.neq = _this.handle();\n    return _this;\n  }\n\n  _createClass(CltPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.node.scrollIntoView();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.mark = deleteMark(this.state.a, this.state.b, this.state.c, this.state.d);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          run = _this$state.run,\n          steps = _this$state.steps;\n      var from;\n\n      if (this.props.location.state != null) {\n        from = this.props.location.state.from;\n        this.setState({\n          jump: true\n        });\n      }\n\n      var urlTo = from;\n      return React.createElement(\"div\", {\n        ref: function ref(node) {\n          return _this2.node = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Joyride, {\n        steps: steps,\n        continuous: true //scrollToFirstStep={true}\n        ,\n        scrollToSteps: false //showOverlay={false}\n        //showStepsProgress={true}\n        //run={run}\n        ,\n        styles: {\n          options: {\n            primaryColor: '#66bb6a',\n            zIndex: 1000\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"d-flex align-items-baseline justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Combining Like Terms\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"8\",\n        className: classes.font3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Video, {\n        url: \"https://myedmaster.oss-us-east-1.aliyuncs.com/comb.mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Before we get into combining like terms, let\\u2019s refresh your memory about what algebraic terms and like terms are so we\\u2019re all on the same page\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"What are algebraic terms? \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"-5 2/3   4\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), \"Algebraic terms can be numbers;\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"letters that we call variables,\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"x\"), \"?\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), \"with numbers, \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"3x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), \"exponents, \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"x^2\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), \"or a combination; \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"3x^2\")), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"they can also be the product of two or more variables,  \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"xy\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), \"with numbers,\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"-2xy\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), \"exponents, \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"x^2y^3\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), \"or a combination; \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"-2x^2y^2\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), \"and algebraic terms can also be the quotient of two or more variables, \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"x/y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), \"again with numbers, \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"3x/2y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), \"exponents, \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"x^2/y^3\"), \"or a combination thereof.\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"3x^2/2y^3\")), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"It looks like this:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), \"Using the example from earlier, \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"(x+1)(x-3)\"), \",\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), \"The F refers to the First term in each binomial   \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"(x+1)(x-3)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), \"The O refers to the Outer terms of the binomials \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"(x+1)(x-3)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), \"The I refers to the Inside terms of the binomials  \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"(x+1)(x-3)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), \"And the L refers to the Last term in each binomial \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"(x+1)(x-3)\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"It\\u2019s that simple. Here\\u2019s how it works. Step 1: Multiply Again, given \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"(x+1)(x-3)\"), \"F tells us to multiply the first terms \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"x\"), \" which equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"x^2\"), \" and we write that down first O tells us to multiply the outer terms \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"-3\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"-3x\"), \" and we write that next I tells us to multiply the inner terms \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"1\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"x\"), \" gives us \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"x\"), \" and we write that down And L tells us to multiply the last terms \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"1\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"-3\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"-3\"), \" and we write that last\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"x^2-3x+x-3\"), \"F   O   I   L\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Once you have all four FOIL terms, you\\u2019re ready for Step 2. In Step 2, you combine like terms. Remember\\u2026you\\u2019re adding or subtracting now.\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"x^2-3x+x-3\"), \"There\\u2019s only one squared term, so we just bring it down. Much of the time, the Outer and Inner terms will be like terms, so you can combine them and bring them down. And there\\u2019s nothing to combine with the last term, so it comes down and you\\u2019ve got your answer\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"x^2-2x-3\"), \"Let\\u2019s look at some examples.\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"(2x+1)(3x-2)\"), \"In this problem,\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"First times first\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"2x\"), \"times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"3x\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"6x^2\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }), \"Outer times outer \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"2x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"-2\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"-4x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), \"Inner times inner \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"1\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"3x\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"3x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), \"And last times last \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"1\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"-2\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"-2\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"6x^2-4x+3x-2\"))), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"The outers and inners combine to give you \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"-x\"), \", leaving you with \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"6x^2-x-2\"), \" as your answer.\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"In the second example, \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"(5x-4)(6x-3)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }), \"First times first \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"5x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"6x\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"30x^2\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), \"Outer times outer \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"5x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"-3\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"-15x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }), \"Inner times inner \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"-4\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"6x\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"-24x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }), \"And last times last \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"-4\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"-3\"), \" is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"+12\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"30x^2-15x-24x+12\"))), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"Again, the outers and inners combine to give you \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"-39x\"), \", so your answer is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"30x^2-39x+12\"), \"Notice how both answers are trinomials\\u2014they each have 3 terms. Most of the time, the product of two binomials will be a trinomial. However, that\\u2019s not always the case. Look at this example.\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"(2x+1)(3y-2)\"), \"First times first \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"2x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"3y\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"6xy\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }), \"Outer times outer \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"2x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"-2\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"-4x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }), \"Inner times inner \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"1\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"3y\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"3y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }), \"And last times last \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"1\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"-2\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"-2\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"6xy-4x+3y-2\"))), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, \"Notice there are no like terms to combine, so your answer has 4 terms instead of 3.\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \"In the second example, \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"(3x+2)(3x-2)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }), \"First times first  \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"3x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"3x\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"9x^2\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }), \"Outer times outer \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \"3x\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \"-2\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \"-6x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }), \"Inner times inner \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"2\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"3x\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"6x\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }), \"And last times last \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"2\"), \" times \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"-2\"), \" equals \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"-4\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"9x^2-6x+6x-4\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"9x^2-4\"))), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"The outer and inner terms cancel out each other and leave you with a binomial as your answer. Here are some problems for you to try. You can pause the video, do the problems, and when you\\u2019re done, resume the video and check your work.\"), React.createElement(\"div\", {\n        className: \"problem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        className: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        color: \"blue-grey\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\".concat(classes.pb),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, \"Problem\"), React.createElement(\"div\", {\n        className: \"mr-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"browser-default\",\n        size: \"sm\",\n        onChange: function onChange(e) {\n          _this2.handle(e.target.value);\n\n          _this2.setState({\n            // equation:this.str,\n            select: e.target.value,\n            answers: [],\n            finish: false,\n            step: 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"Choose your format\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"(ax+b)(cx+d)\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, \"(ax+by)(cx+d)\")))), React.createElement(\"p\", {\n        className: \"\".concat(classes.pb2),\n        style: {\n          borderStyle: 'solid',\n          borderBottomColor: '#9e9e9e',\n          borderWidth: '0 0 1px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, \"Solve the following:\", this.state.equation, \"Begin your work by first rewriting the problem in 'Step1' in the worksheet.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"\".concat(classes.pb3, \" add\"),\n        onClick: this.toggle(14),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, \"ADD YOUR OWN PROBLEM\")), React.createElement(MDBModal, {\n        isOpen: this.state.modal14,\n        toggle: this.toggle(14),\n        size: \"lg\",\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        toggle: this.toggle(14),\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '28px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \"Add Your Own Problem\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '16px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"Add your own problem in the chosen format. You can set the values of a, b, c, and d below.\"), React.createElement(\"div\", {\n        className: \"d-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            a: e.target.value\n          });\n        },\n        label: \"a\",\n        className: \"mr-3\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            b: e.target.value\n          });\n        },\n        label: \"b\",\n        className: \"mr-3\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            c: e.target.value\n          });\n        },\n        label: \"c\",\n        className: \"mr-3 \",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            d: e.target.value\n          });\n        },\n        label: \"d\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }))), React.createElement(MDBModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple\",\n        size: \"md\",\n        onClick: this.toggle(14),\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '12px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(MDBBtn, {\n        className: \"orange accent-2\",\n        size: \"md\",\n        onClick: function onClick() {\n          _this2.handle(_this2.state.select);\n\n          _this2.setState({\n            // equation:this.str,\n            modal14: false,\n            answers: [],\n            finish: false,\n            step: 1\n          });\n        },\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '12px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, \"Set\"))))), React.createElement(\"div\", {\n        className: \"submit mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\".concat(classes.worksheet, \" px-3 py-3\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: classes.ws,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, \"Worksheet\"), React.createElement(\"div\", {\n        className: \"px-3 pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, this.state.answers.map(function (item, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"py-2 d-flex align-items-baseline\",\n          style: {\n            border: 'solid',\n            borderColor: '#388e3c',\n            borderWidth: '0 0 2px 0',\n            fontFamily: '\\'Roboto\\',sans-serif',\n            fontSize: '18px',\n            fontWeight: 'bolder'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 557\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            color: '#388e3c'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569\n          },\n          __self: this\n        }, \"Step\", item[0] - 1), \" \\xA0\", item[1]);\n      })), !this.state.finish ? React.createElement(\"div\", {\n        className: \"px-3 d-flex align-items-baseline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-grow-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"Step \".concat(this.state.step.toString()),\n        className: \"mr-3 submit\",\n        size: \"sm\",\n        value: this.state.value,\n        style: this.state.isRight ? {\n          border: 'solid',\n          borderColor: '#81c784',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '18px'\n        } : {\n          border: 'solid',\n          borderColor: '#d32f2f',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '18px'\n        },\n        onChange: function onChange(e) {\n          _this2.setState({\n            value: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ml-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        className: \" green lighten-2 m-0\",\n        onClick: function onClick() {\n          _this2.post(_this2.state.select);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"clipboard-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      })))) : React.createElement(\"p\", {\n        className: classes.pb4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, \"Finished! You got it\"), React.createElement(\"div\", {\n        className: \"px-3 pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100 green lighten-3\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.pb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633\n        },\n        __self: this\n      }, \"Hints/Feedback\"), React.createElement(\"p\", {\n        className: classes.pb2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      }, this.state.hint)))))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      }, \"Using the FOIL method for multiplying binomials Helps ensure you multiply both terms in the first binomial by both terms in the second, Helps you keep your work organized as you solve the problem, And makes it easier to review your work for errors, So next time you\\u2019re multiplying two binomials, wrap things up quickly and easily with FOIL!\"))));\n    }\n  }]);\n\n  return CltPage;\n}(React.Component);","map":{"version":3,"sources":["/Users/vivian/Desktop/frondend/src/page/Clt/Page/index.js"],"names":["React","Video","MDBRow","MDBCol","MDBBtn","MDBCard","MDBIcon","MDBModal","MDBInput","MDBModalFooter","InlineMath","BlockMath","classes","url","Joyride","deleteMark","CltPage","props","toggle","nr","modalNumber","setState","state","post","value","option","method","headers","body","JSON","stringify","a","b","c","d","step","toString","fetch","then","response","json","answer","hint","content","type","isRight","arr","answers","push","finish","finishText","handle","Array","mark","str","join","equation","arr2","str2","modal14","select","jump","steps","target","placement","neq","node","scrollIntoView","prevProps","run","from","location","urlTo","options","primaryColor","zIndex","title2","font3","ph","border","ph2","boxShadow","borderRadius","pb","e","pb2","borderStyle","borderBottomColor","borderWidth","pb3","fontFamily","fontSize","fontWeight","borderColor","worksheet","ws","map","item","index","color","pb4","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Video} from \"../video-component/video\";\nimport {MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon, MDBModal, MDBInput, MDBModalFooter} from 'mdbreact'\nimport { InlineMath, BlockMath } from 'react-katex';\n\nimport classes from './index.module.css'\n\nimport {url} from \"../../../tool/fetch-help\";\nimport Joyride from 'react-joyride';\nimport {deleteMark} from \"../../../tool/delete-mark\";\n\n\n\nexport class CltPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal14: false,\n            answers:[],\n            a:'-6',\n            b:'-4',\n            c:'3',\n            d:'5',\n            value:'',\n            step:1,\n            hint:'',\n            isRight:true,\n            finish:false,\n            finishText:'',\n            select:'1',\n            equation:'',\n            jump:false,\n\n            steps: [\n                {\n                    target: \".problem\",\n                    placement: 'bottom',\n                    content: \"Here is a complex number problem\"\n                },\n                {\n                    target: \".add\",\n                    placement: 'bottom',\n                    content: \"You can add your own problem\"\n                },\n                {\n                    target: \".submit\",\n                    placement: 'bottom',\n                    content: \"Submit your answer step by step (you could skip first stepï¼‰\"\n                }\n            ]\n        };\n        this.mark = deleteMark(this.state.a, this.state.b, this.state.c, this.state.d)\n        this.str =''\n        this.neq = this.handle()\n\n\n    }\n    componentDidMount() {\n        this.node.scrollIntoView();\n    }\n    componentDidUpdate(prevProps) {\n        this.mark = deleteMark(this.state.a, this.state.b, this.state.c, this.state.d)\n    }\n    toggle = nr => () => {\n        let modalNumber = 'modal' + nr;\n        this.setState({\n            [modalNumber]: !this.state[modalNumber],\n        });\n    };\n\n    post = (value)=>{\n        const option={\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body:JSON.stringify({\n                \"A\":this.state.a,\n                \"B\":this.state.b,\n                \"C\":this.state.c,\n                \"D\":this.state.d,\n                \"step\":this.state.step.toString(),\n                \"answer\":this.state.value,\n            })\n        };\n        fetch(`${url}/FOIL/${value}`,option)\n            .then(response=>response.json())\n            .then(answer=>{\n                this.setState({\n                    hint:answer.content\n                })\n                if (answer.type === '0'){\n                    this.setState({\n                        isRight:false\n                    })\n                }\n                else if (answer.type === '1'){\n                    let arr = this.state.answers;\n                    let step= answer.step;\n                    arr.push([step, this.state.value])\n                    this.setState({\n                        answers:arr,\n                        step:step,\n                        isRight:true,\n                        value:''\n                    })\n                }\n                else if(answer.type === '2'){\n                    let arr = this.state.answers;\n                    let step= answer.step;\n                    arr.push([step, this.state.value])\n                    this.setState({\n                        answers:arr,\n                        step:step,\n                        isRight:true,\n                        value:'',\n                        finish:true,\n                        finishText:'Finished! You got it.'\n                    })\n                }\n            })\n    }\n    handle = (value) =>{\n        switch (value) {\n            case '1':\n                let arr = new Array();\n                arr.push(' ');\n                arr.push('(');\n                arr.push(this.state.a);\n                arr.push('x');\n                arr.push(this.mark[0]);\n                arr.push(this.mark[1]);\n                arr.push(')');\n                arr.push('(');\n                arr.push(this.state.c);\n                arr.push('x');\n                arr.push(this.mark[2]);\n                arr.push(this.mark[3]);\n                arr.push(')');\n                arr.push(' ');\n                let str = arr.join(\"\");\n                this.setState({\n                    equation:str\n                });\n                break;\n            case '2':\n                let arr2 = new Array();\n                arr2.push(' ');\n                arr2.push('(');\n                arr2.push(this.state.a);\n                arr2.push('x');\n                arr2.push(this.mark[0]);\n                arr2.push(this.mark[1]);\n                arr2.push('y');\n                arr2.push(')');\n                arr2.push('(');\n                arr2.push(this.state.c);\n                arr2.push('x');\n                arr2.push(this.mark[2]);\n                arr2.push(this.mark[3]);\n                arr2.push(')');\n                arr2.push(' ');\n                let str2 = arr2.join(\"\");\n                this.setState({\n                    equation:str2\n                });\n        }\n\n    };\n\n\n\n    render() {\n        const { run,steps } = this.state;\n        let from;\n        if(this.props.location.state != null){\n\n            from = this.props.location.state.from\n            this.setState({\n                jump:true\n            })\n        }\n        const urlTo = from;\n\n        return (\n            <div ref={node => this.node = node}>\n                <Joyride\n                    steps={steps}\n                    continuous={true}\n                    //scrollToFirstStep={true}\n                    scrollToSteps={false}\n                    //showOverlay={false}\n                    //showStepsProgress={true}\n                    //run={run}\n                    styles={{\n                        options: {\n                            primaryColor: '#66bb6a',\n                            zIndex: 1000,\n                        }\n                    }}\n                />\n\n                <div className=\"d-flex align-items-baseline justify-content-center\">\n                    {/*<div className={classes.title1}>*/}\n                        {/*FOIL: &nbsp;*/}\n                    {/*</div>*/}\n                    <div className={classes.title2}>\n                        Combining Like Terms\n                    </div>\n                </div>\n\n                <MDBRow>\n                    <MDBCol size=\"2\">\n                    </MDBCol>\n                    <MDBCol size=\"8\" className={classes.font3}>\n                        <Video url='https://myedmaster.oss-us-east-1.aliyuncs.com/comb.mp4'/>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol size=\"2\">\n\n                    </MDBCol>\n                    <MDBCol size=\"8\">\n                        <p className={classes.ph}>\n                            Before we get into combining like terms, letâ€™s refresh your memory about what algebraic terms and like terms are so weâ€™re all on the same page\n                        </p>\n                        <p className={classes.ph}>\n                            What are algebraic terms? <InlineMath>-5\t2/3\t  4</InlineMath>\n                            <br/>\n                            Algebraic terms can be numbers;\n                        </p>\n                        <p className={classes.ph}>\n                            letters that we call variables,<InlineMath>x</InlineMath>?\n                            <br/>\n                            with numbers, <InlineMath>3x</InlineMath>\n                            <br/>\n                            exponents, <InlineMath>x^2</InlineMath>\n                            <br/>\n                            or a combination; <InlineMath>3x^2</InlineMath>\n                        </p>\n                        <p className={classes.ph}>\n                            they can also be the product of two or more variables, \t<InlineMath>xy</InlineMath>\n                            <br/>\n                            with numbers,<InlineMath>-2xy</InlineMath>\n                            <br/>\n                            exponents, <InlineMath>x^2y^3</InlineMath>\n                            <br/>\n                            or a combination; <InlineMath>-2x^2y^2</InlineMath>\n                            <br/>\n                            and algebraic terms can also be the quotient of two or more variables,\t<InlineMath>x/y</InlineMath>\n                            <br/>\n                            again with numbers, <InlineMath>3x/2y</InlineMath>\n                            <br/>\n                            exponents, <InlineMath>x^2/y^3</InlineMath>\n                            or a combination thereof.<InlineMath>3x^2/2y^3</InlineMath>\n                        </p>\n                        <p className={classes.ph}>\n\n                        </p>\n                        <p className={classes.ph}>\n\n                        </p>\n                        <p className={classes.ph}>\n\n                        </p>\n                        <p className={classes.ph}>\n\n                        </p>\n                        <br/>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                It looks like this:\n                                <br/>\n                                Using the example from earlier, <InlineMath>(x+1)(x-3)</InlineMath>,\n                                <br/>\n                                The F refers to the First term in each binomial \t\t<InlineMath>(x+1)(x-3)</InlineMath>\n                                <br/>\n                                The O refers to the Outer terms of the binomials\t<InlineMath>(x+1)(x-3)</InlineMath>\n                                <br/>\n                                The I refers to the Inside terms of the binomials\t\t<InlineMath>(x+1)(x-3)</InlineMath>\n                                <br/>\n                                And the L refers to the Last term in each binomial\t<InlineMath>(x+1)(x-3)</InlineMath>\n                            </p>\n                        </MDBRow>\n                        <br/>\n                        <p className={classes.ph}>\n                            Itâ€™s that simple.\n\n                            Hereâ€™s how it works.\n                            Step 1: Multiply\n\n                            Again, given <InlineMath>(x+1)(x-3)</InlineMath>\n\n                            F tells us to multiply the first terms\t<InlineMath>x</InlineMath> times <InlineMath>x</InlineMath> which equals <InlineMath>x^2</InlineMath> and we write that down first\n                            O tells us to multiply the outer terms\t<InlineMath>x</InlineMath> times <InlineMath>-3</InlineMath> equals <InlineMath>-3x</InlineMath> and we write that next\n                            I tells us to multiply the inner terms\t<InlineMath>1</InlineMath> times <InlineMath>x</InlineMath> gives us <InlineMath>x</InlineMath> and we write that down\n                            And L tells us to multiply the last terms <InlineMath>1</InlineMath> times <InlineMath>-3</InlineMath> equals <InlineMath>-3</InlineMath> and we write that last\n                        </p>\n                        <p className={classes.ph}>\n                            <BlockMath>x^2-3x+x-3</BlockMath>\n                            F   O   I   L\n                        </p>\n                        <p className={classes.ph}>\n                            Once you have all four FOIL terms, youâ€™re ready for Step 2.\n\n                            In Step 2, you combine like terms.\n                            Rememberâ€¦youâ€™re adding or subtracting now.\n\n                            <BlockMath>x^2-3x+x-3</BlockMath>\n\n                            Thereâ€™s only one squared term, so we just bring it down.\n                            Much of the time, the Outer and Inner terms will be like terms, so you can combine them and bring them down.\n                            And thereâ€™s nothing to combine with the last term, so it comes down and youâ€™ve got your answer\n\n                            <BlockMath>x^2-2x-3</BlockMath>\n\n                            Letâ€™s look at some examples.\n                            <BlockMath>(2x+1)(3x-2)</BlockMath>\n                            In this problem,\n                        </p>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                First times first<InlineMath>2x</InlineMath>times <InlineMath>3x</InlineMath> is <InlineMath>6x^2</InlineMath><br/>\n                                Outer times outer\t<InlineMath>2x</InlineMath> times <InlineMath>-2</InlineMath> is <InlineMath>-4x</InlineMath><br/>\n                                Inner times inner\t<InlineMath>1</InlineMath> times <InlineMath>3x</InlineMath> is <InlineMath>3x</InlineMath><br/>\n                                And last times last\t<InlineMath>1</InlineMath> times <InlineMath>-2</InlineMath> is <InlineMath>-2</InlineMath><br/>\n                                <BlockMath>6x^2-4x+3x-2</BlockMath>\n\n                            </p>\n                        </MDBRow>\n                        <p className={classes.ph}>\n\n                            The outers and inners combine to give you <InlineMath>-x</InlineMath>, leaving you with <InlineMath>6x^2-x-2</InlineMath> as your answer.\n\n                        </p>\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                In the second example, <InlineMath>(5x-4)(6x-3)</InlineMath><br/>\n                                First times first\t<InlineMath>5x</InlineMath> times <InlineMath>6x</InlineMath> is <InlineMath>30x^2</InlineMath><br/>\n                                Outer times outer\t<InlineMath>5x</InlineMath> times <InlineMath>-3</InlineMath> is <InlineMath>-15x</InlineMath><br/>\n                                Inner times inner\t<InlineMath>-4</InlineMath> times <InlineMath>6x</InlineMath> is <InlineMath>-24x</InlineMath><br/>\n                                And last times last\t<InlineMath>-4</InlineMath> times <InlineMath>-3</InlineMath> is <InlineMath>+12</InlineMath><br/>\n\n                                <BlockMath>30x^2-15x-24x+12</BlockMath>\n                            </p>\n                        </MDBRow>\n                        <p className={classes.ph}>\n                            Again, the outers and inners combine to give you <InlineMath>-39x</InlineMath>, so your answer is <InlineMath>30x^2-39x+12</InlineMath>\n\n                            Notice how both answers are trinomialsâ€”they each have 3 terms.\n\n                            Most of the time, the product of two binomials will be a trinomial. However, thatâ€™s not always the case.\n                            Look at this example.\n\n                        </p>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                <BlockMath>(2x+1)(3y-2)</BlockMath>\n                                First times first\t<InlineMath>2x</InlineMath> times <InlineMath>3y</InlineMath> equals <InlineMath>6xy</InlineMath><br/>\n                                Outer times outer\t<InlineMath>2x</InlineMath> times <InlineMath>-2</InlineMath> equals <InlineMath>-4x</InlineMath><br/>\n                                Inner times inner\t<InlineMath>1</InlineMath> times <InlineMath>3y</InlineMath> equals <InlineMath>3y</InlineMath><br/>\n                                And last times last\t<InlineMath>1</InlineMath> times <InlineMath>-2</InlineMath> equals <InlineMath>-2</InlineMath>\n\n                                <BlockMath>6xy-4x+3y-2</BlockMath>\n\n                            </p>\n                        </MDBRow>\n                        <p className={classes.ph}>\n                            Notice there are no like terms to combine, so your answer has 4 terms instead of 3.\n                        </p>\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                In the second example, <InlineMath>(3x+2)(3x-2)</InlineMath><br/>\n                                First times first\t\t<InlineMath>3x</InlineMath> times <InlineMath>3x</InlineMath> equals <InlineMath>9x^2</InlineMath><br/>\n                                Outer times outer\t<InlineMath>3x</InlineMath> times <InlineMath>-2</InlineMath> equals <InlineMath>-6x</InlineMath><br/>\n                                Inner times inner\t<InlineMath>2</InlineMath> times <InlineMath>3x</InlineMath> equals <InlineMath>6x</InlineMath><br/>\n                                And last times last\t<InlineMath>2</InlineMath> times <InlineMath>-2</InlineMath> equals <InlineMath>-4</InlineMath>\n\n                                <BlockMath>9x^2-6x+6x-4</BlockMath>\n                                <BlockMath>9x^2-4</BlockMath>\n\n                            </p>\n                        </MDBRow>\n                        <p className={classes.ph}>\n                            The outer and inner terms cancel out each other and leave you with a binomial as your answer.\n\n                            Here are some problems for you to try. You can pause the video, do the problems, and when youâ€™re done, resume the video and check your work.\n\n\n                        </p>\n                        <div className=\"problem\"></div>\n                        <MDBRow center>\n                            <MDBCol className=\"add\">\n                                <MDBCard\n                                    size=\"8\"\n                                    color=\"blue-grey\"\n                                    text=\"white\"\n                                    className=\"py-3 px-3 w-100\"\n                                    style={{boxShadow:'none', borderRadius:'0'}}\n                                >\n                                    <div className='d-flex justify-content-between'>\n                                        <div className={`${classes.pb}`}>Problem</div>\n                                        <div className='mr-3'>\n                                            <select\n                                                className=\"browser-default\"\n                                                size = 'sm'\n                                                onChange={(e)=>{\n                                                    this.handle(e.target.value);\n                                                    this.setState({\n                                                        // equation:this.str,\n                                                        select:e.target.value,\n                                                        answers:[],\n                                                        finish:false,\n                                                        step:1,\n                                                    });\n                                                }}\n                                            >\n                                                <option>Choose your format</option>\n                                                <option value=\"1\">(ax+b)(cx+d)</option>\n                                                <option value=\"2\">(ax+by)(cx+d)</option>\n                                            </select>\n                                        </div>\n                                    </div>\n\n\n\n\n                                    <p\n                                        className={`${classes.pb2}`}\n                                        style={{borderStyle:'solid',borderBottomColor:'#9e9e9e', borderWidth:'0 0 1px 0'}}\n                                    >\n                                        Solve the following:\n                                        {this.state.equation}\n                                        Begin your work by first rewriting the problem in 'Step1' in the worksheet.\n                                        <tr/><br/>\n                                    </p>\n                                    <p\n                                        className={`${classes.pb3} add`}\n\n                                        onClick={this.toggle(14)}\n                                    >\n                                        ADD YOUR OWN PROBLEM\n                                    </p>\n                                </MDBCard>\n\n                                <MDBModal isOpen={this.state.modal14} toggle={this.toggle(14)} size=\"lg\" centered>\n                                    <div className=\"p-3\">\n                                        <div\n                                            toggle={this.toggle(14)}\n\n                                            style={{\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'28px',\n                                                fontWeight:'bolder'\n                                            }}\n                                        >\n                                            Add Your Own Problem\n                                        </div>\n                                        <br/>\n                                        <div\n                                            style={{\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'16px',\n                                                fontWeight:'bolder'\n                                            }}\n                                        >\n                                            Add your own problem in the chosen format. You can set the values of a, b, c, and d below.\n                                        </div>\n                                        <div className=\"d-flex justify-content-between\">\n                                            <MDBInput\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        a: e.target.value\n                                                    });\n                                                }}\n\n                                                label=\"a\" className=\"mr-3\"  size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                            />\n                                            <MDBInput\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        b: e.target.value\n                                                    });\n                                                }}\n                                                label=\"b\" className=\"mr-3\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                            />\n                                            <MDBInput\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        c: e.target.value\n                                                    });\n                                                }}\n                                                label=\"c\" className=\"mr-3 \" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                            />\n                                            <MDBInput\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        d: e.target.value\n                                                    });\n                                                }}\n                                                label=\"d\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <MDBModalFooter>\n                                        <MDBBtn\n                                            color=\"deep-purple\"\n                                            size=\"md\"\n                                            onClick={this.toggle(14)}\n                                            style={{\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'12px',\n                                                fontWeight:'bolder'\n                                            }}\n                                        >Cancel\n                                        </MDBBtn>\n                                        <MDBBtn\n                                            className=\"orange accent-2\"\n                                            size=\"md\"\n                                            onClick={()=>{\n                                                this.handle(this.state.select);\n                                                this.setState({\n                                                    // equation:this.str,\n                                                    modal14:false,\n                                                    answers:[],\n                                                    finish:false,\n                                                    step:1,\n                                                })\n                                            }}\n                                            style={{\n                                                fontFamily:'\\'Roboto\\',sans-serif',\n                                                fontSize:'12px',\n                                                fontWeight:'bolder'\n                                            }}\n                                        >Set</MDBBtn>\n                                    </MDBModalFooter>\n                                </MDBModal>\n\n                            </MDBCol>\n                        </MDBRow>\n                        <div className=\"submit mt-5\"></div>\n                        <MDBRow center>\n\n                            <MDBCol>\n                                <div className={`${classes.worksheet} px-3 py-3`}>\n                                    <label className={classes.ws}>\n                                        Worksheet\n                                    </label>\n                                    <div\n                                        className=\"px-3 pt-3\"\n                                    >\n                                        {this.state.answers.map((item, index)=>{\n                                            return<div\n                                                key={index}\n                                                className=\"py-2 d-flex align-items-baseline\"\n                                                style={{\n                                                    border:'solid',\n                                                    borderColor:'#388e3c',\n                                                    borderWidth:'0 0 2px 0',\n                                                    fontFamily:'\\'Roboto\\',sans-serif',\n                                                    fontSize:'18px',\n                                                    fontWeight:'bolder'\n                                                }}\n                                            >\n                                                <span style={{fontWeight:'bold',color:'#388e3c'}}>Step{item[0]-1}</span> &nbsp;{item[1]}\n\n                                            </div>\n                                        })}\n                                    </div>\n                                    {!this.state.finish?(\n                                        <div className=\"px-3 d-flex align-items-baseline\">\n\n                                            <div className=\"flex-grow-1\">\n\n                                                <MDBInput\n                                                    label={`Step ${this.state.step.toString()}`}\n                                                    className=\"mr-3 submit\"\n                                                    size=\"sm\"\n                                                    value={this.state.value}\n                                                    style={this.state.isRight ?{\n                                                        border:'solid',\n                                                        borderColor:'#81c784',\n                                                        borderWidth:'0 0 2px 0',\n                                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                                        fontSize:'18px'\n                                                    }:{\n                                                        border:'solid',\n                                                        borderColor:'#d32f2f',\n                                                        borderWidth:'0 0 2px 0',\n                                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                                        fontSize:'18px'\n                                                    }}\n                                                    onChange={(e) => {\n                                                        this.setState({\n                                                            value: e.target.value\n                                                        });\n                                                    }}\n                                                />\n\n                                            </div>\n                                            <div className=\"ml-4\">\n                                                <MDBBtn\n                                                    tag=\"a\" floating className=\" green lighten-2 m-0\"\n                                                    onClick={()=>{this.post(this.state.select)}}\n                                                >\n                                                    <MDBIcon icon=\"clipboard-check\" />\n                                                </MDBBtn>\n                                                {/*<MDBBtn*/}\n                                                {/*tag=\"a\" floating className=\" orange lighten-2\"*/}\n                                                {/*>*/}\n                                                {/*<MDBIcon icon=\"microphone\" />*/}\n                                                {/*</MDBBtn>*/}\n                                            </div>\n\n                                        </div>\n                                    ):(\n                                        <p className={classes.pb4}>Finished! You got it</p>\n                                    )}\n\n\n\n                                    <div className=\"px-3 pt-3\">\n                                        <MDBCard\n                                            size=\"8\"\n                                            text=\"white\"\n                                            className=\"py-3 px-3 w-100 green lighten-3\"\n                                            style={{boxShadow:'none', borderRadius:'0'}}\n                                        >\n                                            <p className={classes.pb}>Hints/Feedback</p>\n                                            <p className={classes.pb2}>{this.state.hint}</p>\n                                            {/*<MDBRow center>*/}\n                                            {/*<MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">*/}\n                                            {/*<MDBIcon icon=\"angle-left\" />*/}\n                                            {/*</MDBBtn>*/}\n                                            {/*<MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">*/}\n                                            {/*<MDBIcon icon=\"angle-right\" />*/}\n                                            {/*</MDBBtn>*/}\n                                            {/*</MDBRow>*/}\n                                        </MDBCard>\n                                    </div>\n\n                                </div>\n                            </MDBCol>\n                        </MDBRow>\n                        <tr/><br/>\n                        <p className={classes.ph}>\n                            Using the FOIL method for multiplying binomials\n                            Helps ensure you multiply both terms in the first binomial by both terms in the second,\n                            Helps you keep your work organized as you solve the problem,\n                            And makes it easier to review your work for errors,\n\n                            So next time youâ€™re multiplying two binomials, wrap things up quickly and easily with FOIL!\n\n                        </p>\n                    </MDBCol>\n                </MDBRow>\n\n                {/*<br/>*/}\n                {/*<MDBRow center>*/}\n                {/*<MDBCol size=\"2\">*/}\n                {/*<MDBBtn*/}\n                {/*color=\"deep-purple lighten-1\"*/}\n                {/*className={`${classes.btn} w-100 mt-3`}*/}\n                {/*onClick={() => {this.props.history.goBack();}}*/}\n                {/*>Previous Lesson</MDBBtn>*/}\n                {/*</MDBCol>*/}\n                {/*<MDBCol size=\"2\">*/}\n                {/*<MDBBtn*/}\n                {/*color=\"deep-purple lighten-1\"*/}\n                {/*className={`${classes.btn} w-100 mt-3`}*/}\n                {/*onClick={() => {this.props.history.push('/complex/subt');}}*/}\n                {/*>Next Lesson</MDBBtn>*/}\n                {/*</MDBCol>*/}\n                {/*</MDBRow>*/}\n\n            </div>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}