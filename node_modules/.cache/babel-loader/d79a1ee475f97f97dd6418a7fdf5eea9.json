{"ast":null,"code":"import _classCallCheck from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vivian/Desktop/frondend/src/page/ComplexNumber/Page/Multi.js\";\nimport React from 'react';\nimport { Video } from \"../video-component/video\";\nimport { MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon } from 'mdbreact';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport classes from './index.module.css';\nimport { ComplexNumberMenu } from \"./Menu\";\nexport var ComplexMult =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComplexMult, _React$Component);\n\n  function ComplexMult(props) {\n    var _this;\n\n    _classCallCheck(this, ComplexMult);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComplexMult).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ComplexMult, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.node.scrollIntoView();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        ref: function ref(node) {\n          return _this2.node = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex align-items-baseline justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"COMPLEX NUMBERS: \\xA0\"), React.createElement(\"div\", {\n        className: classes.title2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Multiplication\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(ComplexNumberMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        size: \"6\",\n        className: classes.font3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Video, {\n        url: \"https://myedmaster.oss-us-east-1.aliyuncs.com/multcomplex.mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"You probably know by now that a complex number is a combination of a real number and an imaginary number. We generally write complex numbers in \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"a + bi\"), \"\\xA0 form,  where a is the real number and \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \" bi \"), \"\\xA0 is the imaginary number. For example, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \" + 7i \"), \"\\xA0or \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \" - 2i\"), \".\"), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Typically, whether adding, subtracting, multiplying or dividing complex numbers, we enclose each complex number inside parentheses like this\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"(6 - 5i) + (2 + 3i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"(4 + 8i) - (3 - 2i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"(7 - 4i)(5 + 9i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"(8 - 6i)/(1- 3i)\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"The process we use to multiply complex numbers is essentially the same process that we use when multiplying polynomials, but with a slight twist when working with more than one imaginary term.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), \"Let\\u2019s look at a simple problem.\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"(4 - 2i)\"), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), \"Just like with polynomials, you have to distribute the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \" 23 \"), \"\\xA0 to both the real part, the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"4\"), \", and the imaginary part, the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \" - 2i \"), \", of the complex number.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), \"\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"23(4) = 92\"), \"\\xA0 and \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"(-2i) = -46i\"), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), \"Your answer then becomes a complex number consisting of the real part, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"92\"), \", and the imaginary part,\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"-46i\"), \", or \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"(92 - 46i)\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), \"Let\\u2019s look at another problem.\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"3i(5 + 4i)\"), \"Notice now that the number outside the parentheses is an imaginary number.  You still have to distribute the 3i to both parts of the complex number\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), \"\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"3i(5) = 15i\"), \"\\xA0and \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"3i(4i) = 12i^2\"), \"\\xA0 Wait\\u2026what?  Here\\u2019s that little twist I mentioned earlier.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), \"Okay, so let\\u2019s look at this.  You\\u2019ve got \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"12i^2\"), \".  Well, we can rewrite that as \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"12(i^2)\"), \", right? And what did we learn \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"i^2\"), \"\\xA0 is?  \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"-1\"), \"\\xA0. So now we have \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"12(-1)\"), \", which gives you \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"-12\"), \".  That becomes the real part of your complex number answer, and the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"15i\"), \"\\xA0 is the imaginary part \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"(-1 + 15i)\"), \".  Here\\u2019s another one.\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"-2i(3 - 3i)\"), \"Distribute the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"-2i\"), \"\\xA0 first.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), \"\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"-2i(3) = -6i\"), \"\\xA0and \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"-2i(-3i) = 6i^2\"), \", which is \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"6(-1)\"), \", or \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"-6\"), \".  Your answer is\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"(-6 - 6i)\"), \". Probably the most important thing to remember when multiplying complex numbers is to be careful of signs when distributing and multiplying, and again when simplifying any powers of \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"i\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), \"Now we\\u2019ll move on to multiplying two complex numbers together.  Remember, the process is the same as multiplying two binomials, but we have that extra twist associated with any powers of \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"i\"), \".\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"(3 - 2i)(4 + 3i)\"), \"Just like multiplying two binomials, you can use the FOIL method when multiplying two complex numbers.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), \"First times first, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"3(4) = 12\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), \"Outer times outer, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"3(3i) = 9i\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), \"Inner times inner, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"-2i(4) = -8i\"), \"\\xA0  watch those signs!\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), \"Last times last, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"-2i(3i) = -6i^2\"), \", or \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"-6(-1)\"), \" \\xA0or \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"6\"), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), \"And then, just like with multiplying binomials, you combine like terms \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"9i - 8i = i\"), \" \\xA0 and \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"12 + 6 = 18\"), \", so your answer is \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"(18 + i)\"), \". It\\u2019s really pretty simple, as long as you pay attention to your signs.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), \"Let\\u2019s try another problem.\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"(-5 + 2i) (2 - 4i)\"), \"FOIL first.\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"-5(2) = -10\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"-5(-4i) = 20i\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"2i(2) = 4i\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"2i(-4i) = -8i^22 = -8(-1) = 8.\"), \"Combine like terms next.  \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"-10 + 8 = -2\"), \"\\xA0 \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"-10 + 8 = -2\"), \"\\xA0 and \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"20i + 4i = 24i\"), \". And your answer is \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"(-2 + 24i)\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), \"Here are some problems for you to try\"), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"(2 - 3i)(-1 + 6i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"(13 + 2i)(4 + i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"(8 - 5i)(3 - 5i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"(-4 + 16i)(4 - 4i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"(7 + 11i)(9 + 3i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"(42 - 7i)(1 + 2i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"(-3 - 3i)(-3 - 3i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"25(3 - 4i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"-3i(4 - 6i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"(10 - 8i)(6 + 5i)\"))))), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"\".concat(classes.worksheet, \" px-3 py-3\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: classes.ws,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Worksheet\"), React.createElement(\"div\", {\n        className: \"p-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control\",\n        id: \"exampleFormControlTextarea1\",\n        rows: \"10\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '1px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        gradient: \"peach\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"thumbs-up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        gradient: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })), React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        disabled: true,\n        className: \"grey lighten-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"clipboard-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(MDBCard, {\n        size: \"8\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100 orange lighten-1\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.pb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Hints/Feedback\"), React.createElement(\"p\", {\n        className: classes.pb2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Type in the complex numbers you're adding to organize your thoughts\"), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        disabled: true,\n        className: \"grey lighten-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"angle-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        disabled: true,\n        className: \"grey lighten-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"angle-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple lighten-1\",\n        className: \"\".concat(classes.btn, \" w-100 mt-3\"),\n        onClick: function onClick() {\n          _this2.props.history.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Previous Lesson\")), React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple lighten-1\",\n        className: \"\".concat(classes.btn, \" w-100 mt-3\"),\n        onClick: function onClick() {\n          _this2.props.history.push('/complex/divi');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Next Lesson\"))));\n    }\n  }]);\n\n  return ComplexMult;\n}(React.Component);","map":{"version":3,"sources":["/Users/vivian/Desktop/frondend/src/page/ComplexNumber/Page/Multi.js"],"names":["React","Video","MDBRow","MDBCol","MDBBtn","MDBCard","MDBIcon","InlineMath","BlockMath","classes","ComplexNumberMenu","ComplexMult","props","state","node","scrollIntoView","title1","title2","font3","ph","border","ph2","worksheet","ws","borderColor","borderWidth","boxShadow","borderRadius","pb","pb2","btn","history","goBack","push","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Video} from \"../video-component/video\";\nimport {MDBRow, MDBCol,MDBBtn, MDBCard, MDBIcon} from 'mdbreact'\nimport { InlineMath, BlockMath } from 'react-katex';\n\nimport classes from './index.module.css'\nimport {ComplexNumberMenu} from \"./Menu\";\n\n\nexport class ComplexMult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n\n    }\n    componentDidMount() {\n        this.node.scrollIntoView();\n    }\n    render() {\n        return (\n            <div ref={node => this.node = node}>\n                <div className=\"d-flex align-items-baseline justify-content-center\">\n                    <div className={classes.title1}>\n                        COMPLEX NUMBERS: &nbsp;\n                    </div>\n                    <div className={classes.title2}>\n                        Multiplication\n                    </div>\n                </div>\n\n                <MDBRow>\n                    <MDBCol size=\"3\">\n                        <ComplexNumberMenu/>\n                    </MDBCol>\n                    <MDBCol size=\"6\" className={classes.font3}>\n                        <Video url='https://myedmaster.oss-us-east-1.aliyuncs.com/multcomplex.mp4'/>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol size=\"3\">\n\n                    </MDBCol>\n                    <MDBCol size=\"6\">\n                        <p className={classes.ph}>\n                            You probably know by now that a complex number is a combination of a real number and an imaginary number.\n                            We generally write complex numbers in &nbsp;<InlineMath>a + bi</InlineMath>&nbsp; form,  where a is the real number and &nbsp;<InlineMath> bi </InlineMath>&nbsp; is the imaginary number.\n                            For example, &nbsp;<InlineMath> + 7i </InlineMath>&nbsp;or <InlineMath> - 2i</InlineMath>.\n                        </p>\n                        <p className={classes.ph}>\n                            Typically, whether adding, subtracting, multiplying or dividing complex numbers, we enclose each complex number inside parentheses like this\n                        </p>\n                        <br/>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                <BlockMath>(6 - 5i) + (2 + 3i)</BlockMath>\n                                <BlockMath>(4 + 8i) - (3 - 2i)</BlockMath>\n                                <BlockMath>(7 - 4i)(5 + 9i)</BlockMath>\n                                <BlockMath>(8 - 6i)/(1- 3i)</BlockMath>\n                            </p>\n                        </MDBRow>\n                        <br/>\n                        <p className={classes.ph}>\n                            The process we use to multiply complex numbers is essentially the same process that we use when multiplying polynomials, but with a slight twist when working with more than one imaginary term.\n                            <tr/><br/>\n                            Let’s look at a simple problem.\n                            <BlockMath>(4 - 2i)</BlockMath>\n                            <tr/><br/>\n                            Just like with polynomials, you have to distribute the &nbsp;<InlineMath> 23 </InlineMath>&nbsp;\n                            to both the real part, the &nbsp;<InlineMath>4</InlineMath>, and the imaginary part, the &nbsp;<InlineMath> - 2i </InlineMath>, of the complex number.\n                            <tr/><br/>\n                            &nbsp;<InlineMath>23(4) = 92</InlineMath>&nbsp; and &nbsp;<InlineMath>(-2i) = -46i</InlineMath>\n                            <tr/><br/>\n                            Your answer then becomes a complex number consisting of the real part, &nbsp;<InlineMath>92</InlineMath>, and the imaginary part,&nbsp;<InlineMath>-46i</InlineMath>,\n                            or &nbsp;<InlineMath>(92 - 46i)</InlineMath>.\n                            <tr/><br/>\n                            Let’s look at another problem.\n                            <BlockMath>3i(5 + 4i)</BlockMath>\n                            Notice now that the number outside the parentheses is an imaginary number.  You still have to distribute the 3i to both parts of the complex number\n                            <tr/><br/>\n                            &nbsp;<InlineMath>3i(5) = 15i</InlineMath>&nbsp;and &nbsp;<InlineMath>3i(4i) = 12i^2</InlineMath>&nbsp; Wait…what?  Here’s that little twist I mentioned earlier.\n                            <tr/><br/>\n                            Okay, so let’s look at this.  You’ve got &nbsp;<InlineMath>12i^2</InlineMath>.  Well, we can rewrite that as &nbsp;<InlineMath>12(i^2)</InlineMath>, right?\n                            And what did we learn &nbsp;<InlineMath>i^2</InlineMath>&nbsp; is?  &nbsp;<InlineMath>-1</InlineMath>&nbsp;.\n                            So now we have &nbsp;<InlineMath>12(-1)</InlineMath>, which gives you &nbsp;<InlineMath>-12</InlineMath>.  That becomes the real part of your complex number answer,\n                            and the &nbsp;<InlineMath>15i</InlineMath>&nbsp; is the imaginary part &nbsp;<InlineMath>(-1 + 15i)</InlineMath>.  Here’s another one.\n                            <BlockMath>-2i(3 - 3i)</BlockMath>\n                            Distribute the &nbsp;<InlineMath>-2i</InlineMath>&nbsp; first.\n                            <tr/><br/>\n                            &nbsp;<InlineMath>-2i(3) = -6i</InlineMath>&nbsp;and &nbsp;<InlineMath>-2i(-3i) = 6i^2</InlineMath>,\n                            which is &nbsp;<InlineMath>6(-1)</InlineMath>, or &nbsp;<InlineMath>-6</InlineMath>.  Your answer is&nbsp;<InlineMath>(-6 - 6i)</InlineMath>.\n                            Probably the most important thing to remember when multiplying complex numbers is to be careful of signs when distributing and multiplying,\n                            and again when simplifying any powers of &nbsp;<InlineMath>i</InlineMath>.\n                            <tr/><br/>\n                            Now we’ll move on to multiplying two complex numbers together.  Remember, the process is the same as multiplying two binomials,\n                            but we have that extra twist associated with any powers of &nbsp;<InlineMath>i</InlineMath>.\n                            <BlockMath>(3 - 2i)(4 + 3i)</BlockMath>\n                            Just like multiplying two binomials, you can use the FOIL method when multiplying two complex numbers.\n                            <br/><tr/>\n                            First times first, &nbsp;<InlineMath>3(4) = 12</InlineMath>\n                            <br/>\n                            Outer times outer, &nbsp;<InlineMath>3(3i) = 9i</InlineMath>\n                            <br/>\n                            Inner times inner, &nbsp;<InlineMath>-2i(4) = -8i</InlineMath>&nbsp;  watch those signs!\n                            <br/>\n                            Last times last, &nbsp;<InlineMath>-2i(3i) = -6i^2</InlineMath>, or &nbsp;<InlineMath>-6(-1)</InlineMath> &nbsp;or &nbsp;<InlineMath>6</InlineMath>\n                            <tr/><br/>\n                            And then, just like with multiplying binomials, you combine like terms\n\n                            &nbsp;<InlineMath>9i - 8i = i</InlineMath> &nbsp; and &nbsp;<InlineMath>12 + 6 = 18</InlineMath>, so your answer is &nbsp;<InlineMath>(18 + i)</InlineMath>.\n                            It’s really pretty simple, as long as you pay attention to your signs.\n                            <tr/><br/>\n                            Let’s try another problem.\n                            <BlockMath>(-5 + 2i) (2 - 4i)</BlockMath>\n                            FOIL first.\n                            <BlockMath>-5(2) = -10</BlockMath>\n                            <BlockMath>-5(-4i) = 20i</BlockMath>\n                            <BlockMath>2i(2) = 4i</BlockMath>\n                            <BlockMath>2i(-4i) = -8i^22 = -8(-1) = 8.</BlockMath>\n                            Combine like terms next.  &nbsp;<InlineMath>-10 + 8 = -2</InlineMath>&nbsp; &nbsp;<InlineMath>-10 + 8 = -2</InlineMath>&nbsp;\n                            and &nbsp;<InlineMath>20i + 4i = 24i</InlineMath>.\n                            And your answer is &nbsp;<InlineMath>(-2 + 24i)</InlineMath>.\n                            <tr/><br/>\n                            Here are some problems for you to try\n                        </p>\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                <BlockMath>(2 - 3i)(-1 + 6i)</BlockMath>\n                                <BlockMath>(13 + 2i)(4 + i)</BlockMath>\n                                <BlockMath>(8 - 5i)(3 - 5i)</BlockMath>\n                                <BlockMath>(-4 + 16i)(4 - 4i)</BlockMath>\n                                <BlockMath>(7 + 11i)(9 + 3i)</BlockMath>\n                                <BlockMath>(42 - 7i)(1 + 2i)</BlockMath>\n                                <BlockMath>(-3 - 3i)(-3 - 3i)</BlockMath>\n                                <BlockMath>25(3 - 4i)</BlockMath>\n                                <BlockMath>-3i(4 - 6i)</BlockMath>\n                                <BlockMath>(10 - 8i)(6 + 5i)</BlockMath>\n                            </p>\n                        </MDBRow>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow center>\n                    <MDBCol size=\"8\">\n                        {/*<MDBCard*/}\n                            {/*size=\"8\"*/}\n                            {/*color=\"blue-grey\"*/}\n                            {/*text=\"white\"*/}\n                            {/*className=\"py-3 px-3 w-100\"*/}\n                            {/*style={{boxShadow:'none', borderRadius:'0'}}*/}\n                        {/*>*/}\n                            {/*<p className={classes.pb}>Problem</p>*/}\n                            {/*<p className={classes.pb2}>Simplify the following 2+7i + 9+9i</p>*/}\n                        {/*</MDBCard>*/}\n                        <br/>\n                        <div className={`${classes.worksheet} px-3 py-3`}>\n                            <label className={classes.ws}>\n                                Worksheet\n                            </label>\n                            <div className=\"p-1\">\n                                 <textarea\n                                     className=\"form-control\"\n                                     id=\"exampleFormControlTextarea1\"\n                                     rows=\"10\"\n                                     style={{border:'solid',borderColor:'#7e57c2', borderWidth:'1px'}}\n                                 />\n                            </div>\n                            <MDBRow center>\n                                <MDBBtn tag=\"a\" floating gradient=\"peach\">\n                                    <MDBIcon icon=\"thumbs-up\" />\n                                </MDBBtn>\n                                <MDBBtn tag=\"a\" floating gradient=\"blue\">\n                                    <MDBIcon icon=\"check\" />\n                                </MDBBtn>\n                                <MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">\n                                    <MDBIcon icon=\"clipboard-check\" />\n                                </MDBBtn>\n                            </MDBRow>\n\n                        </div>\n                        <br/>\n                        <MDBCard\n                            size=\"8\"\n                            text=\"white\"\n                            className=\"py-3 px-3 w-100 orange lighten-1\"\n                            style={{boxShadow:'none', borderRadius:'0'}}\n                        >\n                            <p className={classes.pb}>Hints/Feedback</p>\n                            <p className={classes.pb2}>Type in the complex numbers you're adding to organize your thoughts</p>\n                            <MDBRow center>\n                                <MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">\n                                    <MDBIcon icon=\"angle-left\" />\n                                </MDBBtn>\n                                <MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">\n                                    <MDBIcon icon=\"angle-right\" />\n                                </MDBBtn>\n                            </MDBRow>\n\n                        </MDBCard>\n                    </MDBCol>\n\n                </MDBRow>\n                <br/>\n                <MDBRow center>\n                    <MDBCol size=\"2\">\n                        <MDBBtn\n                            color=\"deep-purple lighten-1\"\n                            className={`${classes.btn} w-100 mt-3`}\n                            onClick={() => {this.props.history.goBack();}}\n                        >Previous Lesson</MDBBtn>\n                    </MDBCol>\n                    <MDBCol size=\"2\">\n                        <MDBBtn\n                            color=\"deep-purple lighten-1\"\n                            className={`${classes.btn} w-100 mt-3`}\n                            onClick={() => {this.props.history.push('/complex/divi');}}\n                        >Next Lesson</MDBBtn>\n                    </MDBCol>\n                </MDBRow>\n\n            </div>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}