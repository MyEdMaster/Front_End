{"ast":null,"code":"import _classCallCheck from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vivian/Desktop/frondend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vivian/Desktop/frondend/src/page/ComplexNumber/Page/feedback.js\";\nimport React from 'react';\nimport classes from '../../ComplexNumber/Page/index.module.css';\nimport classes2 from './index.module.css';\nimport { MDBBtn, MDBCard, MDBCol, MDBIcon, MDBModalBody, MDBRow } from \"mdbreact\";\nimport { handleSyn } from \"../../RRH/Component/speech-syn\";\nimport { cancelSyn } from \"../../RRH/Component/speech-syn\";\nimport { url } from \"../../../tool/fetch-help\";\nimport Joyride from 'react-joyride';\nimport { ComplexNumberMenu } from \"./Menu\";\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nvar recognition = new SpeechRecognition();\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\nexport var ComplexFeedback =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComplexFeedback, _React$Component);\n\n  function ComplexFeedback(props) {\n    var _this;\n\n    _classCallCheck(this, ComplexFeedback);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComplexFeedback).call(this, props));\n\n    _this.searchAnswer = function (value) {\n      //cancelSyn()\n      console.log(_this.state.backend.content[_this.state.index].id);\n      var option = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          question_id: _this.state.backend.content[_this.state.index].id,\n          answer: value // \"question\":this.state.backend.content[this.state.index].id,\n          // \"answer\":value\n\n        })\n      };\n      fetch(\"\".concat(url, \"/analyse_answer/a2\"), option).then(function (response) {\n        return response.json();\n      }).then(function (answer) {\n        _this.setState({\n          backendjson: answer\n        });\n\n        switch (answer.type) {\n          case '1':\n            _this.setState({\n              feedback: '',\n              index: _this.state.index + 1,\n              type: 1,\n              tag: 'Yes! You got it.'\n            });\n\n            handleSyn('Yes! You got it.');\n\n            if (_this.state.index <= _this.state.backend.content.length) {\n              handleSyn(_this.state.backend.content[_this.state.index].question.replace('?', '.'));\n            }\n\n            break;\n\n          case '2':\n            _this.setState({\n              tag: 'Is that what you are answering?',\n              feedback: answer.answer,\n              type: 2\n            });\n\n            handleSyn('Is that what you are answering');\n            handleSyn(answer.answer.replace('?', '.'));\n            break;\n\n          case '3':\n            _this.setState({\n              feedback: answer.answer,\n              tag: 'No.',\n              type: 3\n            });\n\n            handleSyn('No, the answer is');\n            handleSyn(answer.answer.replace('?', '.'));\n        }\n      });\n    };\n\n    _this.state = {\n      listening: false,\n      speechState: 'Click to start...',\n      hints: '',\n      backendjson: '',\n      backend: '',\n      question: '',\n      answer: '',\n      type: 0,\n      tag: '',\n      render: 0,\n      index: 0,\n      feedback: '',\n      steps: [{\n        target: \".question\",\n        content: \"We ask your questions to make sure if you understand our story. Once your answer is right, there will be a new question\"\n      }, {\n        target: \".input\",\n        content: \"Input your answer here\"\n      }]\n    };\n    _this.toggleListen = _this.toggleListen.bind(_assertThisInitialized(_this));\n    _this.handleListen = _this.handleListen.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ComplexFeedback, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var option = {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json'\n        }\n      };\n      fetch(\"\".concat(url, \"/feedback/CN/question\"), option).then(function (response) {\n        return response.json();\n      }).then(function (question) {\n        _this2.setState({\n          backend: question,\n          render: 1\n        });\n\n        handleSyn(_this2.state.backend.content[0].question.replace('?', '.'));\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      handleSyn(this.state.answer);\n    }\n  }, {\n    key: \"toggleListen\",\n    //--------------Speech Recognition--------------\n    value: function toggleListen() {\n      cancelSyn();\n      this.setState({\n        listening: !this.state.listening\n      }, this.handleListen);\n    }\n  }, {\n    key: \"handleListen\",\n    value: function handleListen() {\n      var _this3 = this;\n\n      console.log('listening?', this.state.listening);\n\n      if (this.state.listening) {\n        recognition.start();\n\n        recognition.onend = function () {\n          _this3.setState({\n            speechState: '...continue listening...'\n          });\n\n          recognition.start();\n        };\n      } else {\n        recognition.stop();\n\n        recognition.onend = function () {\n          _this3.setState({\n            speechState: 'Click to start...'\n          });\n        };\n      }\n\n      recognition.onstart = function () {\n        _this3.setState({\n          speechState: 'Listening...Click to pause'\n        });\n      };\n\n      var finalTranscript = '';\n\n      recognition.onresult = function (event) {\n        var interimTranscript = '';\n\n        for (var i = event.resultIndex; i < event.results.length; i++) {\n          var transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) finalTranscript += transcript + ' ';else interimTranscript += transcript;\n        }\n\n        _this3.setState({\n          answer: finalTranscript\n        });\n\n        document.getElementById('interim').innerHTML = interimTranscript;\n        document.getElementById('final').value = finalTranscript; //-------------------------COMMANDS------------------------------------\n\n        var transcriptArr = finalTranscript.split(' ');\n        var stopCmd = transcriptArr.slice(-3, -1);\n        console.log('stopCmd', stopCmd);\n\n        if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening') {\n          recognition.stop();\n\n          recognition.onend = function () {\n            console.log('Stopped listening per command');\n            var finalText = transcriptArr.slice(0, -3).join(' ');\n            document.getElementById('final').value = finalText;\n          };\n        }\n      }; //-----------------------------------------------------------------------\n\n\n      recognition.onerror = function (event) {\n        console.log(\"Error occurred in recognition: \" + event.error);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      if (this.state.render === 1) {\n        var steps = this.state.steps; //console.log(this.state.backend.content[0])\n\n        return React.createElement(\"div\", {\n          className: \"\".concat(classes.body, \" align-content-center w-100 h-100 text-center\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(Joyride, {\n          steps: steps,\n          continuous: true,\n          scrollToFirstStep: true,\n          scrollToSteps: false,\n          styles: {\n            options: {\n              primaryColor: '#F1831D',\n              zIndex: 1000\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"d-flex align-items-baseline justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.title1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, \"Q & A\")), React.createElement(MDBRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(MDBCol, {\n          size: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(ComplexNumberMenu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        })), React.createElement(MDBCol, {\n          size: \"8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes2.ph,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, \"Great! Now you finish the course and we have some question for you to answer.\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: classes2.border,\n          style: {\n            borderWidth: '1px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"\".concat(classes2.ph, \" question\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, this.state.index <= this.state.backend.content.length ? this.state.backend.content[this.state.index].question : 'All questions have been done!'), React.createElement(\"div\", {\n          className: \"d-flex justify-content-center align-content-start mt-3 mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"flex-grow-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: \"final\",\n          className: \"form-control form-control-lg input \".concat(classes.searchInput),\n          placeholder: \"Answer question here\",\n          style: {\n            borderStyle: 'solid',\n            borderWidth: '1px',\n            borderColor: '#7e57c2',\n            borderRadius: '15px',\n            fontFamily: '\\'Rajdhani\\', sans-serif',\n            fontSize: '22px'\n          },\n          onChange: function onChange(e) {\n            var str = e.target.value;\n\n            _this4.setState({\n              answer: str\n            });\n          },\n          onKeyDown: function onKeyDown(e) {\n            if (e.keyCode === 13) {\n              if (_this4.state.answer === '') {\n                alert('Please input your answer');\n              } else {\n                _this4.searchAnswer(_this4.state.answer);\n              }\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"ml-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          tag: \"a\",\n          floating: true,\n          color: \"purple\",\n          style: {\n            margin: '6px'\n          },\n          onClick: function onClick() {\n            if (_this4.state.answer === '') {\n              alert('Please input your answer');\n            } else {\n              _this4.searchAnswer(_this4.state.answer);\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"question\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"ml-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          tag: \"a\",\n          floating: true,\n          color: \"orange lighten-2\",\n          style: {\n            margin: '6px'\n          },\n          onClick: this.toggleListen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"microphone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes2.body2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, this.state.speechState), React.createElement(\"div\", {\n          id: \"interim\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          size: \"8\",\n          text: \"white\",\n          className: \"py-1 px-3 w-100\",\n          style: {\n            boxShadow: 'none',\n            borderRadius: '0px',\n            backgroundColor: '#e8eaf6'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: classes2.fb2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, this.state.tag), React.createElement(\"p\", {\n          className: classes2.fb2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, this.state.feedback), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, this.state.type === 2 ? React.createElement(\"div\", {\n          className: \"d-flex justify-content-center align-items-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          tag: \"a\",\n          floating: true,\n          className: \"green\",\n          onClick: function onClick() {\n            cancelSyn();\n\n            _this4.setState({\n              type: 1,\n              tag: 'Yes, you got it',\n              feedback: _this4.state.backendjson.answer\n            });\n\n            handleSyn('Yes, you got it.');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        })), React.createElement(MDBBtn, {\n          tag: \"a\",\n          floating: true,\n          className: \"red lighten-1\",\n          onClick: function onClick() {\n            cancelSyn();\n\n            _this4.setState({\n              type: 1,\n              tag: 'No',\n              feedback: _this4.state.backendjson.answer\n            });\n\n            handleSyn('No, the answer is');\n            handleSyn(_this4.state.backendjson.answer.replace('?', '.'));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"times\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }))) : null)))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }))));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return ComplexFeedback;\n}(React.Component);","map":{"version":3,"sources":["/Users/vivian/Desktop/frondend/src/page/ComplexNumber/Page/feedback.js"],"names":["React","classes","classes2","MDBBtn","MDBCard","MDBCol","MDBIcon","MDBModalBody","MDBRow","handleSyn","cancelSyn","url","Joyride","ComplexNumberMenu","SpeechRecognition","window","webkitSpeechRecognition","recognition","continous","interimResults","lang","ComplexFeedback","props","searchAnswer","value","console","log","state","backend","content","index","id","option","method","headers","body","JSON","stringify","question_id","answer","fetch","then","response","json","setState","backendjson","type","feedback","tag","length","question","replace","listening","speechState","hints","render","steps","target","toggleListen","bind","handleListen","start","onend","stop","onstart","finalTranscript","onresult","event","interimTranscript","i","resultIndex","results","transcript","isFinal","document","getElementById","innerHTML","transcriptArr","split","stopCmd","slice","finalText","join","onerror","error","options","primaryColor","zIndex","title1","ph","border","borderWidth","searchInput","borderStyle","borderColor","borderRadius","fontFamily","fontSize","e","str","keyCode","alert","margin","body2","boxShadow","backgroundColor","fb2","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classes from '../../ComplexNumber/Page/index.module.css';\nimport classes2 from './index.module.css'\n\n\nimport {MDBBtn, MDBCard, MDBCol, MDBIcon, MDBModalBody, MDBRow} from \"mdbreact\";\nimport {handleSyn} from \"../../RRH/Component/speech-syn\";\nimport {cancelSyn} from \"../../RRH/Component/speech-syn\";\nimport {url} from \"../../../tool/fetch-help\";\nimport Joyride from 'react-joyride';\nimport {ComplexNumberMenu} from \"./Menu\";\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\n\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n\nexport class ComplexFeedback extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listening: false,\n            speechState:'Click to start...',\n            hints:'',\n            backendjson:'',\n            backend:'',\n            question:'',\n            answer:'',\n            type:0,\n            tag:'',\n            render:0,\n            index:0,\n            feedback:'',\n            steps: [\n                {\n                    target: \".question\",\n                    content: \"We ask your questions to make sure if you understand our story. Once your answer is right, there will be a new question\"\n                },\n                {\n                    target: \".input\",\n                    content: \"Input your answer here\"\n                }\n            ]\n        };\n        this.toggleListen = this.toggleListen.bind(this)\n        this.handleListen = this.handleListen.bind(this)\n    }\n    componentDidMount() {\n        const option={\n            method:'GET',\n            headers: {\n                'content-type': 'application/json',\n            }\n        }\n        fetch(`${url}/feedback/CN/question`,option)\n            .then(response=>response.json())\n            .then(question=>{\n                this.setState({\n                    backend:question,\n                    render:1\n                })\n                handleSyn(this.state.backend.content[0].question.replace('?', '.'))\n            })\n    }\n    componentWillMount() {\n        handleSyn(this.state.answer)\n    }\n\n\n    searchAnswer=(value)=>{\n        //cancelSyn()\n        console.log(this.state.backend.content[this.state.index].id)\n        const option={\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body:JSON.stringify({\n                question_id:this.state.backend.content[this.state.index].id,\n                answer:value,\n                // \"question\":this.state.backend.content[this.state.index].id,\n                // \"answer\":value\n            })\n        };\n        fetch(`${url}/analyse_answer/a2`,option)\n            .then(response=>response.json())\n            .then(answer=>{\n                this.setState({\n                    backendjson:answer\n                })\n                switch (answer.type) {\n                    case '1':\n                        this.setState({\n                            feedback:'',\n                            index:this.state.index + 1,\n                            type:1,\n                            tag:'Yes! You got it.'\n                        });\n                        handleSyn('Yes! You got it.');\n                        if(this.state.index <= this.state.backend.content.length){\n                            handleSyn(this.state.backend.content[this.state.index].question.replace('?', '.'))\n                        }\n                        break;\n                    case '2':\n                        this.setState({\n                            tag:'Is that what you are answering?',\n                            feedback:answer.answer,\n                            type:2\n                        });\n                        handleSyn('Is that what you are answering');\n                        handleSyn((answer.answer.replace('?', '.')));\n\n                        break;\n                    case '3':\n                        this.setState({\n                            feedback:answer.answer,\n                            tag:'No.',\n                            type:3\n                        });\n                        handleSyn('No, the answer is');\n                        handleSyn((answer.answer.replace('?', '.')));\n                }\n            })\n    }\n\n    //--------------Speech Recognition--------------\n    toggleListen() {\n        cancelSyn()\n        this.setState({\n            listening: !this.state.listening\n        }, this.handleListen)\n    }\n\n    handleListen() {\n\n        console.log('listening?', this.state.listening)\n\n        if (this.state.listening) {\n            recognition.start();\n            recognition.onend = () => {\n                this.setState({\n                    speechState:'...continue listening...'\n                });\n                recognition.start()\n            }\n\n        } else {\n            recognition.stop();\n            recognition.onend = () => {\n                this.setState({\n                    speechState:'Click to start...'\n                });\n            }\n        }\n\n        recognition.onstart = () => {\n            this.setState({\n                speechState:'Listening...Click to pause'\n            });\n        };\n\n        let finalTranscript = '';\n        recognition.onresult = event => {\n            let interimTranscript = '';\n\n            for (let i = event.resultIndex; i < event.results.length; i++) {\n                const transcript = event.results[i][0].transcript;\n                if (event.results[i].isFinal) finalTranscript += transcript + ' ';\n                else interimTranscript += transcript;\n            }\n\n            this.setState({\n                answer:finalTranscript\n            });\n            document.getElementById('interim').innerHTML = interimTranscript;\n            document.getElementById('final').value = finalTranscript;\n\n            //-------------------------COMMANDS------------------------------------\n\n            const transcriptArr = finalTranscript.split(' ');\n            const stopCmd = transcriptArr.slice(-3, -1);\n            console.log('stopCmd', stopCmd);\n\n            if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening'){\n                recognition.stop();\n                recognition.onend = () => {\n                    console.log('Stopped listening per command');\n                    const finalText = transcriptArr.slice(0, -3).join(' ');\n                    document.getElementById('final').value = finalText\n                }\n            }\n        }\n\n        //-----------------------------------------------------------------------\n\n        recognition.onerror = event => {\n            console.log(\"Error occurred in recognition: \" + event.error)\n        }\n\n    }\n\n    render() {\n        if (this.state.render === 1){\n            const { steps } = this.state;\n            //console.log(this.state.backend.content[0])\n            return (\n                <div className={`${classes.body} align-content-center w-100 h-100 text-center`}>\n                    <Joyride\n                        steps={steps}\n                        continuous={true}\n                        scrollToFirstStep={true}\n                        scrollToSteps={false}\n                        styles={{\n                            options: {\n                                primaryColor: '#F1831D',\n                                zIndex: 1000,\n                            }\n                        }}\n                    />\n\n                    <div className=\"d-flex align-items-baseline justify-content-center\">\n                        <div className={classes.title1}>\n                            Q & A\n                        </div>\n                    </div>\n                    <MDBRow>\n                        <MDBCol size=\"2\">\n                            <ComplexNumberMenu/>\n                        </MDBCol>\n                        <MDBCol size=\"8\">\n                            <div className={classes2.ph}>\n                                Great! Now you finish the course and we have some question for you to answer.\n                            </div>\n                            <br/>\n\n                            <div className={classes2.border} style={{borderWidth:'1px'}}>\n\n                                <p className={`${classes2.ph} question`}>\n                                    {this.state.index <= this.state.backend.content.length?\n                                    this.state.backend.content[this.state.index].question\n                                    :'All questions have been done!'}\n                                </p>\n\n                                <div className=\"d-flex justify-content-center align-content-start mt-3 mb-3\">\n                                    <div className=\"flex-grow-1\">\n                                        <input\n                                            id='final'\n                                            className={`form-control form-control-lg input ${classes.searchInput}`}\n                                            placeholder=\"Answer question here\"\n                                            style={{\n                                                borderStyle:'solid',\n                                                borderWidth:'1px',\n                                                borderColor:'#7e57c2',\n                                                borderRadius:'15px',\n                                                fontFamily:'\\'Rajdhani\\', sans-serif',\n                                                fontSize:'22px',\n                                            }}\n                                            onChange={(e) => {\n                                                const str=e.target.value;\n                                                this.setState({\n                                                    answer: str\n                                                });\n                                            }}\n                                            onKeyDown={(e) =>{\n                                                if(e.keyCode===13){\n                                                    if(this.state.answer===''){\n                                                        alert('Please input your answer')\n                                                    }\n                                                    else{\n                                                        this.searchAnswer(this.state.answer)\n                                                    }}\n                                                }\n                                            }\n                                        />\n                                    </div>\n                                    <div className=\"ml-3\">\n                                        <MDBBtn\n                                            tag=\"a\" floating color=\"purple\" style={{margin:'6px'}}\n                                            onClick={()=>{\n                                                if(this.state.answer===''){\n                                                    alert('Please input your answer')\n                                                }\n                                                else{\n                                                    this.searchAnswer(this.state.answer)\n                                                }\n                                            }}\n                                        >\n                                            <MDBIcon icon=\"question\" />\n                                        </MDBBtn>\n                                    </div>\n                                    <div className=\"ml-1\">\n                                        <MDBBtn\n                                            tag=\"a\" floating color=\"orange lighten-2\" style={{margin:'6px'}}\n                                            onClick={this.toggleListen}\n                                        >\n                                            <MDBIcon icon=\"microphone\" />\n                                        </MDBBtn>\n\n                                    </div>\n                                </div>\n                                <div>\n                                    <div className={classes2.body2}>{this.state.speechState}</div>\n                                    <div id='interim'></div>\n                                </div>\n                                {/*<div className=\"mt-3\">*/}\n                                    {/*<MDBCard*/}\n                                        {/*size=\"8\"*/}\n                                        {/*text=\"white\"*/}\n                                        {/*className=\"py-1 px-3 w-100\"*/}\n                                        {/*style={{boxShadow:'none', borderRadius:'0px'}}*/}\n                                    {/*>*/}\n                                        {/*/!*<p*!/*/}\n                                        {/*/!*style={{borderStyle:'solid',borderColor:'#54B948',borderWidth:'0 0 0 0'}}*!/*/}\n                                        {/*/!*className={classes2.pb1}*!/*/}\n                                        {/*/!*>Hints/Feedback</p>*!/*/}\n                                        {/*<p className={classes2.fb2}>{this.state.tag}</p>*/}\n\n                                        {/*<p className={classes2.fb2}>{this.state.feedback}</p>*/}\n                                    {/*</MDBCard>*/}\n                                {/*</div>*/}\n                                <div className=\"mt-3\">\n                                    <MDBCard\n                                        size=\"8\"\n                                        text=\"white\"\n                                        className=\"py-1 px-3 w-100\"\n                                        style={{boxShadow:'none', borderRadius:'0px',backgroundColor:'#e8eaf6'}}\n                                    >\n\n                                        <p className={classes2.fb2}>{this.state.tag}</p>\n\n                                        <p className={classes2.fb2}>{this.state.feedback}</p>\n                                        <div>\n                                            {this.state.type === 2? (\n                                                <div className=\"d-flex justify-content-center align-items-center\">\n\n                                                    <MDBBtn\n                                                        tag=\"a\" floating className=\"green\"\n                                                        onClick={()=>{\n                                                            cancelSyn()\n                                                            this.setState({\n                                                                type:1,\n                                                                tag:'Yes, you got it',\n                                                                feedback:this.state.backendjson.answer\n                                                            })\n                                                            handleSyn('Yes, you got it.')\n                                                        }}\n                                                    >\n                                                        <MDBIcon icon=\"check\" />\n                                                    </MDBBtn>\n                                                    <MDBBtn\n                                                        tag=\"a\" floating className=\"red lighten-1\"\n                                                        onClick={()=>{\n                                                            cancelSyn()\n                                                            this.setState({\n                                                                type:1,\n                                                                tag:'No',\n                                                                feedback:this.state.backendjson.answer\n                                                            })\n                                                            handleSyn('No, the answer is')\n                                                            handleSyn((this.state.backendjson.answer.replace('?', '.')));\n                                                        }}\n                                                    >\n                                                        <MDBIcon icon=\"times\" />\n                                                    </MDBBtn>\n                                                </div>\n                                            ):(null)\n                                            }\n                                        </div>\n                                    </MDBCard>\n                                </div>\n                            </div>\n                            <br/>\n                        </MDBCol>\n\n                    </MDBRow>\n\n                </div>\n            );\n        }\n        else{\n            return(\n                null\n            );\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}